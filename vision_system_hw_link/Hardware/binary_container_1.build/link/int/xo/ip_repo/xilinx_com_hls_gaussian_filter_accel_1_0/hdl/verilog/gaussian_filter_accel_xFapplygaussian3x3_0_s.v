// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gaussian_filter_accel_xFapplygaussian3x3_0_s (
        ap_clk,
        ap_rst,
        D1,
        D2,
        D3,
        D4,
        D5,
        D6,
        D7,
        D8,
        D9,
        p_read1,
        p_read2,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [7:0] D1;
input  [7:0] D2;
input  [7:0] D3;
input  [7:0] D4;
input  [7:0] D5;
input  [7:0] D6;
input  [7:0] D7;
input  [7:0] D8;
input  [7:0] D9;
input  [7:0] p_read1;
input  [7:0] p_read2;
output  [7:0] ap_return;
input   ap_ce;

reg[7:0] ap_return;

reg   [7:0] p_read_reg_247;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] p_read_reg_247_pp0_iter1_reg;
reg   [7:0] p_read_reg_247_pp0_iter2_reg;
reg   [7:0] p_read_reg_247_pp0_iter3_reg;
reg   [7:0] p_read_7_reg_253;
reg   [7:0] p_read_7_reg_253_pp0_iter1_reg;
reg   [7:0] p_read_7_reg_253_pp0_iter2_reg;
reg   [7:0] D6_read_reg_259;
reg   [7:0] D5_read_reg_264;
reg   [7:0] D5_read_reg_264_pp0_iter1_reg;
reg   [7:0] D5_read_reg_264_pp0_iter2_reg;
reg   [7:0] D5_read_reg_264_pp0_iter3_reg;
reg   [7:0] D4_read_reg_269;
wire   [23:0] grp_fu_226_p4;
wire    ap_block_pp0_stage0;
wire   [8:0] zext_ln186_9_fu_102_p1;
wire   [8:0] zext_ln186_8_fu_98_p1;
wire   [8:0] ret_V_7_fu_106_p2;
wire   [8:0] zext_ln1495_fu_116_p1;
wire   [8:0] zext_ln1495_3_fu_120_p1;
wire   [8:0] add_ln1495_fu_124_p2;
wire   [17:0] grp_fu_199_p3;
wire   [16:0] grp_fu_208_p3;
wire   [7:0] ret_V_5_fu_174_p0;
wire   [7:0] ret_V_5_fu_174_p1;
wire   [16:0] grp_fu_217_p3;
wire   [15:0] ret_V_5_fu_174_p2;
wire   [23:0] grp_fu_236_p4;
wire   [8:0] grp_fu_199_p0;
wire   [8:0] grp_fu_199_p1;
wire   [7:0] grp_fu_199_p2;
wire   [7:0] grp_fu_208_p0;
wire   [7:0] grp_fu_208_p1;
wire   [7:0] grp_fu_208_p2;
wire   [7:0] grp_fu_217_p0;
wire   [7:0] grp_fu_217_p1;
wire   [7:0] grp_fu_217_p2;
wire   [17:0] grp_fu_226_p0;
wire   [16:0] grp_fu_226_p1;
wire   [7:0] grp_fu_226_p2;
wire   [15:0] grp_fu_226_p3;
wire   [16:0] grp_fu_236_p0;
wire   [15:0] grp_fu_236_p1;
wire   [7:0] grp_fu_236_p2;
reg    grp_fu_199_ce;
reg    grp_fu_208_ce;
reg    grp_fu_217_ce;
reg    grp_fu_226_ce;
reg    grp_fu_236_ce;
reg    ap_ce_reg;
reg   [7:0] D1_int_reg;
reg   [7:0] D2_int_reg;
reg   [7:0] D3_int_reg;
reg   [7:0] D4_int_reg;
reg   [7:0] D5_int_reg;
reg   [7:0] D6_int_reg;
reg   [7:0] D7_int_reg;
reg   [7:0] D8_int_reg;
reg   [7:0] D9_int_reg;
reg   [7:0] p_read1_int_reg;
reg   [7:0] p_read2_int_reg;
reg   [7:0] ap_return_int_reg;
wire   [9:0] grp_fu_199_p00;
wire   [9:0] grp_fu_199_p10;
wire   [17:0] grp_fu_199_p20;
wire   [8:0] grp_fu_208_p00;
wire   [8:0] grp_fu_208_p10;
wire   [16:0] grp_fu_208_p20;
wire   [8:0] grp_fu_217_p00;
wire   [8:0] grp_fu_217_p10;
wire   [16:0] grp_fu_217_p20;
wire   [18:0] grp_fu_226_p00;
wire   [18:0] grp_fu_226_p10;
wire   [23:0] grp_fu_226_p20;
wire   [17:0] grp_fu_236_p00;
wire   [17:0] grp_fu_236_p10;
wire   [23:0] grp_fu_236_p20;
wire   [15:0] ret_V_5_fu_174_p00;
wire   [15:0] ret_V_5_fu_174_p10;

gaussian_filter_accel_mul_8ns_8ns_16_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_0_U89(
    .din0(ret_V_5_fu_174_p0),
    .din1(ret_V_5_fu_174_p1),
    .dout(ret_V_5_fu_174_p2)
);

gaussian_filter_accel_am_addmul_9ns_9ns_8ns_18_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
am_addmul_9ns_9ns_8ns_18_4_0_U90(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_199_p0),
    .din1(grp_fu_199_p1),
    .din2(grp_fu_199_p2),
    .ce(grp_fu_199_ce),
    .dout(grp_fu_199_p3)
);

gaussian_filter_accel_am_addmul_8ns_8ns_8ns_17_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 17 ))
am_addmul_8ns_8ns_8ns_17_4_0_U91(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_208_p0),
    .din1(grp_fu_208_p1),
    .din2(grp_fu_208_p2),
    .ce(grp_fu_208_ce),
    .dout(grp_fu_208_p3)
);

gaussian_filter_accel_am_addmul_8ns_8ns_8ns_17_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 17 ))
am_addmul_8ns_8ns_8ns_17_4_0_U92(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_217_p0),
    .din1(grp_fu_217_p1),
    .din2(grp_fu_217_p2),
    .ce(grp_fu_217_ce),
    .dout(grp_fu_217_p3)
);

gaussian_filter_accel_ama_addmuladd_18ns_17ns_8ns_16ns_24_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
ama_addmuladd_18ns_17ns_8ns_16ns_24_4_0_U93(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_226_p0),
    .din1(grp_fu_226_p1),
    .din2(grp_fu_226_p2),
    .din3(grp_fu_226_p3),
    .ce(grp_fu_226_ce),
    .dout(grp_fu_226_p4)
);

gaussian_filter_accel_ama_addmuladd_17ns_16ns_8ns_24ns_24_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
ama_addmuladd_17ns_16ns_8ns_24ns_24_4_0_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_236_p0),
    .din1(grp_fu_236_p1),
    .din2(grp_fu_236_p2),
    .din3(grp_fu_226_p4),
    .ce(grp_fu_236_ce),
    .dout(grp_fu_236_p4)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        D1_int_reg <= D1;
        D2_int_reg <= D2;
        D3_int_reg <= D3;
        D4_int_reg <= D4;
        D5_int_reg <= D5;
        D6_int_reg <= D6;
        D7_int_reg <= D7;
        D8_int_reg <= D8;
        D9_int_reg <= D9;
        p_read1_int_reg <= p_read1;
        p_read2_int_reg <= p_read2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        D4_read_reg_269 <= D4_int_reg;
        D5_read_reg_264 <= D5_int_reg;
        D5_read_reg_264_pp0_iter1_reg <= D5_read_reg_264;
        D5_read_reg_264_pp0_iter2_reg <= D5_read_reg_264_pp0_iter1_reg;
        D5_read_reg_264_pp0_iter3_reg <= D5_read_reg_264_pp0_iter2_reg;
        D6_read_reg_259 <= D6_int_reg;
        p_read_7_reg_253 <= p_read1_int_reg;
        p_read_7_reg_253_pp0_iter1_reg <= p_read_7_reg_253;
        p_read_7_reg_253_pp0_iter2_reg <= p_read_7_reg_253_pp0_iter1_reg;
        p_read_reg_247 <= p_read2_int_reg;
        p_read_reg_247_pp0_iter1_reg <= p_read_reg_247;
        p_read_reg_247_pp0_iter2_reg <= p_read_reg_247_pp0_iter1_reg;
        p_read_reg_247_pp0_iter3_reg <= p_read_reg_247_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= {{grp_fu_236_p4[23:16]}};
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = {{grp_fu_236_p4[23:16]}};
    end else begin
        ap_return = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_199_ce = 1'b1;
    end else begin
        grp_fu_199_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_208_ce = 1'b1;
    end else begin
        grp_fu_208_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_217_ce = 1'b1;
    end else begin
        grp_fu_217_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_226_ce = 1'b1;
    end else begin
        grp_fu_226_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_236_ce = 1'b1;
    end else begin
        grp_fu_236_ce = 1'b0;
    end
end

assign add_ln1495_fu_124_p2 = (zext_ln1495_fu_116_p1 + zext_ln1495_3_fu_120_p1);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign grp_fu_199_p0 = grp_fu_199_p00;

assign grp_fu_199_p00 = add_ln1495_fu_124_p2;

assign grp_fu_199_p1 = grp_fu_199_p10;

assign grp_fu_199_p10 = ret_V_7_fu_106_p2;

assign grp_fu_199_p2 = grp_fu_199_p20;

assign grp_fu_199_p20 = p_read1_int_reg;

assign grp_fu_208_p0 = grp_fu_208_p00;

assign grp_fu_208_p00 = D8_int_reg;

assign grp_fu_208_p1 = grp_fu_208_p10;

assign grp_fu_208_p10 = D2_int_reg;

assign grp_fu_208_p2 = grp_fu_208_p20;

assign grp_fu_208_p20 = p_read2_int_reg;

assign grp_fu_217_p0 = grp_fu_217_p00;

assign grp_fu_217_p00 = D6_read_reg_259;

assign grp_fu_217_p1 = grp_fu_217_p10;

assign grp_fu_217_p10 = D4_read_reg_269;

assign grp_fu_217_p2 = grp_fu_217_p20;

assign grp_fu_217_p20 = p_read_7_reg_253;

assign grp_fu_226_p0 = grp_fu_226_p00;

assign grp_fu_226_p00 = grp_fu_199_p3;

assign grp_fu_226_p1 = grp_fu_226_p10;

assign grp_fu_226_p10 = grp_fu_208_p3;

assign grp_fu_226_p2 = grp_fu_226_p20;

assign grp_fu_226_p20 = p_read_7_reg_253_pp0_iter2_reg;

assign grp_fu_226_p3 = 24'd32768;

assign grp_fu_236_p0 = grp_fu_236_p00;

assign grp_fu_236_p00 = grp_fu_217_p3;

assign grp_fu_236_p1 = grp_fu_236_p10;

assign grp_fu_236_p10 = ret_V_5_fu_174_p2;

assign grp_fu_236_p2 = grp_fu_236_p20;

assign grp_fu_236_p20 = p_read_reg_247_pp0_iter3_reg;

assign ret_V_5_fu_174_p0 = ret_V_5_fu_174_p00;

assign ret_V_5_fu_174_p00 = D5_read_reg_264_pp0_iter3_reg;

assign ret_V_5_fu_174_p1 = ret_V_5_fu_174_p10;

assign ret_V_5_fu_174_p10 = p_read_reg_247_pp0_iter3_reg;

assign ret_V_7_fu_106_p2 = (zext_ln186_9_fu_102_p1 + zext_ln186_8_fu_98_p1);

assign zext_ln1495_3_fu_120_p1 = D9_int_reg;

assign zext_ln1495_fu_116_p1 = D7_int_reg;

assign zext_ln186_8_fu_98_p1 = D1_int_reg;

assign zext_ln186_9_fu_102_p1 = D3_int_reg;

endmodule //gaussian_filter_accel_xFapplygaussian3x3_0_s
