-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity canny_accel_MatStream2AxiStream_2_Pipeline_MMIterOutRow_MMIterOutCol is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dst_mat_data2_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    dst_mat_data2_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    dst_mat_data2_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    dst_mat_data2_empty_n : IN STD_LOGIC;
    dst_mat_data2_read : OUT STD_LOGIC;
    ldata1_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    ldata1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    ldata1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    ldata1_full_n : IN STD_LOGIC;
    ldata1_write : OUT STD_LOGIC;
    bound : IN STD_LOGIC_VECTOR (22 downto 0);
    cols_bound_per_npc : IN STD_LOGIC_VECTOR (6 downto 0);
    op2_assign : IN STD_LOGIC_VECTOR (7 downto 0);
    last_blk_width_load : IN STD_LOGIC_VECTOR (6 downto 0);
    localbuffer_V_3_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    localbuffer_V_3_out_ap_vld : OUT STD_LOGIC;
    filled_V_1_out : OUT STD_LOGIC_VECTOR (6 downto 0);
    filled_V_1_out_ap_vld : OUT STD_LOGIC;
    ap_ext_blocking_n : OUT STD_LOGIC;
    ap_str_blocking_n : OUT STD_LOGIC;
    ap_int_blocking_n : OUT STD_LOGIC );
end;


architecture behav of canny_accel_MatStream2AxiStream_2_Pipeline_MMIterOutRow_MMIterOutCol is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv23_1 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv8_40 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln1027_reg_421 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_3_reg_430 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op42_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal icmp_ln1027_reg_421_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_4_reg_449 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op60_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln1027_fu_188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal dst_mat_data2_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ldata1_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal bLast_fu_221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bLast_reg_425 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_3_fu_227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal filled_V_3_reg_434 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln930_2_fu_264_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln930_2_reg_444 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1027_4_fu_274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_phi_mux_conv3_i12_i_i923_pn_phi_fu_148_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal xor_ln186_fu_280_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_reg_pp0_iter1_conv3_i12_i_i923_pn_reg_145 : STD_LOGIC_VECTOR (6 downto 0);
    signal xf_bits_per_clock_fu_253_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_reg_pp0_iter0_val_V_96_reg_154 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter1_val_V_96_reg_154 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter2_val_V_96_reg_154 : STD_LOGIC_VECTOR (63 downto 0);
    signal filled_V_fu_78 : STD_LOGIC_VECTOR (6 downto 0);
    signal filled_next_fu_287_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal localbuffer_V_fu_82 : STD_LOGIC_VECTOR (63 downto 0);
    signal localbuffer_V_3_fu_364_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_fu_310_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_V_fu_86 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln840_fu_233_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_allocacmp_j_V_load : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten_fu_90 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1027_fu_194_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln1027_5_fu_203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1295_fu_209_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1027_fu_217_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1314_fu_260_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln1325_fu_268_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln930_fu_301_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_6_fu_304_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_6_fu_317_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln938_fu_334_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln553_fu_338_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln930_1_fu_344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln455_fu_330_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln948_fu_354_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_322_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_348_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_5_fu_358_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_int_blocking_cur_n : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_155 : BOOLEAN;
    signal ap_condition_126 : BOOLEAN;
    signal ap_condition_370 : BOOLEAN;
    signal ap_condition_373 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component canny_accel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component canny_accel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_val_V_96_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_155)) then
                if (((icmp_ln1027_fu_188_p2 = ap_const_lv1_0) and (icmp_ln1027_3_fu_227_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_val_V_96_reg_154 <= ap_const_lv64_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_val_V_96_reg_154 <= ap_phi_reg_pp0_iter0_val_V_96_reg_154;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_val_V_96_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_126)) then
                if (((icmp_ln1027_3_reg_430 = ap_const_lv1_1) and (icmp_ln1027_reg_421 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_val_V_96_reg_154 <= dst_mat_data2_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_val_V_96_reg_154 <= ap_phi_reg_pp0_iter1_val_V_96_reg_154;
                end if;
            end if; 
        end if;
    end process;

    filled_V_fu_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    filled_V_fu_78 <= ap_const_lv7_0;
                elsif (((icmp_ln1027_reg_421 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    filled_V_fu_78 <= filled_next_fu_287_p2;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln1027_fu_188_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten_fu_90 <= add_ln1027_fu_194_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_90 <= ap_const_lv23_0;
                end if;
            end if; 
        end if;
    end process;

    j_V_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln1027_fu_188_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_V_fu_86 <= add_ln840_fu_233_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_V_fu_86 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;

    localbuffer_V_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                    localbuffer_V_fu_82 <= ap_const_lv64_0;
                elsif ((ap_const_boolean_1 = ap_condition_373)) then 
                    localbuffer_V_fu_82 <= ret_V_fu_310_p2;
                elsif ((ap_const_boolean_1 = ap_condition_370)) then 
                    localbuffer_V_fu_82 <= localbuffer_V_3_fu_364_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                icmp_ln1027_reg_421 <= icmp_ln1027_fu_188_p2;
                icmp_ln1027_reg_421_pp0_iter1_reg <= icmp_ln1027_reg_421;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_fu_188_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                bLast_reg_425 <= bLast_fu_221_p2;
                icmp_ln1027_3_reg_430 <= icmp_ln1027_3_fu_227_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                filled_V_3_reg_434 <= filled_V_fu_78;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_421 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1027_4_reg_449 <= icmp_ln1027_4_fu_274_p2;
                    zext_ln930_2_reg_444(6 downto 0) <= zext_ln930_2_fu_264_p1(6 downto 0);
            end if;
        end if;
    end process;
    zext_ln930_2_reg_444(7) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1027_fu_194_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv23_1));
    add_ln840_fu_233_p2 <= std_logic_vector(unsigned(select_ln1295_fu_209_p3) + unsigned(ap_const_lv7_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, dst_mat_data2_empty_n, ap_predicate_op42_read_state2, ldata1_full_n, ap_predicate_op60_write_state3)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_predicate_op60_write_state3 = ap_const_boolean_1) and (ldata1_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op42_read_state2 = ap_const_boolean_1) and (dst_mat_data2_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, dst_mat_data2_empty_n, ap_predicate_op42_read_state2, ldata1_full_n, ap_predicate_op60_write_state3)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_predicate_op60_write_state3 = ap_const_boolean_1) and (ldata1_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op42_read_state2 = ap_const_boolean_1) and (dst_mat_data2_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, dst_mat_data2_empty_n, ap_predicate_op42_read_state2, ldata1_full_n, ap_predicate_op60_write_state3)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_predicate_op60_write_state3 = ap_const_boolean_1) and (ldata1_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op42_read_state2 = ap_const_boolean_1) and (dst_mat_data2_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(dst_mat_data2_empty_n, ap_predicate_op42_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op42_read_state2 = ap_const_boolean_1) and (dst_mat_data2_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(ldata1_full_n, ap_predicate_op60_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((ap_predicate_op60_write_state3 = ap_const_boolean_1) and (ldata1_full_n = ap_const_logic_0));
    end process;


    ap_condition_126_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_126 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_155_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_155 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_370_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1027_reg_421_pp0_iter1_reg, icmp_ln1027_4_reg_449)
    begin
                ap_condition_370 <= ((icmp_ln1027_4_reg_449 = ap_const_lv1_0) and (icmp_ln1027_reg_421_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_condition_373_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1027_reg_421_pp0_iter1_reg, icmp_ln1027_4_reg_449)
    begin
                ap_condition_373 <= ((icmp_ln1027_4_reg_449 = ap_const_lv1_1) and (icmp_ln1027_reg_421_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln1027_fu_188_p2)
    begin
        if (((icmp_ln1027_fu_188_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1027_reg_421, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln1027_reg_421 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;
    ap_ext_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_int_blocking_cur_n <= (ldata1_blk_n and dst_mat_data2_blk_n);
    ap_int_blocking_n <= (ap_int_blocking_cur_n and ap_const_logic_1);
    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_conv3_i12_i_i923_pn_phi_fu_148_p4_assign_proc : process(icmp_ln1027_reg_421, icmp_ln1027_4_fu_274_p2, xor_ln186_fu_280_p2, ap_phi_reg_pp0_iter1_conv3_i12_i_i923_pn_reg_145, xf_bits_per_clock_fu_253_p3)
    begin
        if ((icmp_ln1027_reg_421 = ap_const_lv1_0)) then
            if ((icmp_ln1027_4_fu_274_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_conv3_i12_i_i923_pn_phi_fu_148_p4 <= xf_bits_per_clock_fu_253_p3;
            elsif ((icmp_ln1027_4_fu_274_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_conv3_i12_i_i923_pn_phi_fu_148_p4 <= xor_ln186_fu_280_p2;
            else 
                ap_phi_mux_conv3_i12_i_i923_pn_phi_fu_148_p4 <= ap_phi_reg_pp0_iter1_conv3_i12_i_i923_pn_reg_145;
            end if;
        else 
            ap_phi_mux_conv3_i12_i_i923_pn_phi_fu_148_p4 <= ap_phi_reg_pp0_iter1_conv3_i12_i_i923_pn_reg_145;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_val_V_96_reg_154 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_conv3_i12_i_i923_pn_reg_145 <= "XXXXXXX";

    ap_predicate_op42_read_state2_assign_proc : process(icmp_ln1027_reg_421, icmp_ln1027_3_reg_430)
    begin
                ap_predicate_op42_read_state2 <= ((icmp_ln1027_3_reg_430 = ap_const_lv1_1) and (icmp_ln1027_reg_421 = ap_const_lv1_0));
    end process;


    ap_predicate_op60_write_state3_assign_proc : process(icmp_ln1027_reg_421_pp0_iter1_reg, icmp_ln1027_4_reg_449)
    begin
                ap_predicate_op60_write_state3 <= ((icmp_ln1027_4_reg_449 = ap_const_lv1_0) and (icmp_ln1027_reg_421_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_90)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv23_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_90;
        end if; 
    end process;


    ap_sig_allocacmp_j_V_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, j_V_fu_86)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_j_V_load <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_j_V_load <= j_V_fu_86;
        end if; 
    end process;

    ap_str_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);
    bLast_fu_221_p2 <= "1" when (op2_assign = zext_ln1027_fu_217_p1) else "0";

    dst_mat_data2_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, dst_mat_data2_empty_n, ap_predicate_op42_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op42_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dst_mat_data2_blk_n <= dst_mat_data2_empty_n;
        else 
            dst_mat_data2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dst_mat_data2_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op42_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op42_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dst_mat_data2_read <= ap_const_logic_1;
        else 
            dst_mat_data2_read <= ap_const_logic_0;
        end if; 
    end process;

    filled_V_1_out <= filled_V_fu_78;

    filled_V_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln1027_reg_421, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_421 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filled_V_1_out_ap_vld <= ap_const_logic_1;
        else 
            filled_V_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    filled_next_fu_287_p2 <= std_logic_vector(unsigned(ap_phi_mux_conv3_i12_i_i923_pn_phi_fu_148_p4) + unsigned(filled_V_fu_78));
    icmp_ln1027_3_fu_227_p2 <= "1" when (unsigned(select_ln1295_fu_209_p3) < unsigned(cols_bound_per_npc)) else "0";
    icmp_ln1027_4_fu_274_p2 <= "1" when (signed(sub_ln1325_fu_268_p2) > signed(zext_ln930_2_fu_264_p1)) else "0";
    icmp_ln1027_5_fu_203_p2 <= "1" when (ap_sig_allocacmp_j_V_load = cols_bound_per_npc) else "0";
    icmp_ln1027_fu_188_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = bound) else "0";

    ldata1_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ldata1_full_n, ap_predicate_op60_write_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op60_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ldata1_blk_n <= ldata1_full_n;
        else 
            ldata1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ldata1_din <= (r_V_6_fu_304_p2 or localbuffer_V_fu_82);

    ldata1_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op60_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op60_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ldata1_write <= ap_const_logic_1;
        else 
            ldata1_write <= ap_const_logic_0;
        end if; 
    end process;

    localbuffer_V_3_fu_364_p3 <= 
        r_V_fu_348_p2 when (p_Result_s_fu_322_p3(0) = '1') else 
        r_V_5_fu_358_p2;
    localbuffer_V_3_out <= localbuffer_V_fu_82;

    localbuffer_V_3_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln1027_reg_421, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_421 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localbuffer_V_3_out_ap_vld <= ap_const_logic_1;
        else 
            localbuffer_V_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_s_fu_322_p3 <= ret_V_6_fu_317_p2(7 downto 7);
    r_V_5_fu_358_p2 <= std_logic_vector(shift_right(unsigned(ap_phi_reg_pp0_iter2_val_V_96_reg_154),to_integer(unsigned('0' & zext_ln948_fu_354_p1(31-1 downto 0)))));
    r_V_6_fu_304_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_reg_pp0_iter2_val_V_96_reg_154),to_integer(unsigned('0' & zext_ln930_fu_301_p1(31-1 downto 0)))));
    r_V_fu_348_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_reg_pp0_iter2_val_V_96_reg_154),to_integer(unsigned('0' & zext_ln930_1_fu_344_p1(31-1 downto 0)))));
    ret_V_6_fu_317_p2 <= std_logic_vector(unsigned(ap_const_lv8_40) - unsigned(zext_ln930_2_reg_444));
    ret_V_fu_310_p2 <= (r_V_6_fu_304_p2 or localbuffer_V_fu_82);
    select_ln1295_fu_209_p3 <= 
        ap_const_lv7_0 when (icmp_ln1027_5_fu_203_p2(0) = '1') else 
        ap_sig_allocacmp_j_V_load;
    sub_ln1325_fu_268_p2 <= std_logic_vector(unsigned(ap_const_lv8_40) - unsigned(zext_ln1314_fu_260_p1));
    sub_ln553_fu_338_p2 <= std_logic_vector(unsigned(ap_const_lv6_0) - unsigned(trunc_ln938_fu_334_p1));
    trunc_ln455_fu_330_p1 <= ret_V_6_fu_317_p2(7 - 1 downto 0);
    trunc_ln938_fu_334_p1 <= ret_V_6_fu_317_p2(6 - 1 downto 0);
    xf_bits_per_clock_fu_253_p3 <= 
        last_blk_width_load when (bLast_reg_425(0) = '1') else 
        ap_const_lv7_40;
    xor_ln186_fu_280_p2 <= (xf_bits_per_clock_fu_253_p3 xor ap_const_lv7_40);
    zext_ln1027_fu_217_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1295_fu_209_p3),8));
    zext_ln1314_fu_260_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xf_bits_per_clock_fu_253_p3),8));
    zext_ln930_1_fu_344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln553_fu_338_p2),64));
    zext_ln930_2_fu_264_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(filled_V_fu_78),8));
    zext_ln930_fu_301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(filled_V_3_reg_434),64));
    zext_ln948_fu_354_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln455_fu_330_p1),64));
end behav;
