// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module remap_accel_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        imgInput_data1_dout,
        imgInput_data1_num_data_valid,
        imgInput_data1_fifo_cap,
        imgInput_data1_empty_n,
        imgInput_data1_read,
        imgOutput_data4_din,
        imgOutput_data4_num_data_valid,
        imgOutput_data4_fifo_cap,
        imgOutput_data4_full_n,
        imgOutput_data4_write,
        mapX_data2_dout,
        mapX_data2_num_data_valid,
        mapX_data2_fifo_cap,
        mapX_data2_empty_n,
        mapX_data2_read,
        mapY_data3_dout,
        mapY_data3_num_data_valid,
        mapY_data3_fifo_cap,
        mapY_data3_empty_n,
        mapY_data3_read,
        p_read,
        p_read1,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] imgInput_data1_dout;
input  [1:0] imgInput_data1_num_data_valid;
input  [1:0] imgInput_data1_fifo_cap;
input   imgInput_data1_empty_n;
output   imgInput_data1_read;
output  [7:0] imgOutput_data4_din;
input  [1:0] imgOutput_data4_num_data_valid;
input  [1:0] imgOutput_data4_fifo_cap;
input   imgOutput_data4_full_n;
output   imgOutput_data4_write;
input  [31:0] mapX_data2_dout;
input  [1:0] mapX_data2_num_data_valid;
input  [1:0] mapX_data2_fifo_cap;
input   mapX_data2_empty_n;
output   mapX_data2_read;
input  [31:0] mapY_data3_dout;
input  [1:0] mapY_data3_num_data_valid;
input  [1:0] mapY_data3_fifo_cap;
input   mapY_data3_empty_n;
output   mapY_data3_read;
input  [15:0] p_read;
input  [15:0] p_read1;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg imgInput_data1_read;
reg imgOutput_data4_write;
reg mapX_data2_read;
reg mapY_data3_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [16:0] rows_cast_i_fu_140_p1;
reg   [16:0] rows_cast_i_reg_297;
wire   [16:0] cols_cast_i_fu_144_p1;
reg   [16:0] cols_cast_i_reg_303;
wire   [16:0] sub284_i_fu_148_p2;
reg   [16:0] sub284_i_reg_308;
wire   [16:0] sub300_i_fu_154_p2;
reg   [16:0] sub300_i_reg_313;
wire    ap_CS_fsm_state2;
wire   [31:0] grp_fu_134_p1;
reg   [31:0] conv1_i_reg_328;
wire    ap_CS_fsm_state6;
wire   [31:0] grp_fu_137_p1;
reg   [31:0] conv2_i_reg_334;
wire   [16:0] add_i_fu_173_p2;
reg   [16:0] add_i_reg_340;
wire    ap_CS_fsm_state7;
wire   [16:0] add106_i_fu_178_p2;
reg   [16:0] add106_i_reg_345;
wire   [30:0] trunc_ln348_fu_186_p1;
reg   [30:0] trunc_ln348_reg_350;
wire   [0:0] icmp_ln348_fu_194_p2;
reg   [0:0] icmp_ln348_reg_355;
wire   [30:0] trunc_ln349_fu_203_p1;
reg   [30:0] trunc_ln349_reg_360;
wire   [0:0] icmp_ln349_fu_211_p2;
reg   [0:0] icmp_ln349_reg_365;
reg   [16:0] i_1_reg_370;
wire    ap_CS_fsm_state8;
wire   [2:0] trunc_ln248_fu_220_p1;
reg   [2:0] trunc_ln248_reg_377;
wire   [0:0] cmp111_i_fu_235_p2;
reg   [0:0] cmp111_i_reg_385;
wire   [0:0] icmp_ln248_fu_224_p2;
wire   [11:0] mul_ln315_fu_254_p2;
reg   [11:0] mul_ln315_reg_390;
wire   [0:0] icmp_fu_274_p2;
reg   [0:0] icmp_reg_395;
wire    ap_CS_fsm_state9;
wire   [0:0] empty_fu_281_p1;
reg   [0:0] empty_reg_400;
reg   [2:0] r1_address0;
reg    r1_ce0;
reg    r1_we0;
reg   [16:0] r1_d0;
reg    r1_ce1;
wire   [16:0] r1_q1;
reg   [2:0] r2_address0;
reg    r2_ce0;
reg    r2_we0;
reg   [16:0] r2_d0;
reg    r2_ce1;
wire   [16:0] r2_q1;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_start;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_done;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_idle;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_ready;
wire   [2:0] grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_r1_address0;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_r1_ce0;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_r1_we0;
wire   [16:0] grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_r1_d0;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_ext_blocking_n;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_str_blocking_n;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_int_blocking_n;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_start;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_done;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_idle;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_ready;
wire   [2:0] grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_r2_address0;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_r2_ce0;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_r2_we0;
wire   [16:0] grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_r2_d0;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_ext_blocking_n;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_str_blocking_n;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_int_blocking_n;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_start;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_done;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_idle;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_ready;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_imgInput_data1_read;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_mapX_data2_read;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_mapY_data3_read;
wire   [7:0] grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_imgOutput_data4_din;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_imgOutput_data4_write;
wire   [2:0] grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r2_address0;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r2_ce0;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r2_we0;
wire   [16:0] grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r2_d0;
wire   [2:0] grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r2_address1;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r2_ce1;
wire   [2:0] grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r1_address0;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r1_ce0;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r1_we0;
wire   [16:0] grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r1_d0;
wire   [2:0] grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r1_address1;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r1_ce1;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_ext_blocking_n;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_str_blocking_n;
wire    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_int_blocking_n;
reg    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_start_reg;
reg    ap_block_state1_ignore_call9;
reg    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_start_reg;
reg    ap_block_state1_ignore_call10;
reg    grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_start_reg;
wire    ap_CS_fsm_state10;
reg   [16:0] i_fu_70;
wire   [16:0] i_2_fu_229_p2;
reg    ap_block_state1;
wire  signed [31:0] grp_fu_134_p0;
wire  signed [31:0] grp_fu_137_p0;
wire   [31:0] bitcast_ln348_fu_183_p1;
wire   [22:0] trunc_ln348_1_fu_190_p1;
wire   [31:0] bitcast_ln349_fu_200_p1;
wire   [22:0] trunc_ln349_1_fu_207_p1;
wire   [1:0] div228_i_fu_240_p4;
wire   [1:0] mul_ln315_fu_254_p0;
wire   [10:0] mul_ln315_fu_254_p1;
wire   [14:0] tmp_fu_265_p4;
reg    grp_fu_134_ce;
reg    ap_block_state2_on_subcall_done;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg    grp_fu_137_ce;
reg   [9:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
reg    ap_ext_blocking_sub_n;
reg    ap_wait_0;
reg    ap_sub_ext_blocking_0;
reg    ap_wait_1;
reg    ap_sub_ext_blocking_1;
reg    ap_wait_2;
reg    ap_sub_ext_blocking_2;
reg    ap_str_blocking_sub_n;
reg    ap_sub_str_blocking_0;
reg    ap_sub_str_blocking_1;
reg    ap_sub_str_blocking_2;
reg    ap_int_blocking_sub_n;
reg    ap_sub_int_blocking_0;
reg    ap_sub_int_blocking_1;
reg    ap_sub_int_blocking_2;
wire   [11:0] mul_ln315_fu_254_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 10'd1;
#0 grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_start_reg = 1'b0;
#0 grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_start_reg = 1'b0;
#0 grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_start_reg = 1'b0;
end

remap_accel_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_s_r1_RAM_AUTO_1R1W #(
    .DataWidth( 17 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
r1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(r1_address0),
    .ce0(r1_ce0),
    .we0(r1_we0),
    .d0(r1_d0),
    .address1(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r1_address1),
    .ce1(r1_ce1),
    .q1(r1_q1)
);

remap_accel_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_s_r1_RAM_AUTO_1R1W #(
    .DataWidth( 17 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
r2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(r2_address0),
    .ce0(r2_ce0),
    .we0(r2_we0),
    .d0(r2_d0),
    .address1(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r2_address1),
    .ce1(r2_ce1),
    .q1(r2_q1)
);

remap_accel_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1 grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_start),
    .ap_done(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_done),
    .ap_idle(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_idle),
    .ap_ready(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_ready),
    .r1_address0(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_r1_address0),
    .r1_ce0(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_r1_ce0),
    .r1_we0(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_r1_we0),
    .r1_d0(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_r1_d0),
    .ap_ext_blocking_n(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_str_blocking_n),
    .ap_int_blocking_n(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_int_blocking_n)
);

remap_accel_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2 grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_start),
    .ap_done(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_done),
    .ap_idle(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_idle),
    .ap_ready(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_ready),
    .r2_address0(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_r2_address0),
    .r2_ce0(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_r2_ce0),
    .r2_we0(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_r2_we0),
    .r2_d0(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_r2_d0),
    .ap_ext_blocking_n(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_str_blocking_n),
    .ap_int_blocking_n(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_int_blocking_n)
);

remap_accel_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_start),
    .ap_done(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_done),
    .ap_idle(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_idle),
    .ap_ready(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_ready),
    .imgInput_data1_dout(imgInput_data1_dout),
    .imgInput_data1_num_data_valid(2'd0),
    .imgInput_data1_fifo_cap(2'd0),
    .imgInput_data1_empty_n(imgInput_data1_empty_n),
    .imgInput_data1_read(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_imgInput_data1_read),
    .mapX_data2_dout(mapX_data2_dout),
    .mapX_data2_num_data_valid(2'd0),
    .mapX_data2_fifo_cap(2'd0),
    .mapX_data2_empty_n(mapX_data2_empty_n),
    .mapX_data2_read(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_mapX_data2_read),
    .mapY_data3_dout(mapY_data3_dout),
    .mapY_data3_num_data_valid(2'd0),
    .mapY_data3_fifo_cap(2'd0),
    .mapY_data3_empty_n(mapY_data3_empty_n),
    .mapY_data3_read(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_mapY_data3_read),
    .imgOutput_data4_din(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_imgOutput_data4_din),
    .imgOutput_data4_num_data_valid(2'd0),
    .imgOutput_data4_fifo_cap(2'd0),
    .imgOutput_data4_full_n(imgOutput_data4_full_n),
    .imgOutput_data4_write(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_imgOutput_data4_write),
    .r2_address0(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r2_address0),
    .r2_ce0(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r2_ce0),
    .r2_we0(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r2_we0),
    .r2_d0(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r2_d0),
    .r2_address1(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r2_address1),
    .r2_ce1(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r2_ce1),
    .r2_q1(r2_q1),
    .idxprom2582_i(trunc_ln248_reg_377),
    .r1_address0(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r1_address0),
    .r1_ce0(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r1_ce0),
    .r1_we0(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r1_we0),
    .r1_d0(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r1_d0),
    .r1_address1(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r1_address1),
    .r1_ce1(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r1_ce1),
    .r1_q1(r1_q1),
    .add106_i(add106_i_reg_345),
    .i(i_1_reg_370),
    .cmp263_i(icmp_reg_395),
    .mul_ln315(mul_ln315_reg_390),
    .i_cast9_i(empty_reg_400),
    .cols_cast_i(p_read1),
    .cmp111_i(cmp111_i_reg_385),
    .bitcast_ln348(trunc_ln348_reg_350),
    .icmp_ln348_6(icmp_ln348_reg_355),
    .conv1_i(conv1_i_reg_328),
    .bitcast_ln349(trunc_ln349_reg_360),
    .icmp_ln349_4(icmp_ln349_reg_365),
    .conv2_i(conv2_i_reg_334),
    .ap_ext_blocking_n(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_str_blocking_n),
    .ap_int_blocking_n(grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_int_blocking_n)
);

remap_accel_sitofp_32s_32_5_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32s_32_5_no_dsp_1_U127(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_134_p0),
    .ce(grp_fu_134_ce),
    .dout(grp_fu_134_p1)
);

remap_accel_sitofp_32s_32_5_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32s_32_5_no_dsp_1_U128(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_137_p0),
    .ce(grp_fu_137_ce),
    .dout(grp_fu_137_p1)
);

remap_accel_mul_2ns_11ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 12 ))
mul_2ns_11ns_12_1_1_U129(
    .din0(mul_ln315_fu_254_p0),
    .din1(mul_ln315_fu_254_p1),
    .dout(mul_ln315_fu_254_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln248_fu_224_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_start_reg <= 1'b1;
        end else if ((grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_ready == 1'b1)) begin
            grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_start_reg <= 1'b1;
        end else if ((grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_ready == 1'b1)) begin
            grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_start_reg <= 1'b1;
        end else if ((grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_ready == 1'b1)) begin
            grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_70 <= 17'd0;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln248_fu_224_p2 == 1'd0))) begin
        i_fu_70 <= i_2_fu_229_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add106_i_reg_345 <= add106_i_fu_178_p2;
        add_i_reg_340 <= add_i_fu_173_p2;
        icmp_ln348_reg_355 <= icmp_ln348_fu_194_p2;
        icmp_ln349_reg_365 <= icmp_ln349_fu_211_p2;
        trunc_ln348_reg_350 <= trunc_ln348_fu_186_p1;
        trunc_ln349_reg_360 <= trunc_ln349_fu_203_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln248_fu_224_p2 == 1'd0))) begin
        cmp111_i_reg_385 <= cmp111_i_fu_235_p2;
        mul_ln315_reg_390 <= mul_ln315_fu_254_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        cols_cast_i_reg_303[15 : 0] <= cols_cast_i_fu_144_p1[15 : 0];
        rows_cast_i_reg_297[15 : 0] <= rows_cast_i_fu_140_p1[15 : 0];
        sub284_i_reg_308 <= sub284_i_fu_148_p2;
        sub300_i_reg_313 <= sub300_i_fu_154_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv1_i_reg_328 <= grp_fu_134_p1;
        conv2_i_reg_334 <= grp_fu_137_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        empty_reg_400 <= empty_fu_281_p1;
        icmp_reg_395 <= icmp_fu_274_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_1_reg_370 <= i_fu_70;
        trunc_ln248_reg_377 <= trunc_ln248_fu_220_p1;
    end
end

always @ (*) begin
    if ((grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_done == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln248_fu_224_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if ((((ap_wait_2 & ap_sub_ext_blocking_2) == 1'b1) & ((ap_wait_1 & ap_sub_ext_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_ext_blocking_0) == 1'b1))) begin
        ap_ext_blocking_sub_n = 1'b0;
    end else begin
        ap_ext_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_wait_2 & ap_sub_int_blocking_2) == 1'b1) & ((ap_wait_1 & ap_sub_int_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_int_blocking_0) == 1'b1))) begin
        ap_int_blocking_sub_n = 1'b0;
    end else begin
        ap_int_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln248_fu_224_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_wait_2 & ap_sub_str_blocking_2) == 1'b1) & ((ap_wait_1 & ap_sub_str_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_str_blocking_0) == 1'b1))) begin
        ap_str_blocking_sub_n = 1'b0;
    end else begin
        ap_str_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if ((grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_0 = 1'b1;
    end else begin
        ap_sub_ext_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_1 = 1'b1;
    end else begin
        ap_sub_ext_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_2 = 1'b1;
    end else begin
        ap_sub_ext_blocking_2 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_0 = 1'b1;
    end else begin
        ap_sub_int_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_1 = 1'b1;
    end else begin
        ap_sub_int_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_2 = 1'b1;
    end else begin
        ap_sub_int_blocking_2 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_0 = 1'b1;
    end else begin
        ap_sub_str_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_1 = 1'b1;
    end else begin
        ap_sub_str_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_2 = 1'b1;
    end else begin
        ap_sub_str_blocking_2 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state2 == ap_CS_fsm)) begin
        ap_wait_0 = 1'b1;
    end else begin
        ap_wait_0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state2 == ap_CS_fsm)) begin
        ap_wait_1 = 1'b1;
    end else begin
        ap_wait_1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state10 == ap_CS_fsm)) begin
        ap_wait_2 = 1'b1;
    end else begin
        ap_wait_2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)))) begin
        grp_fu_134_ce = 1'b1;
    end else begin
        grp_fu_134_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)))) begin
        grp_fu_137_ce = 1'b1;
    end else begin
        grp_fu_137_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        imgInput_data1_read = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_imgInput_data1_read;
    end else begin
        imgInput_data1_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        imgOutput_data4_write = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_imgOutput_data4_write;
    end else begin
        imgOutput_data4_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        mapX_data2_read = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_mapX_data2_read;
    end else begin
        mapX_data2_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        mapY_data3_read = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_mapY_data3_read;
    end else begin
        mapY_data3_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        r1_address0 = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r1_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        r1_address0 = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_r1_address0;
    end else begin
        r1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        r1_ce0 = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        r1_ce0 = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_r1_ce0;
    end else begin
        r1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        r1_ce1 = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r1_ce1;
    end else begin
        r1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        r1_d0 = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r1_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        r1_d0 = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_r1_d0;
    end else begin
        r1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        r1_we0 = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r1_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        r1_we0 = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_r1_we0;
    end else begin
        r1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        r2_address0 = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r2_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        r2_address0 = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_r2_address0;
    end else begin
        r2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        r2_ce0 = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        r2_ce0 = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_r2_ce0;
    end else begin
        r2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        r2_ce1 = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r2_ce1;
    end else begin
        r2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        r2_d0 = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r2_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        r2_d0 = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_r2_d0;
    end else begin
        r2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        r2_we0 = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_r2_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        r2_we0 = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_r2_we0;
    end else begin
        r2_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln248_fu_224_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add106_i_fu_178_p2 = (cols_cast_i_reg_303 + 17'd1);

assign add_i_fu_173_p2 = (rows_cast_i_reg_297 + 17'd4);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call10 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call9 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_done == 1'b0) | (grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_done == 1'b0));
end

assign ap_ext_blocking_n = (ap_ext_blocking_sub_n & 1'b1);

assign ap_int_blocking_n = (ap_int_blocking_sub_n & 1'b1);

assign ap_str_blocking_n = (ap_str_blocking_sub_n & 1'b1);

assign bitcast_ln348_fu_183_p1 = conv1_i_reg_328;

assign bitcast_ln349_fu_200_p1 = conv2_i_reg_334;

assign cmp111_i_fu_235_p2 = ((i_fu_70 < rows_cast_i_reg_297) ? 1'b1 : 1'b0);

assign cols_cast_i_fu_144_p1 = p_read1;

assign div228_i_fu_240_p4 = {{i_fu_70[2:1]}};

assign empty_fu_281_p1 = i_1_reg_370[0:0];

assign grp_fu_134_p0 = $signed(sub284_i_reg_308);

assign grp_fu_137_p0 = $signed(sub300_i_reg_313);

assign grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_start = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_1_fu_94_ap_start_reg;

assign grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_start = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_2_fu_100_ap_start_reg;

assign grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_start = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_ap_start_reg;

assign i_2_fu_229_p2 = (i_fu_70 + 17'd1);

assign icmp_fu_274_p2 = ((tmp_fu_265_p4 != 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln248_fu_224_p2 = ((i_fu_70 == add_i_reg_340) ? 1'b1 : 1'b0);

assign icmp_ln348_fu_194_p2 = ((trunc_ln348_1_fu_190_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln349_fu_211_p2 = ((trunc_ln349_1_fu_207_p1 == 23'd0) ? 1'b1 : 1'b0);

assign imgOutput_data4_din = grp_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_fu_106_imgOutput_data4_din;

assign mul_ln315_fu_254_p0 = mul_ln315_fu_254_p00;

assign mul_ln315_fu_254_p00 = div228_i_fu_240_p4;

assign mul_ln315_fu_254_p1 = 12'd961;

assign rows_cast_i_fu_140_p1 = p_read;

assign sub284_i_fu_148_p2 = ($signed(rows_cast_i_fu_140_p1) + $signed(17'd131071));

assign sub300_i_fu_154_p2 = ($signed(cols_cast_i_fu_144_p1) + $signed(17'd131071));

assign tmp_fu_265_p4 = {{i_1_reg_370[16:2]}};

assign trunc_ln248_fu_220_p1 = i_fu_70[2:0];

assign trunc_ln348_1_fu_190_p1 = bitcast_ln348_fu_183_p1[22:0];

assign trunc_ln348_fu_186_p1 = bitcast_ln348_fu_183_p1[30:0];

assign trunc_ln349_1_fu_207_p1 = bitcast_ln349_fu_200_p1[22:0];

assign trunc_ln349_fu_203_p1 = bitcast_ln349_fu_200_p1[30:0];

always @ (posedge ap_clk) begin
    rows_cast_i_reg_297[16] <= 1'b0;
    cols_cast_i_reg_303[16] <= 1'b0;
end

endmodule //remap_accel_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_s
