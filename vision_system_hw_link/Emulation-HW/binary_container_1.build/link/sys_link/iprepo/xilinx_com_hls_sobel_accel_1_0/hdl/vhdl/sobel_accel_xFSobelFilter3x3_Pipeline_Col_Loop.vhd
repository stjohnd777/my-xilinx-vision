-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sobel_accel_xFSobelFilter3x3_Pipeline_Col_Loop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_mat_data1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_mat_data1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    in_mat_data1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    in_mat_data1_empty_n : IN STD_LOGIC;
    in_mat_data1_read : OUT STD_LOGIC;
    p_dstgx_data2_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dstgx_data2_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    p_dstgx_data2_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    p_dstgx_data2_full_n : IN STD_LOGIC;
    p_dstgx_data2_write : OUT STD_LOGIC;
    p_dstgy_data3_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dstgy_data3_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    p_dstgy_data3_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    p_dstgy_data3_full_n : IN STD_LOGIC;
    p_dstgy_data3_write : OUT STD_LOGIC;
    img_width : IN STD_LOGIC_VECTOR (15 downto 0);
    tp_V : IN STD_LOGIC_VECTOR (1 downto 0);
    mid_V : IN STD_LOGIC_VECTOR (1 downto 0);
    bottom_V : IN STD_LOGIC_VECTOR (1 downto 0);
    row_ind_V_cast : IN STD_LOGIC_VECTOR (1 downto 0);
    buf_V_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    buf_V_2_ce0 : OUT STD_LOGIC;
    buf_V_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    buf_V_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    buf_V_2_ce1 : OUT STD_LOGIC;
    buf_V_2_we1 : OUT STD_LOGIC;
    buf_V_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf_V_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    buf_V_1_ce0 : OUT STD_LOGIC;
    buf_V_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    buf_V_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    buf_V_1_ce1 : OUT STD_LOGIC;
    buf_V_1_we1 : OUT STD_LOGIC;
    buf_V_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    buf_V_ce0 : OUT STD_LOGIC;
    buf_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    buf_V_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    buf_V_ce1 : OUT STD_LOGIC;
    buf_V_we1 : OUT STD_LOGIC;
    buf_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    cmp_i_i603_i : IN STD_LOGIC_VECTOR (0 downto 0);
    src_buf3_V_1_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    src_buf3_V_1_out_ap_vld : OUT STD_LOGIC;
    p_Val2_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_Val2_2_out_ap_vld : OUT STD_LOGIC;
    p_Val2_1_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_Val2_1_out_ap_vld : OUT STD_LOGIC;
    src_buf1_V_1_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    src_buf1_V_1_out_ap_vld : OUT STD_LOGIC;
    p_Val2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_Val2_out_ap_vld : OUT STD_LOGIC;
    ap_ext_blocking_n : OUT STD_LOGIC;
    ap_str_blocking_n : OUT STD_LOGIC;
    ap_int_blocking_n : OUT STD_LOGIC );
end;


architecture behav of sobel_accel_xFSobelFilter3x3_Pipeline_Col_Loop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln1027_reg_542 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i603_i_read_reg_513 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op59_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal icmp_ln1019_reg_561 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_561_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln1027_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal in_mat_data1_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_dstgx_data2_blk_n : STD_LOGIC;
    signal p_dstgy_data3_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal row_ind_V_cast_read_reg_517 : STD_LOGIC_VECTOR (1 downto 0);
    signal bottom_V_read_reg_521 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_V_1_reg_536 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln1027_reg_542_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_542_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_V_addr_reg_546 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_1_addr_reg_551 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_V_2_addr_reg_556 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1019_fu_345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_561_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal GradientValuesX_V_reg_565 : STD_LOGIC_VECTOR (7 downto 0);
    signal GradientValuesY_V_reg_570 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_condition_exit_pp0_iter3_stage0 : STD_LOGIC;
    signal call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_ready : STD_LOGIC;
    signal call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_ext_blocking_n : STD_LOGIC;
    signal call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_str_blocking_n : STD_LOGIC;
    signal call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_int_blocking_n : STD_LOGIC;
    signal src_buf1_V_fu_375_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_V_1_fu_387_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_V_fu_399_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln541_fu_339_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal col_V_fu_92 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_V_2_fu_328_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_col_V_1 : STD_LOGIC_VECTOR (12 downto 0);
    signal src_buf1_V_2_fu_96 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_V_2_fu_100 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_V_2_fu_104 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_V_fu_108 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_V_1_fu_112 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_V_1_fu_116 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln1027_fu_318_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_int_blocking_cur_n : STD_LOGIC;
    signal ap_ext_blocking_sub_n : STD_LOGIC;
    signal ap_wait_0 : STD_LOGIC;
    signal ap_sub_ext_blocking_0 : STD_LOGIC;
    signal ap_str_blocking_sub_n : STD_LOGIC;
    signal ap_sub_str_blocking_0 : STD_LOGIC;
    signal ap_int_blocking_sub_n : STD_LOGIC;
    signal ap_sub_int_blocking_0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_261 : BOOLEAN;
    signal ap_condition_470 : BOOLEAN;
    signal ap_condition_474 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component sobel_accel_xFSobel3x3_1_1_0_0_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        p_read2 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component sobel_accel_mux_32_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sobel_accel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    call_ret_xFSobel3x3_1_1_0_0_s_fu_268 : component sobel_accel_xFSobel3x3_1_1_0_0_s
    port map (
        ap_ready => call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_ready,
        p_read2 => src_buf1_V_2_fu_96,
        p_read5 => src_buf1_V_1_fu_112,
        p_read6 => src_buf1_V_fu_375_p5,
        p_read7 => src_buf2_V_2_fu_100,
        p_read8 => src_buf2_V_1_fu_387_p5,
        p_read9 => src_buf3_V_2_fu_104,
        p_read10 => src_buf3_V_1_fu_116,
        p_read11 => src_buf3_V_fu_399_p5,
        ap_return_0 => call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_return_0,
        ap_return_1 => call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_return_1,
        ap_ext_blocking_n => call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_ext_blocking_n,
        ap_str_blocking_n => call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_str_blocking_n,
        ap_int_blocking_n => call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_int_blocking_n);

    mux_32_8_1_1_U88 : component sobel_accel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_V_q0,
        din1 => buf_V_1_q0,
        din2 => buf_V_2_q0,
        din3 => tp_V,
        dout => src_buf1_V_fu_375_p5);

    mux_32_8_1_1_U89 : component sobel_accel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_V_q0,
        din1 => buf_V_1_q0,
        din2 => buf_V_2_q0,
        din3 => mid_V,
        dout => src_buf2_V_1_fu_387_p5);

    mux_32_8_1_1_U90 : component sobel_accel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_V_q0,
        din1 => buf_V_1_q0,
        din2 => buf_V_2_q0,
        din3 => bottom_V,
        dout => src_buf3_V_fu_399_p5);

    flow_control_loop_pipe_sequential_init_U : component sobel_accel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter3_stage0)) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    col_V_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln1027_fu_322_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    col_V_fu_92 <= col_V_2_fu_328_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    col_V_fu_92 <= ap_const_lv13_0;
                end if;
            end if; 
        end if;
    end process;

    src_buf1_V_1_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf1_V_1_fu_112 <= ap_const_lv8_0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_542_pp0_iter2_reg = ap_const_lv1_1))) then 
                    src_buf1_V_1_fu_112 <= src_buf1_V_fu_375_p5;
                end if;
            end if; 
        end if;
    end process;

    src_buf1_V_2_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf1_V_2_fu_96 <= ap_const_lv8_0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_542_pp0_iter2_reg = ap_const_lv1_1))) then 
                    src_buf1_V_2_fu_96 <= src_buf1_V_1_fu_112;
                end if;
            end if; 
        end if;
    end process;

    src_buf2_V_2_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf2_V_2_fu_100 <= ap_const_lv8_0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_542_pp0_iter2_reg = ap_const_lv1_1))) then 
                    src_buf2_V_2_fu_100 <= src_buf2_V_fu_108;
                end if;
            end if; 
        end if;
    end process;

    src_buf2_V_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf2_V_fu_108 <= ap_const_lv8_0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_542_pp0_iter2_reg = ap_const_lv1_1))) then 
                    src_buf2_V_fu_108 <= src_buf2_V_1_fu_387_p5;
                end if;
            end if; 
        end if;
    end process;

    src_buf3_V_1_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf3_V_1_fu_116 <= ap_const_lv8_0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_542_pp0_iter2_reg = ap_const_lv1_1))) then 
                    src_buf3_V_1_fu_116 <= src_buf3_V_fu_399_p5;
                end if;
            end if; 
        end if;
    end process;

    src_buf3_V_2_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf3_V_2_fu_104 <= ap_const_lv8_0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_542_pp0_iter2_reg = ap_const_lv1_1))) then 
                    src_buf3_V_2_fu_104 <= src_buf3_V_1_fu_116;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_542_pp0_iter2_reg = ap_const_lv1_1))) then
                GradientValuesX_V_reg_565 <= call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_return_0;
                GradientValuesY_V_reg_570 <= call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_return_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                col_V_1_reg_536 <= ap_sig_allocacmp_col_V_1;
                icmp_ln1027_reg_542 <= icmp_ln1027_fu_322_p2;
                icmp_ln1027_reg_542_pp0_iter1_reg <= icmp_ln1027_reg_542;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                icmp_ln1019_reg_561_pp0_iter2_reg <= icmp_ln1019_reg_561;
                icmp_ln1019_reg_561_pp0_iter3_reg <= icmp_ln1019_reg_561_pp0_iter2_reg;
                icmp_ln1027_reg_542_pp0_iter2_reg <= icmp_ln1027_reg_542_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_542 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                buf_V_1_addr_reg_551 <= zext_ln541_fu_339_p1(12 - 1 downto 0);
                buf_V_2_addr_reg_556 <= zext_ln541_fu_339_p1(12 - 1 downto 0);
                buf_V_addr_reg_546 <= zext_ln541_fu_339_p1(12 - 1 downto 0);
                icmp_ln1019_reg_561 <= icmp_ln1019_fu_345_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, in_mat_data1_empty_n, ap_predicate_op59_read_state2, p_dstgx_data2_full_n, icmp_ln1019_reg_561_pp0_iter3_reg, p_dstgy_data3_full_n)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (((p_dstgy_data3_full_n = ap_const_logic_0) and (icmp_ln1019_reg_561_pp0_iter3_reg = ap_const_lv1_0)) or ((icmp_ln1019_reg_561_pp0_iter3_reg = ap_const_lv1_0) and (p_dstgx_data2_full_n = ap_const_logic_0)))) or ((ap_predicate_op59_read_state2 = ap_const_boolean_1) and (in_mat_data1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, in_mat_data1_empty_n, ap_predicate_op59_read_state2, p_dstgx_data2_full_n, icmp_ln1019_reg_561_pp0_iter3_reg, p_dstgy_data3_full_n)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (((p_dstgy_data3_full_n = ap_const_logic_0) and (icmp_ln1019_reg_561_pp0_iter3_reg = ap_const_lv1_0)) or ((icmp_ln1019_reg_561_pp0_iter3_reg = ap_const_lv1_0) and (p_dstgx_data2_full_n = ap_const_logic_0)))) or ((ap_predicate_op59_read_state2 = ap_const_boolean_1) and (in_mat_data1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, in_mat_data1_empty_n, ap_predicate_op59_read_state2, p_dstgx_data2_full_n, icmp_ln1019_reg_561_pp0_iter3_reg, p_dstgy_data3_full_n)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (((p_dstgy_data3_full_n = ap_const_logic_0) and (icmp_ln1019_reg_561_pp0_iter3_reg = ap_const_lv1_0)) or ((icmp_ln1019_reg_561_pp0_iter3_reg = ap_const_lv1_0) and (p_dstgx_data2_full_n = ap_const_logic_0)))) or ((ap_predicate_op59_read_state2 = ap_const_boolean_1) and (in_mat_data1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(in_mat_data1_empty_n, ap_predicate_op59_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op59_read_state2 = ap_const_boolean_1) and (in_mat_data1_empty_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter4_assign_proc : process(p_dstgx_data2_full_n, icmp_ln1019_reg_561_pp0_iter3_reg, p_dstgy_data3_full_n)
    begin
                ap_block_state5_pp0_stage0_iter4 <= (((p_dstgy_data3_full_n = ap_const_logic_0) and (icmp_ln1019_reg_561_pp0_iter3_reg = ap_const_lv1_0)) or ((icmp_ln1019_reg_561_pp0_iter3_reg = ap_const_lv1_0) and (p_dstgx_data2_full_n = ap_const_logic_0)));
    end process;


    ap_condition_261_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1027_reg_542, ap_block_pp0_stage0)
    begin
                ap_condition_261 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_542 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_470_assign_proc : process(cmp_i_i603_i_read_reg_513, bottom_V_read_reg_521)
    begin
                ap_condition_470 <= (not((bottom_V_read_reg_521 = ap_const_lv2_0)) and not((bottom_V_read_reg_521 = ap_const_lv2_1)) and (cmp_i_i603_i_read_reg_513 = ap_const_lv1_0));
    end process;


    ap_condition_474_assign_proc : process(cmp_i_i603_i, row_ind_V_cast_read_reg_517)
    begin
                ap_condition_474 <= (not((row_ind_V_cast_read_reg_517 = ap_const_lv2_0)) and not((row_ind_V_cast_read_reg_517 = ap_const_lv2_1)) and (cmp_i_i603_i = ap_const_lv1_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln1027_fu_322_p2)
    begin
        if (((icmp_ln1027_fu_322_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter3_stage0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone, icmp_ln1027_reg_542_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_542_pp0_iter2_reg = ap_const_lv1_0))) then 
            ap_condition_exit_pp0_iter3_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter3_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;
    ap_ext_blocking_n <= (ap_ext_blocking_sub_n and ap_const_logic_1);

    ap_ext_blocking_sub_n_assign_proc : process(ap_wait_0, ap_sub_ext_blocking_0)
    begin
        if (((ap_wait_0 and ap_sub_ext_blocking_0) = ap_const_logic_1)) then 
            ap_ext_blocking_sub_n <= ap_const_logic_0;
        else 
            ap_ext_blocking_sub_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_int_blocking_cur_n <= (p_dstgy_data3_blk_n and p_dstgx_data2_blk_n and in_mat_data1_blk_n);
    ap_int_blocking_n <= (ap_int_blocking_sub_n and ap_int_blocking_cur_n);

    ap_int_blocking_sub_n_assign_proc : process(ap_wait_0, ap_sub_int_blocking_0)
    begin
        if (((ap_wait_0 and ap_sub_int_blocking_0) = ap_const_logic_1)) then 
            ap_int_blocking_sub_n <= ap_const_logic_0;
        else 
            ap_int_blocking_sub_n <= ap_const_logic_1;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_predicate_op59_read_state2_assign_proc : process(icmp_ln1027_reg_542, cmp_i_i603_i)
    begin
                ap_predicate_op59_read_state2 <= ((cmp_i_i603_i = ap_const_lv1_1) and (icmp_ln1027_reg_542 = ap_const_lv1_1));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_col_V_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, col_V_fu_92, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_col_V_1 <= ap_const_lv13_0;
        else 
            ap_sig_allocacmp_col_V_1 <= col_V_fu_92;
        end if; 
    end process;

    ap_str_blocking_n <= (ap_str_blocking_sub_n and ap_const_logic_1);

    ap_str_blocking_sub_n_assign_proc : process(ap_wait_0, ap_sub_str_blocking_0)
    begin
        if (((ap_wait_0 and ap_sub_str_blocking_0) = ap_const_logic_1)) then 
            ap_str_blocking_sub_n <= ap_const_logic_0;
        else 
            ap_str_blocking_sub_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sub_ext_blocking_0_assign_proc : process(call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_ext_blocking_n)
    begin
        if ((call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_0 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_0_assign_proc : process(call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_int_blocking_n)
    begin
        if ((call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_0 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_0_assign_proc : process(call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_str_blocking_n)
    begin
        if ((call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_0 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm)) then 
            ap_wait_0 <= ap_const_logic_1;
        else 
            ap_wait_0 <= ap_const_logic_0;
        end if; 
    end process;

    bottom_V_read_reg_521 <= bottom_V;
    buf_V_1_address0 <= buf_V_1_addr_reg_551;
    buf_V_1_address1 <= zext_ln541_fu_339_p1(12 - 1 downto 0);

    buf_V_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_V_1_ce0 <= ap_const_logic_1;
        else 
            buf_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1027_reg_542, cmp_i_i603_i_read_reg_513, cmp_i_i603_i, ap_block_pp0_stage0_11001, row_ind_V_cast_read_reg_517, bottom_V_read_reg_521)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i603_i = ap_const_lv1_1) and (icmp_ln1027_reg_542 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (row_ind_V_cast_read_reg_517 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i603_i_read_reg_513 = ap_const_lv1_0) and (icmp_ln1027_reg_542 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (bottom_V_read_reg_521 = ap_const_lv2_1)))) then 
            buf_V_1_ce1 <= ap_const_logic_1;
        else 
            buf_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_d1_assign_proc : process(in_mat_data1_dout, cmp_i_i603_i_read_reg_513, cmp_i_i603_i, row_ind_V_cast_read_reg_517, bottom_V_read_reg_521, ap_condition_261)
    begin
        if ((ap_const_boolean_1 = ap_condition_261)) then
            if (((cmp_i_i603_i = ap_const_lv1_1) and (row_ind_V_cast_read_reg_517 = ap_const_lv2_1))) then 
                buf_V_1_d1 <= in_mat_data1_dout;
            elsif (((cmp_i_i603_i_read_reg_513 = ap_const_lv1_0) and (bottom_V_read_reg_521 = ap_const_lv2_1))) then 
                buf_V_1_d1 <= ap_const_lv8_0;
            else 
                buf_V_1_d1 <= "XXXXXXXX";
            end if;
        else 
            buf_V_1_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_V_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1027_reg_542, cmp_i_i603_i_read_reg_513, cmp_i_i603_i, ap_block_pp0_stage0_11001, row_ind_V_cast_read_reg_517, bottom_V_read_reg_521)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i603_i = ap_const_lv1_1) and (icmp_ln1027_reg_542 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (row_ind_V_cast_read_reg_517 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i603_i_read_reg_513 = ap_const_lv1_0) and (icmp_ln1027_reg_542 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (bottom_V_read_reg_521 = ap_const_lv2_1)))) then 
            buf_V_1_we1 <= ap_const_logic_1;
        else 
            buf_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_2_address0 <= buf_V_2_addr_reg_556;
    buf_V_2_address1 <= zext_ln541_fu_339_p1(12 - 1 downto 0);

    buf_V_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_V_2_ce0 <= ap_const_logic_1;
        else 
            buf_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1027_reg_542, cmp_i_i603_i_read_reg_513, cmp_i_i603_i, ap_block_pp0_stage0_11001, row_ind_V_cast_read_reg_517, bottom_V_read_reg_521)
    begin
        if (((not((row_ind_V_cast_read_reg_517 = ap_const_lv2_0)) and not((row_ind_V_cast_read_reg_517 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i603_i = ap_const_lv1_1) and (icmp_ln1027_reg_542 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((bottom_V_read_reg_521 = ap_const_lv2_0)) and not((bottom_V_read_reg_521 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i603_i_read_reg_513 = ap_const_lv1_0) and (icmp_ln1027_reg_542 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_V_2_ce1 <= ap_const_logic_1;
        else 
            buf_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_2_d1_assign_proc : process(in_mat_data1_dout, ap_condition_261, ap_condition_470, ap_condition_474)
    begin
        if ((ap_const_boolean_1 = ap_condition_261)) then
            if ((ap_const_boolean_1 = ap_condition_474)) then 
                buf_V_2_d1 <= in_mat_data1_dout;
            elsif ((ap_const_boolean_1 = ap_condition_470)) then 
                buf_V_2_d1 <= ap_const_lv8_0;
            else 
                buf_V_2_d1 <= "XXXXXXXX";
            end if;
        else 
            buf_V_2_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_V_2_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1027_reg_542, cmp_i_i603_i_read_reg_513, cmp_i_i603_i, ap_block_pp0_stage0_11001, row_ind_V_cast_read_reg_517, bottom_V_read_reg_521)
    begin
        if (((not((row_ind_V_cast_read_reg_517 = ap_const_lv2_0)) and not((row_ind_V_cast_read_reg_517 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i603_i = ap_const_lv1_1) and (icmp_ln1027_reg_542 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((bottom_V_read_reg_521 = ap_const_lv2_0)) and not((bottom_V_read_reg_521 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i603_i_read_reg_513 = ap_const_lv1_0) and (icmp_ln1027_reg_542 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_V_2_we1 <= ap_const_logic_1;
        else 
            buf_V_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_address0 <= buf_V_addr_reg_546;
    buf_V_address1 <= zext_ln541_fu_339_p1(12 - 1 downto 0);

    buf_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_V_ce0 <= ap_const_logic_1;
        else 
            buf_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1027_reg_542, cmp_i_i603_i_read_reg_513, cmp_i_i603_i, ap_block_pp0_stage0_11001, row_ind_V_cast_read_reg_517, bottom_V_read_reg_521)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i603_i = ap_const_lv1_1) and (icmp_ln1027_reg_542 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (row_ind_V_cast_read_reg_517 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i603_i_read_reg_513 = ap_const_lv1_0) and (icmp_ln1027_reg_542 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (bottom_V_read_reg_521 = ap_const_lv2_0)))) then 
            buf_V_ce1 <= ap_const_logic_1;
        else 
            buf_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_d1_assign_proc : process(in_mat_data1_dout, cmp_i_i603_i_read_reg_513, cmp_i_i603_i, row_ind_V_cast_read_reg_517, bottom_V_read_reg_521, ap_condition_261)
    begin
        if ((ap_const_boolean_1 = ap_condition_261)) then
            if (((cmp_i_i603_i = ap_const_lv1_1) and (row_ind_V_cast_read_reg_517 = ap_const_lv2_0))) then 
                buf_V_d1 <= in_mat_data1_dout;
            elsif (((cmp_i_i603_i_read_reg_513 = ap_const_lv1_0) and (bottom_V_read_reg_521 = ap_const_lv2_0))) then 
                buf_V_d1 <= ap_const_lv8_0;
            else 
                buf_V_d1 <= "XXXXXXXX";
            end if;
        else 
            buf_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1027_reg_542, cmp_i_i603_i_read_reg_513, cmp_i_i603_i, ap_block_pp0_stage0_11001, row_ind_V_cast_read_reg_517, bottom_V_read_reg_521)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i603_i = ap_const_lv1_1) and (icmp_ln1027_reg_542 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (row_ind_V_cast_read_reg_517 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp_i_i603_i_read_reg_513 = ap_const_lv1_0) and (icmp_ln1027_reg_542 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (bottom_V_read_reg_521 = ap_const_lv2_0)))) then 
            buf_V_we1 <= ap_const_logic_1;
        else 
            buf_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i603_i_read_reg_513 <= cmp_i_i603_i;
    col_V_2_fu_328_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_col_V_1) + unsigned(ap_const_lv13_1));
    icmp_ln1019_fu_345_p2 <= "1" when (col_V_1_reg_536 = ap_const_lv13_0) else "0";
    icmp_ln1027_fu_322_p2 <= "1" when (unsigned(zext_ln1027_fu_318_p1) < unsigned(img_width)) else "0";

    in_mat_data1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, in_mat_data1_empty_n, ap_predicate_op59_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op59_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_mat_data1_blk_n <= in_mat_data1_empty_n;
        else 
            in_mat_data1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_mat_data1_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op59_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op59_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_mat_data1_read <= ap_const_logic_1;
        else 
            in_mat_data1_read <= ap_const_logic_0;
        end if; 
    end process;

    p_Val2_1_out <= src_buf2_V_2_fu_100;

    p_Val2_1_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1027_reg_542_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_542_pp0_iter2_reg = ap_const_lv1_0))) then 
            p_Val2_1_out_ap_vld <= ap_const_logic_1;
        else 
            p_Val2_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_Val2_2_out <= src_buf3_V_2_fu_104;

    p_Val2_2_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1027_reg_542_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_542_pp0_iter2_reg = ap_const_lv1_0))) then 
            p_Val2_2_out_ap_vld <= ap_const_logic_1;
        else 
            p_Val2_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_Val2_out <= src_buf1_V_2_fu_96;

    p_Val2_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1027_reg_542_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_542_pp0_iter2_reg = ap_const_lv1_0))) then 
            p_Val2_out_ap_vld <= ap_const_logic_1;
        else 
            p_Val2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_dstgx_data2_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, p_dstgx_data2_full_n, icmp_ln1019_reg_561_pp0_iter3_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1019_reg_561_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            p_dstgx_data2_blk_n <= p_dstgx_data2_full_n;
        else 
            p_dstgx_data2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dstgx_data2_din <= GradientValuesX_V_reg_565;

    p_dstgx_data2_write_assign_proc : process(ap_enable_reg_pp0_iter4, icmp_ln1019_reg_561_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1019_reg_561_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            p_dstgx_data2_write <= ap_const_logic_1;
        else 
            p_dstgx_data2_write <= ap_const_logic_0;
        end if; 
    end process;


    p_dstgy_data3_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, icmp_ln1019_reg_561_pp0_iter3_reg, p_dstgy_data3_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1019_reg_561_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            p_dstgy_data3_blk_n <= p_dstgy_data3_full_n;
        else 
            p_dstgy_data3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dstgy_data3_din <= GradientValuesY_V_reg_570;

    p_dstgy_data3_write_assign_proc : process(ap_enable_reg_pp0_iter4, icmp_ln1019_reg_561_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1019_reg_561_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            p_dstgy_data3_write <= ap_const_logic_1;
        else 
            p_dstgy_data3_write <= ap_const_logic_0;
        end if; 
    end process;

    row_ind_V_cast_read_reg_517 <= row_ind_V_cast;
    src_buf1_V_1_out <= src_buf1_V_1_fu_112;

    src_buf1_V_1_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1027_reg_542_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_542_pp0_iter2_reg = ap_const_lv1_0))) then 
            src_buf1_V_1_out_ap_vld <= ap_const_logic_1;
        else 
            src_buf1_V_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    src_buf3_V_1_out <= src_buf3_V_1_fu_116;

    src_buf3_V_1_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1027_reg_542_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_542_pp0_iter2_reg = ap_const_lv1_0))) then 
            src_buf3_V_1_out_ap_vld <= ap_const_logic_1;
        else 
            src_buf3_V_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln1027_fu_318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_col_V_1),16));
    zext_ln541_fu_339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_V_1_reg_536),64));
end behav;
