// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module edgetracing_accel_TopDown_20_6_1024_Pipeline_ELEMENTS_P_RAM (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arr1_V_19,
        arr1_V_18,
        arr1_V_17,
        arr1_V_16,
        arr1_V_15,
        arr1_V_14,
        arr1_V_13,
        arr1_V_12,
        arr1_V_11,
        arr1_V_10,
        arr1_V_9,
        arr1_V_8,
        arr1_V_7,
        arr1_V_6,
        arr1_V_5,
        arr1_V_4,
        arr1_V_3,
        arr1_V_2,
        arr1_V_1,
        arr1_V,
        arr3_V_19,
        arr3_V_18,
        arr3_V_17,
        arr3_V_16,
        arr3_V_15,
        arr3_V_14,
        arr3_V_13,
        arr3_V_12,
        arr3_V_11,
        arr3_V_10,
        arr3_V_9,
        arr3_V_8,
        arr3_V_7,
        arr3_V_6,
        arr3_V_5,
        arr3_V_4,
        arr3_V_3,
        arr3_V_2,
        arr3_V_1,
        arr3_V,
        mul_ln175,
        iBuff_1_address0,
        iBuff_1_ce0,
        iBuff_1_we0,
        iBuff_1_d0,
        iBuff_1_address1,
        iBuff_1_ce1,
        iBuff_1_q1,
        iBuff_2_address0,
        iBuff_2_ce0,
        iBuff_2_we0,
        iBuff_2_d0,
        iBuff_2_address1,
        iBuff_2_ce1,
        iBuff_2_q1,
        iBuff_3_address0,
        iBuff_3_ce0,
        iBuff_3_we0,
        iBuff_3_d0,
        iBuff_3_address1,
        iBuff_3_ce1,
        iBuff_3_q1,
        iBuff_4_address0,
        iBuff_4_ce0,
        iBuff_4_we0,
        iBuff_4_d0,
        iBuff_4_address1,
        iBuff_4_ce1,
        iBuff_4_q1,
        iBuff_5_address0,
        iBuff_5_ce0,
        iBuff_5_we0,
        iBuff_5_d0,
        iBuff_5_address1,
        iBuff_5_ce1,
        iBuff_5_q1,
        iBuff_6_address0,
        iBuff_6_ce0,
        iBuff_6_we0,
        iBuff_6_d0,
        iBuff_6_address1,
        iBuff_6_ce1,
        iBuff_6_q1,
        iBuff_7_address0,
        iBuff_7_ce0,
        iBuff_7_we0,
        iBuff_7_d0,
        iBuff_7_address1,
        iBuff_7_ce1,
        iBuff_7_q1,
        iBuff_8_address0,
        iBuff_8_ce0,
        iBuff_8_we0,
        iBuff_8_d0,
        iBuff_8_address1,
        iBuff_8_ce1,
        iBuff_8_q1,
        iBuff_9_address0,
        iBuff_9_ce0,
        iBuff_9_we0,
        iBuff_9_d0,
        iBuff_9_address1,
        iBuff_9_ce1,
        iBuff_9_q1,
        iBuff_10_address0,
        iBuff_10_ce0,
        iBuff_10_we0,
        iBuff_10_d0,
        iBuff_10_address1,
        iBuff_10_ce1,
        iBuff_10_q1,
        iBuff_11_address0,
        iBuff_11_ce0,
        iBuff_11_we0,
        iBuff_11_d0,
        iBuff_11_address1,
        iBuff_11_ce1,
        iBuff_11_q1,
        iBuff_12_address0,
        iBuff_12_ce0,
        iBuff_12_we0,
        iBuff_12_d0,
        iBuff_12_address1,
        iBuff_12_ce1,
        iBuff_12_q1,
        iBuff_13_address0,
        iBuff_13_ce0,
        iBuff_13_we0,
        iBuff_13_d0,
        iBuff_13_address1,
        iBuff_13_ce1,
        iBuff_13_q1,
        iBuff_14_address0,
        iBuff_14_ce0,
        iBuff_14_we0,
        iBuff_14_d0,
        iBuff_14_address1,
        iBuff_14_ce1,
        iBuff_14_q1,
        iBuff_15_address0,
        iBuff_15_ce0,
        iBuff_15_we0,
        iBuff_15_d0,
        iBuff_15_address1,
        iBuff_15_ce1,
        iBuff_15_q1,
        iBuff_16_address0,
        iBuff_16_ce0,
        iBuff_16_we0,
        iBuff_16_d0,
        iBuff_16_address1,
        iBuff_16_ce1,
        iBuff_16_q1,
        iBuff_17_address0,
        iBuff_17_ce0,
        iBuff_17_we0,
        iBuff_17_d0,
        iBuff_17_address1,
        iBuff_17_ce1,
        iBuff_17_q1,
        iBuff_18_address0,
        iBuff_18_ce0,
        iBuff_18_we0,
        iBuff_18_d0,
        iBuff_18_address1,
        iBuff_18_ce1,
        iBuff_18_q1,
        iBuff_19_address0,
        iBuff_19_ce0,
        iBuff_19_we0,
        iBuff_19_d0,
        iBuff_19_address1,
        iBuff_19_ce1,
        iBuff_19_q1,
        bramtotal,
        iBuff_0_address0,
        iBuff_0_ce0,
        iBuff_0_we0,
        iBuff_0_d0,
        iBuff_0_address1,
        iBuff_0_ce1,
        iBuff_0_q1,
        j,
        icmp_ln233,
        icmp_ln233_1,
        or_ln233,
        mul172,
        tmp216_cast,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] arr1_V_19;
input  [63:0] arr1_V_18;
input  [63:0] arr1_V_17;
input  [63:0] arr1_V_16;
input  [63:0] arr1_V_15;
input  [63:0] arr1_V_14;
input  [63:0] arr1_V_13;
input  [63:0] arr1_V_12;
input  [63:0] arr1_V_11;
input  [63:0] arr1_V_10;
input  [63:0] arr1_V_9;
input  [63:0] arr1_V_8;
input  [63:0] arr1_V_7;
input  [63:0] arr1_V_6;
input  [63:0] arr1_V_5;
input  [63:0] arr1_V_4;
input  [63:0] arr1_V_3;
input  [63:0] arr1_V_2;
input  [63:0] arr1_V_1;
input  [63:0] arr1_V;
input  [3:0] arr3_V_19;
input  [3:0] arr3_V_18;
input  [3:0] arr3_V_17;
input  [3:0] arr3_V_16;
input  [3:0] arr3_V_15;
input  [3:0] arr3_V_14;
input  [3:0] arr3_V_13;
input  [3:0] arr3_V_12;
input  [3:0] arr3_V_11;
input  [3:0] arr3_V_10;
input  [3:0] arr3_V_9;
input  [3:0] arr3_V_8;
input  [3:0] arr3_V_7;
input  [3:0] arr3_V_6;
input  [3:0] arr3_V_5;
input  [3:0] arr3_V_4;
input  [3:0] arr3_V_3;
input  [3:0] arr3_V_2;
input  [3:0] arr3_V_1;
input  [3:0] arr3_V;
input  [16:0] mul_ln175;
output  [9:0] iBuff_1_address0;
output   iBuff_1_ce0;
output   iBuff_1_we0;
output  [63:0] iBuff_1_d0;
output  [9:0] iBuff_1_address1;
output   iBuff_1_ce1;
input  [63:0] iBuff_1_q1;
output  [9:0] iBuff_2_address0;
output   iBuff_2_ce0;
output   iBuff_2_we0;
output  [63:0] iBuff_2_d0;
output  [9:0] iBuff_2_address1;
output   iBuff_2_ce1;
input  [63:0] iBuff_2_q1;
output  [9:0] iBuff_3_address0;
output   iBuff_3_ce0;
output   iBuff_3_we0;
output  [63:0] iBuff_3_d0;
output  [9:0] iBuff_3_address1;
output   iBuff_3_ce1;
input  [63:0] iBuff_3_q1;
output  [9:0] iBuff_4_address0;
output   iBuff_4_ce0;
output   iBuff_4_we0;
output  [63:0] iBuff_4_d0;
output  [9:0] iBuff_4_address1;
output   iBuff_4_ce1;
input  [63:0] iBuff_4_q1;
output  [9:0] iBuff_5_address0;
output   iBuff_5_ce0;
output   iBuff_5_we0;
output  [63:0] iBuff_5_d0;
output  [9:0] iBuff_5_address1;
output   iBuff_5_ce1;
input  [63:0] iBuff_5_q1;
output  [9:0] iBuff_6_address0;
output   iBuff_6_ce0;
output   iBuff_6_we0;
output  [63:0] iBuff_6_d0;
output  [9:0] iBuff_6_address1;
output   iBuff_6_ce1;
input  [63:0] iBuff_6_q1;
output  [9:0] iBuff_7_address0;
output   iBuff_7_ce0;
output   iBuff_7_we0;
output  [63:0] iBuff_7_d0;
output  [9:0] iBuff_7_address1;
output   iBuff_7_ce1;
input  [63:0] iBuff_7_q1;
output  [9:0] iBuff_8_address0;
output   iBuff_8_ce0;
output   iBuff_8_we0;
output  [63:0] iBuff_8_d0;
output  [9:0] iBuff_8_address1;
output   iBuff_8_ce1;
input  [63:0] iBuff_8_q1;
output  [9:0] iBuff_9_address0;
output   iBuff_9_ce0;
output   iBuff_9_we0;
output  [63:0] iBuff_9_d0;
output  [9:0] iBuff_9_address1;
output   iBuff_9_ce1;
input  [63:0] iBuff_9_q1;
output  [9:0] iBuff_10_address0;
output   iBuff_10_ce0;
output   iBuff_10_we0;
output  [63:0] iBuff_10_d0;
output  [9:0] iBuff_10_address1;
output   iBuff_10_ce1;
input  [63:0] iBuff_10_q1;
output  [9:0] iBuff_11_address0;
output   iBuff_11_ce0;
output   iBuff_11_we0;
output  [63:0] iBuff_11_d0;
output  [9:0] iBuff_11_address1;
output   iBuff_11_ce1;
input  [63:0] iBuff_11_q1;
output  [9:0] iBuff_12_address0;
output   iBuff_12_ce0;
output   iBuff_12_we0;
output  [63:0] iBuff_12_d0;
output  [9:0] iBuff_12_address1;
output   iBuff_12_ce1;
input  [63:0] iBuff_12_q1;
output  [9:0] iBuff_13_address0;
output   iBuff_13_ce0;
output   iBuff_13_we0;
output  [63:0] iBuff_13_d0;
output  [9:0] iBuff_13_address1;
output   iBuff_13_ce1;
input  [63:0] iBuff_13_q1;
output  [9:0] iBuff_14_address0;
output   iBuff_14_ce0;
output   iBuff_14_we0;
output  [63:0] iBuff_14_d0;
output  [9:0] iBuff_14_address1;
output   iBuff_14_ce1;
input  [63:0] iBuff_14_q1;
output  [9:0] iBuff_15_address0;
output   iBuff_15_ce0;
output   iBuff_15_we0;
output  [63:0] iBuff_15_d0;
output  [9:0] iBuff_15_address1;
output   iBuff_15_ce1;
input  [63:0] iBuff_15_q1;
output  [9:0] iBuff_16_address0;
output   iBuff_16_ce0;
output   iBuff_16_we0;
output  [63:0] iBuff_16_d0;
output  [9:0] iBuff_16_address1;
output   iBuff_16_ce1;
input  [63:0] iBuff_16_q1;
output  [9:0] iBuff_17_address0;
output   iBuff_17_ce0;
output   iBuff_17_we0;
output  [63:0] iBuff_17_d0;
output  [9:0] iBuff_17_address1;
output   iBuff_17_ce1;
input  [63:0] iBuff_17_q1;
output  [9:0] iBuff_18_address0;
output   iBuff_18_ce0;
output   iBuff_18_we0;
output  [63:0] iBuff_18_d0;
output  [9:0] iBuff_18_address1;
output   iBuff_18_ce1;
input  [63:0] iBuff_18_q1;
output  [9:0] iBuff_19_address0;
output   iBuff_19_ce0;
output   iBuff_19_we0;
output  [63:0] iBuff_19_d0;
output  [9:0] iBuff_19_address1;
output   iBuff_19_ce1;
input  [63:0] iBuff_19_q1;
input  [4:0] bramtotal;
output  [9:0] iBuff_0_address0;
output   iBuff_0_ce0;
output   iBuff_0_we0;
output  [63:0] iBuff_0_d0;
output  [9:0] iBuff_0_address1;
output   iBuff_0_ce1;
input  [63:0] iBuff_0_q1;
input  [1:0] j;
input  [0:0] icmp_ln233;
input  [0:0] icmp_ln233_1;
input  [0:0] or_ln233;
input  [17:0] mul172;
input  [6:0] tmp216_cast;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_idle;
reg iBuff_1_ce0;
reg iBuff_1_we0;
reg iBuff_1_ce1;
reg iBuff_2_ce0;
reg iBuff_2_we0;
reg iBuff_2_ce1;
reg iBuff_3_ce0;
reg iBuff_3_we0;
reg iBuff_3_ce1;
reg iBuff_4_ce0;
reg iBuff_4_we0;
reg iBuff_4_ce1;
reg iBuff_5_ce0;
reg iBuff_5_we0;
reg iBuff_5_ce1;
reg iBuff_6_ce0;
reg iBuff_6_we0;
reg iBuff_6_ce1;
reg iBuff_7_ce0;
reg iBuff_7_we0;
reg iBuff_7_ce1;
reg iBuff_8_ce0;
reg iBuff_8_we0;
reg iBuff_8_ce1;
reg iBuff_9_ce0;
reg iBuff_9_we0;
reg iBuff_9_ce1;
reg iBuff_10_ce0;
reg iBuff_10_we0;
reg iBuff_10_ce1;
reg iBuff_11_ce0;
reg iBuff_11_we0;
reg iBuff_11_ce1;
reg iBuff_12_ce0;
reg iBuff_12_we0;
reg iBuff_12_ce1;
reg iBuff_13_ce0;
reg iBuff_13_we0;
reg iBuff_13_ce1;
reg iBuff_14_ce0;
reg iBuff_14_we0;
reg iBuff_14_ce1;
reg iBuff_15_ce0;
reg iBuff_15_we0;
reg iBuff_15_ce1;
reg iBuff_16_ce0;
reg iBuff_16_we0;
reg iBuff_16_ce1;
reg iBuff_17_ce0;
reg iBuff_17_we0;
reg iBuff_17_ce1;
reg iBuff_18_ce0;
reg iBuff_18_we0;
reg iBuff_18_ce1;
reg iBuff_19_ce0;
reg iBuff_19_we0;
reg iBuff_19_ce1;
reg[9:0] iBuff_0_address0;
reg iBuff_0_ce0;
reg iBuff_0_we0;
reg[63:0] iBuff_0_d0;
reg iBuff_0_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln189_fu_1448_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] or_ln233_read_reg_4076;
wire   [0:0] icmp_ln233_read_reg_4132;
wire  signed [9:0] tmp216_cast_cast_fu_1208_p1;
reg  signed [9:0] tmp216_cast_cast_reg_4224;
wire   [0:0] cmp173_fu_1454_p2;
reg   [0:0] cmp173_reg_4333;
reg   [0:0] cmp173_reg_4333_pp0_iter1_reg;
reg   [0:0] cmp173_reg_4333_pp0_iter2_reg;
wire   [9:0] trunc_ln189_fu_1460_p1;
reg   [9:0] trunc_ln189_reg_4337;
reg   [9:0] trunc_ln189_reg_4337_pp0_iter1_reg;
reg   [9:0] trunc_ln189_reg_4337_pp0_iter2_reg;
reg   [59:0] tmp_reg_4343;
wire   [3:0] arr3_V_40_fu_1488_p1;
reg   [3:0] arr3_V_40_reg_4348;
reg   [63:0] arr1_V_41_reg_4353;
reg   [63:0] arr1_V_42_reg_4360;
reg   [63:0] arr1_V_43_reg_4367;
reg   [63:0] arr1_V_44_reg_4376;
reg   [63:0] arr1_V_45_reg_4384;
reg   [63:0] arr1_V_46_reg_4392;
reg   [63:0] arr1_V_47_reg_4401;
reg   [63:0] arr1_V_48_reg_4409;
reg   [63:0] arr1_V_49_reg_4417;
reg   [63:0] arr1_V_50_reg_4426;
reg   [63:0] arr1_V_51_reg_4434;
reg   [63:0] arr1_V_52_reg_4442;
reg   [63:0] arr1_V_53_reg_4451;
reg   [63:0] arr1_V_54_reg_4459;
reg   [63:0] arr1_V_55_reg_4467;
reg   [63:0] arr1_V_56_reg_4476;
reg   [63:0] arr1_V_57_reg_4484;
reg   [63:0] arr1_V_58_reg_4492;
reg   [63:0] arr1_V_59_reg_4500;
wire   [3:0] arr3_V_48_fu_1492_p1;
reg   [3:0] arr3_V_48_reg_4506;
wire   [3:0] trunc_ln628_fu_1507_p1;
reg   [3:0] trunc_ln628_reg_4511;
wire   [63:0] arr4_V_24_fu_2161_p3;
reg   [63:0] arr4_V_24_reg_4516;
wire   [63:0] arr4_V_28_fu_2189_p3;
reg   [63:0] arr4_V_28_reg_4522;
wire   [63:0] arr4_V_30_fu_2203_p3;
reg   [63:0] arr4_V_30_reg_4528;
wire   [63:0] arr4_V_35_fu_2401_p3;
reg   [63:0] arr4_V_35_reg_4534;
wire   [63:0] arr4_V_39_fu_2429_p3;
reg   [63:0] arr4_V_39_reg_4540;
wire   [63:0] arr4_V_41_fu_2443_p3;
reg   [63:0] arr4_V_41_reg_4546;
wire   [63:0] arr4_V_46_fu_2656_p3;
reg   [63:0] arr4_V_46_reg_4552;
wire   [63:0] arr4_V_50_fu_2684_p3;
reg   [63:0] arr4_V_50_reg_4558;
wire   [63:0] arr4_V_52_fu_2698_p3;
reg   [63:0] arr4_V_52_reg_4564;
wire   [63:0] arr4_V_57_fu_2911_p3;
reg   [63:0] arr4_V_57_reg_4570;
wire   [63:0] arr4_V_61_fu_2939_p3;
reg   [63:0] arr4_V_61_reg_4576;
wire   [63:0] arr4_V_63_fu_2953_p3;
reg   [63:0] arr4_V_63_reg_4582;
wire   [63:0] arr4_V_68_fu_3166_p3;
reg   [63:0] arr4_V_68_reg_4588;
wire   [63:0] arr4_V_72_fu_3194_p3;
reg   [63:0] arr4_V_72_reg_4594;
wire   [63:0] arr4_V_74_fu_3208_p3;
reg   [63:0] arr4_V_74_reg_4600;
wire   [63:0] arr4_V_79_fu_3421_p3;
reg   [63:0] arr4_V_79_reg_4606;
wire   [63:0] arr4_V_81_fu_3435_p3;
reg   [63:0] arr4_V_81_reg_4612;
wire   [63:0] arr4_V_82_fu_3442_p3;
reg   [63:0] arr4_V_82_reg_4618;
wire   [63:0] arr4_V_83_fu_3449_p3;
reg   [63:0] arr4_V_83_reg_4624;
wire   [63:0] arr4_V_85_fu_3463_p3;
reg   [63:0] arr4_V_85_reg_4630;
wire    call_ret1_PixelProcessNew_1_s_fu_1166_ap_ready;
wire   [67:0] call_ret1_PixelProcessNew_1_s_fu_1166_k1;
wire   [67:0] call_ret1_PixelProcessNew_1_s_fu_1166_k2;
wire   [67:0] call_ret1_PixelProcessNew_1_s_fu_1166_k3;
wire   [67:0] call_ret1_PixelProcessNew_1_s_fu_1166_ap_return_0;
wire   [67:0] call_ret1_PixelProcessNew_1_s_fu_1166_ap_return_1;
wire   [67:0] call_ret1_PixelProcessNew_1_s_fu_1166_ap_return_2;
wire    call_ret1_PixelProcessNew_1_s_fu_1166_ap_ext_blocking_n;
wire    call_ret1_PixelProcessNew_1_s_fu_1166_ap_str_blocking_n;
wire    call_ret1_PixelProcessNew_1_s_fu_1166_ap_int_blocking_n;
wire    call_ret2_PixelProcessNew_1_s_fu_1173_ap_ready;
wire   [67:0] call_ret2_PixelProcessNew_1_s_fu_1173_k1;
wire   [67:0] call_ret2_PixelProcessNew_1_s_fu_1173_k2;
wire   [67:0] call_ret2_PixelProcessNew_1_s_fu_1173_k3;
wire   [67:0] call_ret2_PixelProcessNew_1_s_fu_1173_ap_return_0;
wire   [67:0] call_ret2_PixelProcessNew_1_s_fu_1173_ap_return_1;
wire   [67:0] call_ret2_PixelProcessNew_1_s_fu_1173_ap_return_2;
wire    call_ret2_PixelProcessNew_1_s_fu_1173_ap_ext_blocking_n;
wire    call_ret2_PixelProcessNew_1_s_fu_1173_ap_str_blocking_n;
wire    call_ret2_PixelProcessNew_1_s_fu_1173_ap_int_blocking_n;
wire    call_ret3_PixelProcessNew_1_s_fu_1180_ap_ready;
wire   [67:0] call_ret3_PixelProcessNew_1_s_fu_1180_k1;
wire   [67:0] call_ret3_PixelProcessNew_1_s_fu_1180_k2;
wire   [67:0] call_ret3_PixelProcessNew_1_s_fu_1180_k3;
wire   [67:0] call_ret3_PixelProcessNew_1_s_fu_1180_ap_return_0;
wire   [67:0] call_ret3_PixelProcessNew_1_s_fu_1180_ap_return_1;
wire   [67:0] call_ret3_PixelProcessNew_1_s_fu_1180_ap_return_2;
wire    call_ret3_PixelProcessNew_1_s_fu_1180_ap_ext_blocking_n;
wire    call_ret3_PixelProcessNew_1_s_fu_1180_ap_str_blocking_n;
wire    call_ret3_PixelProcessNew_1_s_fu_1180_ap_int_blocking_n;
wire    call_ret4_PixelProcessNew_1_s_fu_1187_ap_ready;
wire   [67:0] call_ret4_PixelProcessNew_1_s_fu_1187_k1;
wire   [67:0] call_ret4_PixelProcessNew_1_s_fu_1187_k2;
wire   [67:0] call_ret4_PixelProcessNew_1_s_fu_1187_k3;
wire   [67:0] call_ret4_PixelProcessNew_1_s_fu_1187_ap_return_0;
wire   [67:0] call_ret4_PixelProcessNew_1_s_fu_1187_ap_return_1;
wire   [67:0] call_ret4_PixelProcessNew_1_s_fu_1187_ap_return_2;
wire    call_ret4_PixelProcessNew_1_s_fu_1187_ap_ext_blocking_n;
wire    call_ret4_PixelProcessNew_1_s_fu_1187_ap_str_blocking_n;
wire    call_ret4_PixelProcessNew_1_s_fu_1187_ap_int_blocking_n;
wire    call_ret5_PixelProcessNew_1_s_fu_1194_ap_ready;
wire   [67:0] call_ret5_PixelProcessNew_1_s_fu_1194_k1;
wire   [67:0] call_ret5_PixelProcessNew_1_s_fu_1194_k2;
wire   [67:0] call_ret5_PixelProcessNew_1_s_fu_1194_k3;
wire   [67:0] call_ret5_PixelProcessNew_1_s_fu_1194_ap_return_0;
wire   [67:0] call_ret5_PixelProcessNew_1_s_fu_1194_ap_return_1;
wire   [67:0] call_ret5_PixelProcessNew_1_s_fu_1194_ap_return_2;
wire    call_ret5_PixelProcessNew_1_s_fu_1194_ap_ext_blocking_n;
wire    call_ret5_PixelProcessNew_1_s_fu_1194_ap_str_blocking_n;
wire    call_ret5_PixelProcessNew_1_s_fu_1194_ap_int_blocking_n;
wire    call_ret_PixelProcessNew_1_s_fu_1201_ap_ready;
wire   [67:0] call_ret_PixelProcessNew_1_s_fu_1201_k1;
wire   [67:0] call_ret_PixelProcessNew_1_s_fu_1201_k2;
wire   [67:0] call_ret_PixelProcessNew_1_s_fu_1201_k3;
wire   [67:0] call_ret_PixelProcessNew_1_s_fu_1201_ap_return_0;
wire   [67:0] call_ret_PixelProcessNew_1_s_fu_1201_ap_return_1;
wire   [67:0] call_ret_PixelProcessNew_1_s_fu_1201_ap_return_2;
wire    call_ret_PixelProcessNew_1_s_fu_1201_ap_ext_blocking_n;
wire    call_ret_PixelProcessNew_1_s_fu_1201_ap_str_blocking_n;
wire    call_ret_PixelProcessNew_1_s_fu_1201_ap_int_blocking_n;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln189_fu_1420_p1;
wire   [63:0] p_cast6_fu_3734_p1;
wire   [63:0] p_cast_fu_3706_p1;
reg   [16:0] el_fu_206;
wire   [16:0] add_ln190_fu_1464_p2;
wire    ap_loop_init;
reg   [16:0] ap_sig_allocacmp_el_1;
reg   [3:0] arr3_V_20_fu_210;
wire   [3:0] arr3_V_54_fu_2210_p3;
reg   [3:0] arr3_V_21_fu_214;
wire   [3:0] arr3_V_53_fu_2147_p3;
reg   [3:0] arr3_V_22_fu_218;
wire   [3:0] arr3_V_56_fu_2223_p3;
reg   [3:0] arr3_V_23_fu_222;
wire   [3:0] arr3_V_61_fu_2464_p3;
reg   [3:0] arr3_V_24_fu_226;
wire   [3:0] arr3_V_60_fu_2387_p3;
reg   [3:0] arr3_V_25_fu_230;
wire   [3:0] arr3_V_63_fu_2478_p3;
reg   [3:0] arr3_V_26_fu_234;
wire   [3:0] arr3_V_68_fu_2719_p3;
reg   [3:0] arr3_V_27_fu_238;
wire   [3:0] arr3_V_67_fu_2642_p3;
reg   [3:0] arr3_V_28_fu_242;
wire   [3:0] arr3_V_70_fu_2733_p3;
reg   [3:0] arr3_V_29_fu_246;
wire   [3:0] arr3_V_75_fu_2974_p3;
reg   [3:0] arr3_V_30_fu_250;
wire   [3:0] arr3_V_74_fu_2897_p3;
reg   [3:0] arr3_V_31_fu_254;
wire   [3:0] arr3_V_77_fu_2988_p3;
reg   [3:0] arr3_V_32_fu_258;
wire   [3:0] arr3_V_82_fu_3229_p3;
reg   [3:0] arr3_V_33_fu_262;
wire   [3:0] arr3_V_81_fu_3152_p3;
reg   [3:0] arr3_V_34_fu_266;
wire   [3:0] arr3_V_84_fu_3243_p3;
reg   [3:0] arr3_V_35_fu_270;
wire   [3:0] arr3_V_89_fu_3484_p3;
reg   [3:0] arr3_V_36_fu_274;
wire   [3:0] arr3_V_88_fu_3407_p3;
reg   [3:0] arr3_V_37_fu_278;
wire   [3:0] arr3_V_94_fu_3518_p3;
reg   [3:0] arr3_V_38_fu_282;
wire   [3:0] arr3_V_92_fu_3504_p3;
reg   [3:0] arr3_V_39_fu_286;
wire   [3:0] arr3_V_90_fu_3491_p3;
reg   [63:0] p_Val2_s_fu_290;
reg   [63:0] p_Val2_1_fu_294;
reg   [63:0] p_Val2_2_fu_298;
reg   [63:0] p_Val2_3_fu_302;
reg   [63:0] p_Val2_4_fu_306;
reg   [63:0] p_Val2_5_fu_310;
reg   [63:0] p_Val2_6_fu_314;
reg   [63:0] p_Val2_7_fu_318;
reg   [63:0] p_Val2_8_fu_322;
reg   [63:0] p_Val2_9_fu_326;
reg   [63:0] p_Val2_10_fu_330;
reg   [63:0] p_Val2_11_fu_334;
reg   [63:0] p_Val2_12_fu_338;
reg   [63:0] p_Val2_13_fu_342;
reg   [63:0] p_Val2_14_fu_346;
reg   [63:0] p_Val2_15_fu_350;
reg   [63:0] p_Val2_16_fu_354;
reg   [63:0] p_Val2_17_fu_358;
reg   [63:0] p_Val2_18_fu_362;
reg   [63:0] p_Val2_19_fu_366;
wire   [63:0] tmp_37_fu_3739_p34;
wire   [17:0] zext_ln189_1_fu_1444_p1;
wire   [63:0] p_Val2_40_fu_1496_p5;
wire   [59:0] tmp_s_fu_1640_p4;
wire   [59:0] tmp_1_fu_1661_p4;
wire   [59:0] tmp_2_fu_1679_p4;
wire   [59:0] tmp_3_fu_1700_p4;
wire   [59:0] tmp_4_fu_1718_p4;
wire   [59:0] tmp_5_fu_1736_p4;
wire   [59:0] tmp_6_fu_1757_p4;
wire   [59:0] tmp_7_fu_1775_p4;
wire   [59:0] tmp_8_fu_1793_p4;
wire   [59:0] tmp_9_fu_1814_p4;
wire   [59:0] tmp_10_fu_1832_p4;
wire   [59:0] tmp_11_fu_1850_p4;
wire   [59:0] tmp_12_fu_1871_p4;
wire   [59:0] tmp_13_fu_1889_p4;
wire   [59:0] tmp_14_fu_1907_p4;
wire   [59:0] tmp_15_fu_1928_p4;
wire   [59:0] tmp_16_fu_1946_p4;
wire   [59:0] tmp_17_fu_1964_p4;
wire   [59:0] tmp_18_fu_1985_p4;
wire   [63:0] p_Result_s_fu_1633_p3;
wire   [63:0] p_Result_13_fu_1650_p3;
wire   [63:0] p_Result_14_fu_1671_p3;
wire   [63:0] p_Result_15_fu_1689_p3;
wire   [63:0] p_Result_16_fu_1710_p3;
wire   [63:0] tmp_19_fu_2003_p5;
wire   [63:0] p_Val2_41_fu_2044_p5;
wire   [3:0] trunc_ln628_9_fu_2052_p1;
wire   [63:0] tmp_20_fu_2014_p5;
wire   [63:0] p_Val2_42_fu_2065_p5;
wire   [3:0] trunc_ln628_10_fu_2073_p1;
wire   [63:0] tmp_21_fu_2025_p5;
wire   [3:0] arr3_V_49_fu_2120_p4;
wire   [3:0] arr3_V_41_fu_1658_p1;
wire   [3:0] arr3_V_51_fu_2102_p4;
wire   [3:0] arr3_V_52_fu_2140_p3;
wire   [63:0] arr4_V_22_fu_2116_p1;
wire   [63:0] arr4_V_20_fu_2098_p1;
wire   [63:0] arr4_V_21_fu_2112_p1;
wire   [63:0] arr4_V_23_fu_2154_p3;
wire   [63:0] arr4_V_25_fu_2168_p3;
wire   [63:0] arr4_V_29_fu_2196_p3;
wire   [3:0] arr3_V_50_fu_2130_p4;
wire   [3:0] arr3_V_55_fu_2216_p3;
wire   [63:0] p_Result_17_fu_1728_p3;
wire   [63:0] p_Result_18_fu_1746_p3;
wire   [63:0] p_Result_19_fu_1767_p3;
wire   [63:0] p_Val2_46_fu_2263_p5;
wire   [3:0] trunc_ln628_14_fu_2271_p1;
wire   [63:0] tmp_22_fu_2230_p5;
wire   [63:0] p_Val2_47_fu_2284_p5;
wire   [3:0] trunc_ln628_15_fu_2292_p1;
wire   [63:0] tmp_23_fu_2241_p5;
wire   [63:0] p_Val2_48_fu_2305_p5;
wire   [3:0] trunc_ln628_16_fu_2313_p1;
wire   [63:0] tmp_24_fu_2252_p5;
wire   [3:0] arr3_V_59_fu_2342_p4;
wire   [3:0] arr3_V_57_fu_2360_p4;
wire   [3:0] select_ln233_fu_2380_p3;
wire   [63:0] arr4_V_33_fu_2356_p1;
wire   [63:0] arr4_V_31_fu_2338_p1;
wire   [63:0] arr4_V_32_fu_2352_p1;
wire   [63:0] arr4_V_34_fu_2394_p3;
wire   [63:0] arr4_V_36_fu_2408_p3;
wire   [63:0] arr4_V_26_fu_2175_p3;
wire   [63:0] arr4_V_27_fu_2182_p3;
wire   [63:0] arr4_V_40_fu_2436_p3;
wire   [3:0] arr3_V_42_fu_1697_p1;
wire   [3:0] select_ln233_11_fu_2450_p3;
wire   [3:0] select_ln233_12_fu_2457_p3;
wire   [3:0] arr3_V_58_fu_2370_p4;
wire   [3:0] arr3_V_62_fu_2471_p3;
wire   [63:0] p_Result_20_fu_1785_p3;
wire   [63:0] p_Result_21_fu_1803_p3;
wire   [63:0] p_Result_22_fu_1824_p3;
wire   [63:0] p_Val2_52_fu_2518_p5;
wire   [3:0] trunc_ln628_20_fu_2526_p1;
wire   [63:0] tmp_25_fu_2485_p5;
wire   [63:0] p_Val2_53_fu_2539_p5;
wire   [3:0] trunc_ln628_21_fu_2547_p1;
wire   [63:0] tmp_26_fu_2496_p5;
wire   [63:0] p_Val2_54_fu_2560_p5;
wire   [3:0] trunc_ln628_22_fu_2568_p1;
wire   [63:0] tmp_27_fu_2507_p5;
wire   [3:0] arr3_V_66_fu_2597_p4;
wire   [3:0] arr3_V_64_fu_2615_p4;
wire   [3:0] select_ln233_16_fu_2635_p3;
wire   [63:0] arr4_V_44_fu_2611_p1;
wire   [63:0] arr4_V_42_fu_2593_p1;
wire   [63:0] arr4_V_43_fu_2607_p1;
wire   [63:0] arr4_V_45_fu_2649_p3;
wire   [63:0] arr4_V_47_fu_2663_p3;
wire   [63:0] arr4_V_37_fu_2415_p3;
wire   [63:0] arr4_V_38_fu_2422_p3;
wire   [63:0] arr4_V_51_fu_2691_p3;
wire   [3:0] arr3_V_43_fu_1754_p1;
wire   [3:0] select_ln233_27_fu_2705_p3;
wire   [3:0] select_ln233_28_fu_2712_p3;
wire   [3:0] arr3_V_65_fu_2625_p4;
wire   [3:0] arr3_V_69_fu_2726_p3;
wire   [63:0] p_Result_23_fu_1842_p3;
wire   [63:0] p_Result_24_fu_1860_p3;
wire   [63:0] p_Result_25_fu_1881_p3;
wire   [63:0] p_Val2_58_fu_2773_p5;
wire   [3:0] trunc_ln628_26_fu_2781_p1;
wire   [63:0] tmp_28_fu_2740_p5;
wire   [63:0] p_Val2_59_fu_2794_p5;
wire   [3:0] trunc_ln628_27_fu_2802_p1;
wire   [63:0] tmp_29_fu_2751_p5;
wire   [63:0] p_Val2_60_fu_2815_p5;
wire   [3:0] trunc_ln628_28_fu_2823_p1;
wire   [63:0] tmp_30_fu_2762_p5;
wire   [3:0] arr3_V_73_fu_2852_p4;
wire   [3:0] arr3_V_71_fu_2870_p4;
wire   [3:0] select_ln233_32_fu_2890_p3;
wire   [63:0] arr4_V_55_fu_2866_p1;
wire   [63:0] arr4_V_53_fu_2848_p1;
wire   [63:0] arr4_V_54_fu_2862_p1;
wire   [63:0] arr4_V_56_fu_2904_p3;
wire   [63:0] arr4_V_58_fu_2918_p3;
wire   [63:0] arr4_V_48_fu_2670_p3;
wire   [63:0] arr4_V_49_fu_2677_p3;
wire   [63:0] arr4_V_62_fu_2946_p3;
wire   [3:0] arr3_V_44_fu_1811_p1;
wire   [3:0] select_ln233_43_fu_2960_p3;
wire   [3:0] select_ln233_44_fu_2967_p3;
wire   [3:0] arr3_V_72_fu_2880_p4;
wire   [3:0] arr3_V_76_fu_2981_p3;
wire   [63:0] p_Result_26_fu_1899_p3;
wire   [63:0] p_Result_27_fu_1917_p3;
wire   [63:0] p_Result_28_fu_1938_p3;
wire   [63:0] p_Val2_64_fu_3028_p5;
wire   [3:0] trunc_ln628_32_fu_3036_p1;
wire   [63:0] tmp_31_fu_2995_p5;
wire   [63:0] p_Val2_65_fu_3049_p5;
wire   [3:0] trunc_ln628_33_fu_3057_p1;
wire   [63:0] tmp_32_fu_3006_p5;
wire   [63:0] p_Val2_66_fu_3070_p5;
wire   [3:0] trunc_ln628_34_fu_3078_p1;
wire   [63:0] tmp_33_fu_3017_p5;
wire   [3:0] arr3_V_80_fu_3107_p4;
wire   [3:0] arr3_V_78_fu_3125_p4;
wire   [3:0] select_ln233_48_fu_3145_p3;
wire   [63:0] arr4_V_66_fu_3121_p1;
wire   [63:0] arr4_V_64_fu_3103_p1;
wire   [63:0] arr4_V_65_fu_3117_p1;
wire   [63:0] arr4_V_67_fu_3159_p3;
wire   [63:0] arr4_V_69_fu_3173_p3;
wire   [63:0] arr4_V_59_fu_2925_p3;
wire   [63:0] arr4_V_60_fu_2932_p3;
wire   [63:0] arr4_V_73_fu_3201_p3;
wire   [3:0] arr3_V_45_fu_1868_p1;
wire   [3:0] select_ln233_59_fu_3215_p3;
wire   [3:0] select_ln233_60_fu_3222_p3;
wire   [3:0] arr3_V_79_fu_3135_p4;
wire   [3:0] arr3_V_83_fu_3236_p3;
wire   [63:0] p_Result_29_fu_1956_p3;
wire   [63:0] p_Result_30_fu_1974_p3;
wire   [63:0] p_Result_31_fu_1995_p3;
wire   [63:0] p_Val2_70_fu_3283_p5;
wire   [3:0] trunc_ln628_38_fu_3291_p1;
wire   [63:0] tmp_34_fu_3250_p5;
wire   [63:0] p_Val2_71_fu_3304_p5;
wire   [3:0] trunc_ln628_39_fu_3312_p1;
wire   [63:0] tmp_35_fu_3261_p5;
wire   [63:0] p_Val2_72_fu_3325_p5;
wire   [3:0] trunc_ln628_40_fu_3333_p1;
wire   [63:0] tmp_36_fu_3272_p5;
wire   [3:0] arr3_V_87_fu_3362_p4;
wire   [3:0] arr3_V_85_fu_3380_p4;
wire   [3:0] select_ln233_64_fu_3400_p3;
wire   [63:0] arr4_V_77_fu_3376_p1;
wire   [63:0] arr4_V_75_fu_3358_p1;
wire   [63:0] arr4_V_76_fu_3372_p1;
wire   [63:0] arr4_V_78_fu_3414_p3;
wire   [63:0] arr4_V_80_fu_3428_p3;
wire   [63:0] arr4_V_70_fu_3180_p3;
wire   [63:0] arr4_V_71_fu_3187_p3;
wire   [63:0] arr4_V_84_fu_3456_p3;
wire   [3:0] arr3_V_46_fu_1925_p1;
wire   [3:0] select_ln233_75_fu_3470_p3;
wire   [3:0] select_ln233_76_fu_3477_p3;
wire   [3:0] arr3_V_86_fu_3390_p4;
wire   [3:0] arr3_V_47_fu_1982_p1;
wire   [3:0] arr3_V_91_fu_3497_p3;
wire   [3:0] arr3_V_93_fu_3511_p3;
wire   [9:0] empty_fu_3701_p2;
wire   [9:0] empty_521_fu_3730_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_ext_blocking_sub_n;
reg    ap_wait_0;
reg    ap_sub_ext_blocking_0;
reg    ap_wait_1;
reg    ap_sub_ext_blocking_1;
reg    ap_wait_2;
reg    ap_sub_ext_blocking_2;
reg    ap_wait_3;
reg    ap_sub_ext_blocking_3;
reg    ap_wait_4;
reg    ap_sub_ext_blocking_4;
reg    ap_wait_5;
reg    ap_sub_ext_blocking_5;
reg    ap_str_blocking_sub_n;
reg    ap_sub_str_blocking_0;
reg    ap_sub_str_blocking_1;
reg    ap_sub_str_blocking_2;
reg    ap_sub_str_blocking_3;
reg    ap_sub_str_blocking_4;
reg    ap_sub_str_blocking_5;
reg    ap_int_blocking_sub_n;
reg    ap_sub_int_blocking_0;
reg    ap_sub_int_blocking_1;
reg    ap_sub_int_blocking_2;
reg    ap_sub_int_blocking_3;
reg    ap_sub_int_blocking_4;
reg    ap_sub_int_blocking_5;
reg    ap_block_pp0;
reg    ap_enable_operation_165;
reg    ap_enable_state1_pp0_iter0_stage0;
wire    ap_enable_operation_211;
reg    ap_enable_state2_pp0_iter1_stage0;
reg    ap_enable_operation_590;
reg    ap_enable_state4_pp0_iter3_stage0;
reg    ap_enable_operation_593;
reg    ap_enable_operation_167;
wire    ap_enable_operation_213;
wire    ap_enable_operation_596;
reg    ap_enable_operation_169;
wire    ap_enable_operation_214;
wire    ap_enable_operation_598;
reg    ap_enable_operation_171;
wire    ap_enable_operation_215;
wire    ap_enable_operation_600;
reg    ap_enable_operation_173;
wire    ap_enable_operation_216;
wire    ap_enable_operation_602;
reg    ap_enable_operation_175;
wire    ap_enable_operation_217;
wire    ap_enable_operation_604;
reg    ap_enable_operation_177;
wire    ap_enable_operation_218;
wire    ap_enable_operation_606;
reg    ap_enable_operation_179;
wire    ap_enable_operation_219;
wire    ap_enable_operation_608;
reg    ap_enable_operation_181;
wire    ap_enable_operation_220;
wire    ap_enable_operation_610;
reg    ap_enable_operation_183;
wire    ap_enable_operation_221;
wire    ap_enable_operation_612;
reg    ap_enable_operation_185;
wire    ap_enable_operation_222;
wire    ap_enable_operation_614;
reg    ap_enable_operation_187;
wire    ap_enable_operation_223;
wire    ap_enable_operation_616;
reg    ap_enable_operation_189;
wire    ap_enable_operation_224;
wire    ap_enable_operation_618;
reg    ap_enable_operation_191;
wire    ap_enable_operation_225;
wire    ap_enable_operation_620;
reg    ap_enable_operation_193;
wire    ap_enable_operation_226;
wire    ap_enable_operation_622;
reg    ap_enable_operation_195;
wire    ap_enable_operation_227;
wire    ap_enable_operation_624;
reg    ap_enable_operation_197;
wire    ap_enable_operation_228;
wire    ap_enable_operation_626;
reg    ap_enable_operation_199;
wire    ap_enable_operation_229;
wire    ap_enable_operation_628;
reg    ap_enable_operation_201;
wire    ap_enable_operation_230;
wire    ap_enable_operation_630;
reg    ap_enable_operation_203;
wire    ap_enable_operation_231;
wire    ap_enable_operation_632;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

edgetracing_accel_PixelProcessNew_1_s call_ret1_PixelProcessNew_1_s_fu_1166(
    .ap_ready(call_ret1_PixelProcessNew_1_s_fu_1166_ap_ready),
    .k1(call_ret1_PixelProcessNew_1_s_fu_1166_k1),
    .k2(call_ret1_PixelProcessNew_1_s_fu_1166_k2),
    .k3(call_ret1_PixelProcessNew_1_s_fu_1166_k3),
    .ap_return_0(call_ret1_PixelProcessNew_1_s_fu_1166_ap_return_0),
    .ap_return_1(call_ret1_PixelProcessNew_1_s_fu_1166_ap_return_1),
    .ap_return_2(call_ret1_PixelProcessNew_1_s_fu_1166_ap_return_2),
    .ap_ext_blocking_n(call_ret1_PixelProcessNew_1_s_fu_1166_ap_ext_blocking_n),
    .ap_str_blocking_n(call_ret1_PixelProcessNew_1_s_fu_1166_ap_str_blocking_n),
    .ap_int_blocking_n(call_ret1_PixelProcessNew_1_s_fu_1166_ap_int_blocking_n)
);

edgetracing_accel_PixelProcessNew_1_s call_ret2_PixelProcessNew_1_s_fu_1173(
    .ap_ready(call_ret2_PixelProcessNew_1_s_fu_1173_ap_ready),
    .k1(call_ret2_PixelProcessNew_1_s_fu_1173_k1),
    .k2(call_ret2_PixelProcessNew_1_s_fu_1173_k2),
    .k3(call_ret2_PixelProcessNew_1_s_fu_1173_k3),
    .ap_return_0(call_ret2_PixelProcessNew_1_s_fu_1173_ap_return_0),
    .ap_return_1(call_ret2_PixelProcessNew_1_s_fu_1173_ap_return_1),
    .ap_return_2(call_ret2_PixelProcessNew_1_s_fu_1173_ap_return_2),
    .ap_ext_blocking_n(call_ret2_PixelProcessNew_1_s_fu_1173_ap_ext_blocking_n),
    .ap_str_blocking_n(call_ret2_PixelProcessNew_1_s_fu_1173_ap_str_blocking_n),
    .ap_int_blocking_n(call_ret2_PixelProcessNew_1_s_fu_1173_ap_int_blocking_n)
);

edgetracing_accel_PixelProcessNew_1_s call_ret3_PixelProcessNew_1_s_fu_1180(
    .ap_ready(call_ret3_PixelProcessNew_1_s_fu_1180_ap_ready),
    .k1(call_ret3_PixelProcessNew_1_s_fu_1180_k1),
    .k2(call_ret3_PixelProcessNew_1_s_fu_1180_k2),
    .k3(call_ret3_PixelProcessNew_1_s_fu_1180_k3),
    .ap_return_0(call_ret3_PixelProcessNew_1_s_fu_1180_ap_return_0),
    .ap_return_1(call_ret3_PixelProcessNew_1_s_fu_1180_ap_return_1),
    .ap_return_2(call_ret3_PixelProcessNew_1_s_fu_1180_ap_return_2),
    .ap_ext_blocking_n(call_ret3_PixelProcessNew_1_s_fu_1180_ap_ext_blocking_n),
    .ap_str_blocking_n(call_ret3_PixelProcessNew_1_s_fu_1180_ap_str_blocking_n),
    .ap_int_blocking_n(call_ret3_PixelProcessNew_1_s_fu_1180_ap_int_blocking_n)
);

edgetracing_accel_PixelProcessNew_1_s call_ret4_PixelProcessNew_1_s_fu_1187(
    .ap_ready(call_ret4_PixelProcessNew_1_s_fu_1187_ap_ready),
    .k1(call_ret4_PixelProcessNew_1_s_fu_1187_k1),
    .k2(call_ret4_PixelProcessNew_1_s_fu_1187_k2),
    .k3(call_ret4_PixelProcessNew_1_s_fu_1187_k3),
    .ap_return_0(call_ret4_PixelProcessNew_1_s_fu_1187_ap_return_0),
    .ap_return_1(call_ret4_PixelProcessNew_1_s_fu_1187_ap_return_1),
    .ap_return_2(call_ret4_PixelProcessNew_1_s_fu_1187_ap_return_2),
    .ap_ext_blocking_n(call_ret4_PixelProcessNew_1_s_fu_1187_ap_ext_blocking_n),
    .ap_str_blocking_n(call_ret4_PixelProcessNew_1_s_fu_1187_ap_str_blocking_n),
    .ap_int_blocking_n(call_ret4_PixelProcessNew_1_s_fu_1187_ap_int_blocking_n)
);

edgetracing_accel_PixelProcessNew_1_s call_ret5_PixelProcessNew_1_s_fu_1194(
    .ap_ready(call_ret5_PixelProcessNew_1_s_fu_1194_ap_ready),
    .k1(call_ret5_PixelProcessNew_1_s_fu_1194_k1),
    .k2(call_ret5_PixelProcessNew_1_s_fu_1194_k2),
    .k3(call_ret5_PixelProcessNew_1_s_fu_1194_k3),
    .ap_return_0(call_ret5_PixelProcessNew_1_s_fu_1194_ap_return_0),
    .ap_return_1(call_ret5_PixelProcessNew_1_s_fu_1194_ap_return_1),
    .ap_return_2(call_ret5_PixelProcessNew_1_s_fu_1194_ap_return_2),
    .ap_ext_blocking_n(call_ret5_PixelProcessNew_1_s_fu_1194_ap_ext_blocking_n),
    .ap_str_blocking_n(call_ret5_PixelProcessNew_1_s_fu_1194_ap_str_blocking_n),
    .ap_int_blocking_n(call_ret5_PixelProcessNew_1_s_fu_1194_ap_int_blocking_n)
);

edgetracing_accel_PixelProcessNew_1_s call_ret_PixelProcessNew_1_s_fu_1201(
    .ap_ready(call_ret_PixelProcessNew_1_s_fu_1201_ap_ready),
    .k1(call_ret_PixelProcessNew_1_s_fu_1201_k1),
    .k2(call_ret_PixelProcessNew_1_s_fu_1201_k2),
    .k3(call_ret_PixelProcessNew_1_s_fu_1201_k3),
    .ap_return_0(call_ret_PixelProcessNew_1_s_fu_1201_ap_return_0),
    .ap_return_1(call_ret_PixelProcessNew_1_s_fu_1201_ap_return_1),
    .ap_return_2(call_ret_PixelProcessNew_1_s_fu_1201_ap_return_2),
    .ap_ext_blocking_n(call_ret_PixelProcessNew_1_s_fu_1201_ap_ext_blocking_n),
    .ap_str_blocking_n(call_ret_PixelProcessNew_1_s_fu_1201_ap_str_blocking_n),
    .ap_int_blocking_n(call_ret_PixelProcessNew_1_s_fu_1201_ap_int_blocking_n)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U49(
    .din0(iBuff_0_q1),
    .din1(iBuff_1_q1),
    .din2(iBuff_2_q1),
    .din3(j),
    .dout(p_Val2_40_fu_1496_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U50(
    .din0(p_Result_s_fu_1633_p3),
    .din1(p_Result_13_fu_1650_p3),
    .din2(p_Result_14_fu_1671_p3),
    .din3(j),
    .dout(tmp_19_fu_2003_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U51(
    .din0(p_Result_13_fu_1650_p3),
    .din1(p_Result_14_fu_1671_p3),
    .din2(p_Result_15_fu_1689_p3),
    .din3(j),
    .dout(tmp_20_fu_2014_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U52(
    .din0(p_Result_14_fu_1671_p3),
    .din1(p_Result_15_fu_1689_p3),
    .din2(p_Result_16_fu_1710_p3),
    .din3(j),
    .dout(tmp_21_fu_2025_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U53(
    .din0(arr1_V_41_reg_4353),
    .din1(arr1_V_42_reg_4360),
    .din2(arr1_V_43_reg_4367),
    .din3(j),
    .dout(p_Val2_41_fu_2044_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U54(
    .din0(arr1_V_42_reg_4360),
    .din1(arr1_V_43_reg_4367),
    .din2(arr1_V_44_reg_4376),
    .din3(j),
    .dout(p_Val2_42_fu_2065_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U55(
    .din0(p_Result_15_fu_1689_p3),
    .din1(p_Result_16_fu_1710_p3),
    .din2(p_Result_17_fu_1728_p3),
    .din3(j),
    .dout(tmp_22_fu_2230_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U56(
    .din0(p_Result_16_fu_1710_p3),
    .din1(p_Result_17_fu_1728_p3),
    .din2(p_Result_18_fu_1746_p3),
    .din3(j),
    .dout(tmp_23_fu_2241_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U57(
    .din0(p_Result_17_fu_1728_p3),
    .din1(p_Result_18_fu_1746_p3),
    .din2(p_Result_19_fu_1767_p3),
    .din3(j),
    .dout(tmp_24_fu_2252_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U58(
    .din0(arr1_V_43_reg_4367),
    .din1(arr1_V_44_reg_4376),
    .din2(arr1_V_45_reg_4384),
    .din3(j),
    .dout(p_Val2_46_fu_2263_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U59(
    .din0(arr1_V_44_reg_4376),
    .din1(arr1_V_45_reg_4384),
    .din2(arr1_V_46_reg_4392),
    .din3(j),
    .dout(p_Val2_47_fu_2284_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U60(
    .din0(arr1_V_45_reg_4384),
    .din1(arr1_V_46_reg_4392),
    .din2(arr1_V_47_reg_4401),
    .din3(j),
    .dout(p_Val2_48_fu_2305_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U61(
    .din0(p_Result_18_fu_1746_p3),
    .din1(p_Result_19_fu_1767_p3),
    .din2(p_Result_20_fu_1785_p3),
    .din3(j),
    .dout(tmp_25_fu_2485_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U62(
    .din0(p_Result_19_fu_1767_p3),
    .din1(p_Result_20_fu_1785_p3),
    .din2(p_Result_21_fu_1803_p3),
    .din3(j),
    .dout(tmp_26_fu_2496_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U63(
    .din0(p_Result_20_fu_1785_p3),
    .din1(p_Result_21_fu_1803_p3),
    .din2(p_Result_22_fu_1824_p3),
    .din3(j),
    .dout(tmp_27_fu_2507_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U64(
    .din0(arr1_V_46_reg_4392),
    .din1(arr1_V_47_reg_4401),
    .din2(arr1_V_48_reg_4409),
    .din3(j),
    .dout(p_Val2_52_fu_2518_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U65(
    .din0(arr1_V_47_reg_4401),
    .din1(arr1_V_48_reg_4409),
    .din2(arr1_V_49_reg_4417),
    .din3(j),
    .dout(p_Val2_53_fu_2539_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U66(
    .din0(arr1_V_48_reg_4409),
    .din1(arr1_V_49_reg_4417),
    .din2(arr1_V_50_reg_4426),
    .din3(j),
    .dout(p_Val2_54_fu_2560_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U67(
    .din0(p_Result_21_fu_1803_p3),
    .din1(p_Result_22_fu_1824_p3),
    .din2(p_Result_23_fu_1842_p3),
    .din3(j),
    .dout(tmp_28_fu_2740_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U68(
    .din0(p_Result_22_fu_1824_p3),
    .din1(p_Result_23_fu_1842_p3),
    .din2(p_Result_24_fu_1860_p3),
    .din3(j),
    .dout(tmp_29_fu_2751_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U69(
    .din0(p_Result_23_fu_1842_p3),
    .din1(p_Result_24_fu_1860_p3),
    .din2(p_Result_25_fu_1881_p3),
    .din3(j),
    .dout(tmp_30_fu_2762_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U70(
    .din0(arr1_V_49_reg_4417),
    .din1(arr1_V_50_reg_4426),
    .din2(arr1_V_51_reg_4434),
    .din3(j),
    .dout(p_Val2_58_fu_2773_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U71(
    .din0(arr1_V_50_reg_4426),
    .din1(arr1_V_51_reg_4434),
    .din2(arr1_V_52_reg_4442),
    .din3(j),
    .dout(p_Val2_59_fu_2794_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U72(
    .din0(arr1_V_51_reg_4434),
    .din1(arr1_V_52_reg_4442),
    .din2(arr1_V_53_reg_4451),
    .din3(j),
    .dout(p_Val2_60_fu_2815_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U73(
    .din0(p_Result_24_fu_1860_p3),
    .din1(p_Result_25_fu_1881_p3),
    .din2(p_Result_26_fu_1899_p3),
    .din3(j),
    .dout(tmp_31_fu_2995_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U74(
    .din0(p_Result_25_fu_1881_p3),
    .din1(p_Result_26_fu_1899_p3),
    .din2(p_Result_27_fu_1917_p3),
    .din3(j),
    .dout(tmp_32_fu_3006_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U75(
    .din0(p_Result_26_fu_1899_p3),
    .din1(p_Result_27_fu_1917_p3),
    .din2(p_Result_28_fu_1938_p3),
    .din3(j),
    .dout(tmp_33_fu_3017_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U76(
    .din0(arr1_V_52_reg_4442),
    .din1(arr1_V_53_reg_4451),
    .din2(arr1_V_54_reg_4459),
    .din3(j),
    .dout(p_Val2_64_fu_3028_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U77(
    .din0(arr1_V_53_reg_4451),
    .din1(arr1_V_54_reg_4459),
    .din2(arr1_V_55_reg_4467),
    .din3(j),
    .dout(p_Val2_65_fu_3049_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U78(
    .din0(arr1_V_54_reg_4459),
    .din1(arr1_V_55_reg_4467),
    .din2(arr1_V_56_reg_4476),
    .din3(j),
    .dout(p_Val2_66_fu_3070_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U79(
    .din0(p_Result_27_fu_1917_p3),
    .din1(p_Result_28_fu_1938_p3),
    .din2(p_Result_29_fu_1956_p3),
    .din3(j),
    .dout(tmp_34_fu_3250_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U80(
    .din0(p_Result_28_fu_1938_p3),
    .din1(p_Result_29_fu_1956_p3),
    .din2(p_Result_30_fu_1974_p3),
    .din3(j),
    .dout(tmp_35_fu_3261_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U81(
    .din0(p_Result_29_fu_1956_p3),
    .din1(p_Result_30_fu_1974_p3),
    .din2(p_Result_31_fu_1995_p3),
    .din3(j),
    .dout(tmp_36_fu_3272_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U82(
    .din0(arr1_V_55_reg_4467),
    .din1(arr1_V_56_reg_4476),
    .din2(arr1_V_57_reg_4484),
    .din3(j),
    .dout(p_Val2_70_fu_3283_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U83(
    .din0(arr1_V_56_reg_4476),
    .din1(arr1_V_57_reg_4484),
    .din2(arr1_V_58_reg_4492),
    .din3(j),
    .dout(p_Val2_71_fu_3304_p5)
);

edgetracing_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U84(
    .din0(arr1_V_57_reg_4484),
    .din1(arr1_V_58_reg_4492),
    .din2(arr1_V_59_reg_4500),
    .din3(j),
    .dout(p_Val2_72_fu_3325_p5)
);

edgetracing_accel_mux_325_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 64 ),
    .din17_WIDTH( 64 ),
    .din18_WIDTH( 64 ),
    .din19_WIDTH( 64 ),
    .din20_WIDTH( 64 ),
    .din21_WIDTH( 64 ),
    .din22_WIDTH( 64 ),
    .din23_WIDTH( 64 ),
    .din24_WIDTH( 64 ),
    .din25_WIDTH( 64 ),
    .din26_WIDTH( 64 ),
    .din27_WIDTH( 64 ),
    .din28_WIDTH( 64 ),
    .din29_WIDTH( 64 ),
    .din30_WIDTH( 64 ),
    .din31_WIDTH( 64 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 64 ))
mux_325_64_1_1_U85(
    .din0(64'd0),
    .din1(arr4_V_28_reg_4522),
    .din2(arr4_V_30_reg_4528),
    .din3(arr4_V_24_reg_4516),
    .din4(arr4_V_39_reg_4540),
    .din5(arr4_V_41_reg_4546),
    .din6(arr4_V_35_reg_4534),
    .din7(arr4_V_50_reg_4558),
    .din8(arr4_V_52_reg_4564),
    .din9(arr4_V_46_reg_4552),
    .din10(arr4_V_61_reg_4576),
    .din11(arr4_V_63_reg_4582),
    .din12(arr4_V_57_reg_4570),
    .din13(arr4_V_72_reg_4594),
    .din14(arr4_V_74_reg_4600),
    .din15(arr4_V_68_reg_4588),
    .din16(arr4_V_83_reg_4624),
    .din17(arr4_V_85_reg_4630),
    .din18(arr4_V_79_reg_4606),
    .din19(arr4_V_81_reg_4612),
    .din20(arr4_V_82_reg_4618),
    .din21(64'd0),
    .din22(64'd0),
    .din23(64'd0),
    .din24(64'd0),
    .din25(64'd0),
    .din26(64'd0),
    .din27(64'd0),
    .din28(64'd0),
    .din29(64'd0),
    .din30(64'd0),
    .din31(64'd0),
    .din32(bramtotal),
    .dout(tmp_37_fu_3739_p34)
);

edgetracing_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_20_fu_210 <= arr3_V;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_20_fu_210 <= arr3_V_54_fu_2210_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_21_fu_214 <= arr3_V_1;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_21_fu_214 <= arr3_V_53_fu_2147_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_22_fu_218 <= arr3_V_2;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_22_fu_218 <= arr3_V_56_fu_2223_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_23_fu_222 <= arr3_V_3;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_23_fu_222 <= arr3_V_61_fu_2464_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_24_fu_226 <= arr3_V_4;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_24_fu_226 <= arr3_V_60_fu_2387_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_25_fu_230 <= arr3_V_5;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_25_fu_230 <= arr3_V_63_fu_2478_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_26_fu_234 <= arr3_V_6;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_26_fu_234 <= arr3_V_68_fu_2719_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_27_fu_238 <= arr3_V_7;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_27_fu_238 <= arr3_V_67_fu_2642_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_28_fu_242 <= arr3_V_8;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_28_fu_242 <= arr3_V_70_fu_2733_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_29_fu_246 <= arr3_V_9;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_29_fu_246 <= arr3_V_75_fu_2974_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_30_fu_250 <= arr3_V_10;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_30_fu_250 <= arr3_V_74_fu_2897_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_31_fu_254 <= arr3_V_11;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_31_fu_254 <= arr3_V_77_fu_2988_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_32_fu_258 <= arr3_V_12;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_32_fu_258 <= arr3_V_82_fu_3229_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_33_fu_262 <= arr3_V_13;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_33_fu_262 <= arr3_V_81_fu_3152_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_34_fu_266 <= arr3_V_14;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_34_fu_266 <= arr3_V_84_fu_3243_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_35_fu_270 <= arr3_V_15;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_35_fu_270 <= arr3_V_89_fu_3484_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_36_fu_274 <= arr3_V_16;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_36_fu_274 <= arr3_V_88_fu_3407_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_37_fu_278 <= arr3_V_17;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_37_fu_278 <= arr3_V_94_fu_3518_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_38_fu_282 <= arr3_V_18;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_38_fu_282 <= arr3_V_92_fu_3504_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            arr3_V_39_fu_286 <= arr3_V_19;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            arr3_V_39_fu_286 <= arr3_V_90_fu_3491_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln189_fu_1448_p2 == 1'd1) & (ap_start_int == 1'b1))) begin
            el_fu_206 <= add_ln190_fu_1464_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            el_fu_206 <= 17'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_10_fu_330 <= arr1_V_10;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            p_Val2_10_fu_330 <= arr1_V_50_reg_4426;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_11_fu_334 <= arr1_V_11;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            p_Val2_11_fu_334 <= arr1_V_51_reg_4434;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_12_fu_338 <= arr1_V_12;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            p_Val2_12_fu_338 <= arr1_V_52_reg_4442;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_13_fu_342 <= arr1_V_13;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            p_Val2_13_fu_342 <= arr1_V_53_reg_4451;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_14_fu_346 <= arr1_V_14;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            p_Val2_14_fu_346 <= arr1_V_54_reg_4459;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_15_fu_350 <= arr1_V_15;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            p_Val2_15_fu_350 <= arr1_V_55_reg_4467;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_16_fu_354 <= arr1_V_16;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            p_Val2_16_fu_354 <= arr1_V_56_reg_4476;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_17_fu_358 <= arr1_V_17;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            p_Val2_17_fu_358 <= arr1_V_57_reg_4484;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_18_fu_362 <= arr1_V_18;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            p_Val2_18_fu_362 <= arr1_V_58_reg_4492;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_19_fu_366 <= arr1_V_19;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            p_Val2_19_fu_366 <= arr1_V_59_reg_4500;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_1_fu_294 <= arr1_V_1;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            p_Val2_1_fu_294 <= arr1_V_41_reg_4353;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_2_fu_298 <= arr1_V_2;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            p_Val2_2_fu_298 <= arr1_V_42_reg_4360;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_3_fu_302 <= arr1_V_3;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            p_Val2_3_fu_302 <= arr1_V_43_reg_4367;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_4_fu_306 <= arr1_V_4;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            p_Val2_4_fu_306 <= arr1_V_44_reg_4376;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_5_fu_310 <= arr1_V_5;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            p_Val2_5_fu_310 <= arr1_V_45_reg_4384;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_6_fu_314 <= arr1_V_6;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            p_Val2_6_fu_314 <= arr1_V_46_reg_4392;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_7_fu_318 <= arr1_V_7;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            p_Val2_7_fu_318 <= arr1_V_47_reg_4401;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_8_fu_322 <= arr1_V_8;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            p_Val2_8_fu_322 <= arr1_V_48_reg_4409;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_9_fu_326 <= arr1_V_9;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            p_Val2_9_fu_326 <= arr1_V_49_reg_4417;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_Val2_s_fu_290 <= arr1_V;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            p_Val2_s_fu_290 <= iBuff_0_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        cmp173_reg_4333_pp0_iter1_reg <= cmp173_reg_4333;
        tmp216_cast_cast_reg_4224 <= tmp216_cast_cast_fu_1208_p1;
        tmp_reg_4343 <= {{p_Val2_s_fu_290[63:4]}};
        trunc_ln189_reg_4337_pp0_iter1_reg <= trunc_ln189_reg_4337;
        trunc_ln628_reg_4511 <= trunc_ln628_fu_1507_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr1_V_41_reg_4353 <= iBuff_1_q1;
        arr1_V_42_reg_4360 <= iBuff_2_q1;
        arr1_V_43_reg_4367 <= iBuff_3_q1;
        arr1_V_44_reg_4376 <= iBuff_4_q1;
        arr1_V_45_reg_4384 <= iBuff_5_q1;
        arr1_V_46_reg_4392 <= iBuff_6_q1;
        arr1_V_47_reg_4401 <= iBuff_7_q1;
        arr1_V_48_reg_4409 <= iBuff_8_q1;
        arr1_V_49_reg_4417 <= iBuff_9_q1;
        arr1_V_50_reg_4426 <= iBuff_10_q1;
        arr1_V_51_reg_4434 <= iBuff_11_q1;
        arr1_V_52_reg_4442 <= iBuff_12_q1;
        arr1_V_53_reg_4451 <= iBuff_13_q1;
        arr1_V_54_reg_4459 <= iBuff_14_q1;
        arr1_V_55_reg_4467 <= iBuff_15_q1;
        arr1_V_56_reg_4476 <= iBuff_16_q1;
        arr1_V_57_reg_4484 <= iBuff_17_q1;
        arr1_V_58_reg_4492 <= iBuff_18_q1;
        arr1_V_59_reg_4500 <= iBuff_19_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_read_reg_4132 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr3_V_40_reg_4348 <= arr3_V_40_fu_1488_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln233_read_reg_4076 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr3_V_48_reg_4506 <= arr3_V_48_fu_1492_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        arr4_V_24_reg_4516 <= arr4_V_24_fu_2161_p3;
        arr4_V_28_reg_4522 <= arr4_V_28_fu_2189_p3;
        arr4_V_30_reg_4528 <= arr4_V_30_fu_2203_p3;
        arr4_V_35_reg_4534 <= arr4_V_35_fu_2401_p3;
        arr4_V_39_reg_4540 <= arr4_V_39_fu_2429_p3;
        arr4_V_41_reg_4546 <= arr4_V_41_fu_2443_p3;
        arr4_V_46_reg_4552 <= arr4_V_46_fu_2656_p3;
        arr4_V_50_reg_4558 <= arr4_V_50_fu_2684_p3;
        arr4_V_52_reg_4564 <= arr4_V_52_fu_2698_p3;
        arr4_V_57_reg_4570 <= arr4_V_57_fu_2911_p3;
        arr4_V_61_reg_4576 <= arr4_V_61_fu_2939_p3;
        arr4_V_63_reg_4582 <= arr4_V_63_fu_2953_p3;
        arr4_V_68_reg_4588 <= arr4_V_68_fu_3166_p3;
        arr4_V_72_reg_4594 <= arr4_V_72_fu_3194_p3;
        arr4_V_74_reg_4600 <= arr4_V_74_fu_3208_p3;
        arr4_V_79_reg_4606 <= arr4_V_79_fu_3421_p3;
        arr4_V_81_reg_4612 <= arr4_V_81_fu_3435_p3;
        arr4_V_82_reg_4618 <= arr4_V_82_fu_3442_p3;
        arr4_V_83_reg_4624 <= arr4_V_83_fu_3449_p3;
        arr4_V_85_reg_4630 <= arr4_V_85_fu_3463_p3;
        cmp173_reg_4333_pp0_iter2_reg <= cmp173_reg_4333_pp0_iter1_reg;
        trunc_ln189_reg_4337_pp0_iter2_reg <= trunc_ln189_reg_4337_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln189_fu_1448_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp173_reg_4333 <= cmp173_fu_1454_p2;
        trunc_ln189_reg_4337 <= trunc_ln189_fu_1460_p1;
    end
end

always @ (*) begin
    if (((icmp_ln189_fu_1448_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((((ap_wait_5 & ap_sub_ext_blocking_5) == 1'b1) & ((ap_wait_4 & ap_sub_ext_blocking_4) == 1'b1) & ((ap_wait_3 & ap_sub_ext_blocking_3) == 1'b1) & ((ap_wait_2 & ap_sub_ext_blocking_2) == 1'b1) & ((ap_wait_1 & ap_sub_ext_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_ext_blocking_0) == 1'b1))) begin
        ap_ext_blocking_sub_n = 1'b0;
    end else begin
        ap_ext_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_wait_5 & ap_sub_int_blocking_5) == 1'b1) & ((ap_wait_4 & ap_sub_int_blocking_4) == 1'b1) & ((ap_wait_3 & ap_sub_int_blocking_3) == 1'b1) & ((ap_wait_2 & ap_sub_int_blocking_2) == 1'b1) & ((ap_wait_1 & ap_sub_int_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_int_blocking_0) == 1'b1))) begin
        ap_int_blocking_sub_n = 1'b0;
    end else begin
        ap_int_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_el_1 = 17'd1;
    end else begin
        ap_sig_allocacmp_el_1 = el_fu_206;
    end
end

always @ (*) begin
    if ((((ap_wait_5 & ap_sub_str_blocking_5) == 1'b1) & ((ap_wait_4 & ap_sub_str_blocking_4) == 1'b1) & ((ap_wait_3 & ap_sub_str_blocking_3) == 1'b1) & ((ap_wait_2 & ap_sub_str_blocking_2) == 1'b1) & ((ap_wait_1 & ap_sub_str_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_str_blocking_0) == 1'b1))) begin
        ap_str_blocking_sub_n = 1'b0;
    end else begin
        ap_str_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if ((call_ret1_PixelProcessNew_1_s_fu_1166_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_0 = 1'b1;
    end else begin
        ap_sub_ext_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((call_ret2_PixelProcessNew_1_s_fu_1173_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_1 = 1'b1;
    end else begin
        ap_sub_ext_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((call_ret3_PixelProcessNew_1_s_fu_1180_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_2 = 1'b1;
    end else begin
        ap_sub_ext_blocking_2 = 1'b0;
    end
end

always @ (*) begin
    if ((call_ret4_PixelProcessNew_1_s_fu_1187_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_3 = 1'b1;
    end else begin
        ap_sub_ext_blocking_3 = 1'b0;
    end
end

always @ (*) begin
    if ((call_ret5_PixelProcessNew_1_s_fu_1194_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_4 = 1'b1;
    end else begin
        ap_sub_ext_blocking_4 = 1'b0;
    end
end

always @ (*) begin
    if ((call_ret_PixelProcessNew_1_s_fu_1201_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_5 = 1'b1;
    end else begin
        ap_sub_ext_blocking_5 = 1'b0;
    end
end

always @ (*) begin
    if ((call_ret1_PixelProcessNew_1_s_fu_1166_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_0 = 1'b1;
    end else begin
        ap_sub_int_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((call_ret2_PixelProcessNew_1_s_fu_1173_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_1 = 1'b1;
    end else begin
        ap_sub_int_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((call_ret3_PixelProcessNew_1_s_fu_1180_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_2 = 1'b1;
    end else begin
        ap_sub_int_blocking_2 = 1'b0;
    end
end

always @ (*) begin
    if ((call_ret4_PixelProcessNew_1_s_fu_1187_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_3 = 1'b1;
    end else begin
        ap_sub_int_blocking_3 = 1'b0;
    end
end

always @ (*) begin
    if ((call_ret5_PixelProcessNew_1_s_fu_1194_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_4 = 1'b1;
    end else begin
        ap_sub_int_blocking_4 = 1'b0;
    end
end

always @ (*) begin
    if ((call_ret_PixelProcessNew_1_s_fu_1201_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_5 = 1'b1;
    end else begin
        ap_sub_int_blocking_5 = 1'b0;
    end
end

always @ (*) begin
    if ((call_ret1_PixelProcessNew_1_s_fu_1166_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_0 = 1'b1;
    end else begin
        ap_sub_str_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((call_ret2_PixelProcessNew_1_s_fu_1173_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_1 = 1'b1;
    end else begin
        ap_sub_str_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((call_ret3_PixelProcessNew_1_s_fu_1180_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_2 = 1'b1;
    end else begin
        ap_sub_str_blocking_2 = 1'b0;
    end
end

always @ (*) begin
    if ((call_ret4_PixelProcessNew_1_s_fu_1187_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_3 = 1'b1;
    end else begin
        ap_sub_str_blocking_3 = 1'b0;
    end
end

always @ (*) begin
    if ((call_ret5_PixelProcessNew_1_s_fu_1194_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_4 = 1'b1;
    end else begin
        ap_sub_str_blocking_4 = 1'b0;
    end
end

always @ (*) begin
    if ((call_ret_PixelProcessNew_1_s_fu_1201_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_5 = 1'b1;
    end else begin
        ap_sub_str_blocking_5 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm)) begin
        ap_wait_0 = 1'b1;
    end else begin
        ap_wait_0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm)) begin
        ap_wait_1 = 1'b1;
    end else begin
        ap_wait_1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm)) begin
        ap_wait_2 = 1'b1;
    end else begin
        ap_wait_2 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm)) begin
        ap_wait_3 = 1'b1;
    end else begin
        ap_wait_3 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm)) begin
        ap_wait_4 = 1'b1;
    end else begin
        ap_wait_4 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm)) begin
        ap_wait_5 = 1'b1;
    end else begin
        ap_wait_5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if ((cmp173_reg_4333_pp0_iter2_reg == 1'd1)) begin
            iBuff_0_address0 = p_cast_fu_3706_p1;
        end else if ((cmp173_reg_4333_pp0_iter2_reg == 1'd0)) begin
            iBuff_0_address0 = p_cast6_fu_3734_p1;
        end else begin
            iBuff_0_address0 = 'bx;
        end
    end else begin
        iBuff_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp173_reg_4333_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((cmp173_reg_4333_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        iBuff_0_ce0 = 1'b1;
    end else begin
        iBuff_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_0_ce1 = 1'b1;
    end else begin
        iBuff_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if ((cmp173_reg_4333_pp0_iter2_reg == 1'd1)) begin
            iBuff_0_d0 = arr4_V_28_reg_4522;
        end else if ((cmp173_reg_4333_pp0_iter2_reg == 1'd0)) begin
            iBuff_0_d0 = tmp_37_fu_3739_p34;
        end else begin
            iBuff_0_d0 = 'bx;
        end
    end else begin
        iBuff_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp173_reg_4333_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((cmp173_reg_4333_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        iBuff_0_we0 = 1'b1;
    end else begin
        iBuff_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_10_ce0 = 1'b1;
    end else begin
        iBuff_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_10_ce1 = 1'b1;
    end else begin
        iBuff_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_10_we0 = 1'b1;
    end else begin
        iBuff_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_11_ce0 = 1'b1;
    end else begin
        iBuff_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_11_ce1 = 1'b1;
    end else begin
        iBuff_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_11_we0 = 1'b1;
    end else begin
        iBuff_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_12_ce0 = 1'b1;
    end else begin
        iBuff_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_12_ce1 = 1'b1;
    end else begin
        iBuff_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_12_we0 = 1'b1;
    end else begin
        iBuff_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_13_ce0 = 1'b1;
    end else begin
        iBuff_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_13_ce1 = 1'b1;
    end else begin
        iBuff_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_13_we0 = 1'b1;
    end else begin
        iBuff_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_14_ce0 = 1'b1;
    end else begin
        iBuff_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_14_ce1 = 1'b1;
    end else begin
        iBuff_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_14_we0 = 1'b1;
    end else begin
        iBuff_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_15_ce0 = 1'b1;
    end else begin
        iBuff_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_15_ce1 = 1'b1;
    end else begin
        iBuff_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_15_we0 = 1'b1;
    end else begin
        iBuff_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_16_ce0 = 1'b1;
    end else begin
        iBuff_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_16_ce1 = 1'b1;
    end else begin
        iBuff_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_16_we0 = 1'b1;
    end else begin
        iBuff_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_17_ce0 = 1'b1;
    end else begin
        iBuff_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_17_ce1 = 1'b1;
    end else begin
        iBuff_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_17_we0 = 1'b1;
    end else begin
        iBuff_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_18_ce0 = 1'b1;
    end else begin
        iBuff_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_18_ce1 = 1'b1;
    end else begin
        iBuff_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_18_we0 = 1'b1;
    end else begin
        iBuff_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_19_ce0 = 1'b1;
    end else begin
        iBuff_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_19_ce1 = 1'b1;
    end else begin
        iBuff_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_19_we0 = 1'b1;
    end else begin
        iBuff_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_1_ce0 = 1'b1;
    end else begin
        iBuff_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_1_ce1 = 1'b1;
    end else begin
        iBuff_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_1_we0 = 1'b1;
    end else begin
        iBuff_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_2_ce0 = 1'b1;
    end else begin
        iBuff_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_2_ce1 = 1'b1;
    end else begin
        iBuff_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_2_we0 = 1'b1;
    end else begin
        iBuff_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_3_ce0 = 1'b1;
    end else begin
        iBuff_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_3_ce1 = 1'b1;
    end else begin
        iBuff_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_3_we0 = 1'b1;
    end else begin
        iBuff_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_4_ce0 = 1'b1;
    end else begin
        iBuff_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_4_ce1 = 1'b1;
    end else begin
        iBuff_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_4_we0 = 1'b1;
    end else begin
        iBuff_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_5_ce0 = 1'b1;
    end else begin
        iBuff_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_5_ce1 = 1'b1;
    end else begin
        iBuff_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_5_we0 = 1'b1;
    end else begin
        iBuff_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_6_ce0 = 1'b1;
    end else begin
        iBuff_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_6_ce1 = 1'b1;
    end else begin
        iBuff_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_6_we0 = 1'b1;
    end else begin
        iBuff_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_7_ce0 = 1'b1;
    end else begin
        iBuff_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_7_ce1 = 1'b1;
    end else begin
        iBuff_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_7_we0 = 1'b1;
    end else begin
        iBuff_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_8_ce0 = 1'b1;
    end else begin
        iBuff_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_8_ce1 = 1'b1;
    end else begin
        iBuff_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_8_we0 = 1'b1;
    end else begin
        iBuff_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_9_ce0 = 1'b1;
    end else begin
        iBuff_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_9_ce1 = 1'b1;
    end else begin
        iBuff_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_9_we0 = 1'b1;
    end else begin
        iBuff_9_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln190_fu_1464_p2 = (ap_sig_allocacmp_el_1 + 17'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_165 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_167 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_169 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_171 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_173 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_175 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_177 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_179 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_181 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_183 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_185 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_187 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_189 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_191 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_193 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_195 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_197 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_199 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_201 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_203 = (icmp_ln189_fu_1448_p2 == 1'd1);
end

assign ap_enable_operation_211 = (1'b1 == 1'b1);

assign ap_enable_operation_213 = (1'b1 == 1'b1);

assign ap_enable_operation_214 = (1'b1 == 1'b1);

assign ap_enable_operation_215 = (1'b1 == 1'b1);

assign ap_enable_operation_216 = (1'b1 == 1'b1);

assign ap_enable_operation_217 = (1'b1 == 1'b1);

assign ap_enable_operation_218 = (1'b1 == 1'b1);

assign ap_enable_operation_219 = (1'b1 == 1'b1);

assign ap_enable_operation_220 = (1'b1 == 1'b1);

assign ap_enable_operation_221 = (1'b1 == 1'b1);

assign ap_enable_operation_222 = (1'b1 == 1'b1);

assign ap_enable_operation_223 = (1'b1 == 1'b1);

assign ap_enable_operation_224 = (1'b1 == 1'b1);

assign ap_enable_operation_225 = (1'b1 == 1'b1);

assign ap_enable_operation_226 = (1'b1 == 1'b1);

assign ap_enable_operation_227 = (1'b1 == 1'b1);

assign ap_enable_operation_228 = (1'b1 == 1'b1);

assign ap_enable_operation_229 = (1'b1 == 1'b1);

assign ap_enable_operation_230 = (1'b1 == 1'b1);

assign ap_enable_operation_231 = (1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_590 = (cmp173_reg_4333_pp0_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_593 = (cmp173_reg_4333_pp0_iter2_reg == 1'd1);
end

assign ap_enable_operation_596 = (1'b1 == 1'b1);

assign ap_enable_operation_598 = (1'b1 == 1'b1);

assign ap_enable_operation_600 = (1'b1 == 1'b1);

assign ap_enable_operation_602 = (1'b1 == 1'b1);

assign ap_enable_operation_604 = (1'b1 == 1'b1);

assign ap_enable_operation_606 = (1'b1 == 1'b1);

assign ap_enable_operation_608 = (1'b1 == 1'b1);

assign ap_enable_operation_610 = (1'b1 == 1'b1);

assign ap_enable_operation_612 = (1'b1 == 1'b1);

assign ap_enable_operation_614 = (1'b1 == 1'b1);

assign ap_enable_operation_616 = (1'b1 == 1'b1);

assign ap_enable_operation_618 = (1'b1 == 1'b1);

assign ap_enable_operation_620 = (1'b1 == 1'b1);

assign ap_enable_operation_622 = (1'b1 == 1'b1);

assign ap_enable_operation_624 = (1'b1 == 1'b1);

assign ap_enable_operation_626 = (1'b1 == 1'b1);

assign ap_enable_operation_628 = (1'b1 == 1'b1);

assign ap_enable_operation_630 = (1'b1 == 1'b1);

assign ap_enable_operation_632 = (1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state1_pp0_iter0_stage0 = ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state2_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_ext_blocking_n = (ap_ext_blocking_sub_n & 1'b1);

assign ap_int_blocking_n = (ap_int_blocking_sub_n & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_str_blocking_n = (ap_str_blocking_sub_n & 1'b1);

assign arr3_V_40_fu_1488_p1 = iBuff_0_q1[3:0];

assign arr3_V_41_fu_1658_p1 = arr1_V_41_reg_4353[3:0];

assign arr3_V_42_fu_1697_p1 = arr1_V_43_reg_4367[3:0];

assign arr3_V_43_fu_1754_p1 = arr1_V_46_reg_4392[3:0];

assign arr3_V_44_fu_1811_p1 = arr1_V_49_reg_4417[3:0];

assign arr3_V_45_fu_1868_p1 = arr1_V_52_reg_4442[3:0];

assign arr3_V_46_fu_1925_p1 = arr1_V_55_reg_4467[3:0];

assign arr3_V_47_fu_1982_p1 = arr1_V_58_reg_4492[3:0];

assign arr3_V_48_fu_1492_p1 = iBuff_19_q1[3:0];

assign arr3_V_49_fu_2120_p4 = {{call_ret1_PixelProcessNew_1_s_fu_1166_ap_return_1[67:64]}};

assign arr3_V_50_fu_2130_p4 = {{call_ret1_PixelProcessNew_1_s_fu_1166_ap_return_2[67:64]}};

assign arr3_V_51_fu_2102_p4 = {{call_ret1_PixelProcessNew_1_s_fu_1166_ap_return_0[67:64]}};

assign arr3_V_52_fu_2140_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr3_V_49_fu_2120_p4 : arr3_V_41_fu_1658_p1);

assign arr3_V_53_fu_2147_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr3_V_51_fu_2102_p4 : arr3_V_52_fu_2140_p3);

assign arr3_V_54_fu_2210_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr3_V_51_fu_2102_p4 : arr3_V_40_reg_4348);

assign arr3_V_55_fu_2216_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr3_V_50_fu_2130_p4 : arr3_V_51_fu_2102_p4);

assign arr3_V_56_fu_2223_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr3_V_49_fu_2120_p4 : arr3_V_55_fu_2216_p3);

assign arr3_V_57_fu_2360_p4 = {{call_ret2_PixelProcessNew_1_s_fu_1173_ap_return_1[67:64]}};

assign arr3_V_58_fu_2370_p4 = {{call_ret2_PixelProcessNew_1_s_fu_1173_ap_return_2[67:64]}};

assign arr3_V_59_fu_2342_p4 = {{call_ret2_PixelProcessNew_1_s_fu_1173_ap_return_0[67:64]}};

assign arr3_V_60_fu_2387_p3 = ((or_ln233[0:0] == 1'b1) ? select_ln233_fu_2380_p3 : arr3_V_50_fu_2130_p4);

assign arr3_V_61_fu_2464_p3 = ((or_ln233[0:0] == 1'b1) ? select_ln233_11_fu_2450_p3 : select_ln233_12_fu_2457_p3);

assign arr3_V_62_fu_2471_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr3_V_58_fu_2370_p4 : arr3_V_59_fu_2342_p4);

assign arr3_V_63_fu_2478_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr3_V_57_fu_2360_p4 : arr3_V_62_fu_2471_p3);

assign arr3_V_64_fu_2615_p4 = {{call_ret3_PixelProcessNew_1_s_fu_1180_ap_return_1[67:64]}};

assign arr3_V_65_fu_2625_p4 = {{call_ret3_PixelProcessNew_1_s_fu_1180_ap_return_2[67:64]}};

assign arr3_V_66_fu_2597_p4 = {{call_ret3_PixelProcessNew_1_s_fu_1180_ap_return_0[67:64]}};

assign arr3_V_67_fu_2642_p3 = ((or_ln233[0:0] == 1'b1) ? select_ln233_16_fu_2635_p3 : arr3_V_58_fu_2370_p4);

assign arr3_V_68_fu_2719_p3 = ((or_ln233[0:0] == 1'b1) ? select_ln233_27_fu_2705_p3 : select_ln233_28_fu_2712_p3);

assign arr3_V_69_fu_2726_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr3_V_65_fu_2625_p4 : arr3_V_66_fu_2597_p4);

assign arr3_V_70_fu_2733_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr3_V_64_fu_2615_p4 : arr3_V_69_fu_2726_p3);

assign arr3_V_71_fu_2870_p4 = {{call_ret4_PixelProcessNew_1_s_fu_1187_ap_return_1[67:64]}};

assign arr3_V_72_fu_2880_p4 = {{call_ret4_PixelProcessNew_1_s_fu_1187_ap_return_2[67:64]}};

assign arr3_V_73_fu_2852_p4 = {{call_ret4_PixelProcessNew_1_s_fu_1187_ap_return_0[67:64]}};

assign arr3_V_74_fu_2897_p3 = ((or_ln233[0:0] == 1'b1) ? select_ln233_32_fu_2890_p3 : arr3_V_65_fu_2625_p4);

assign arr3_V_75_fu_2974_p3 = ((or_ln233[0:0] == 1'b1) ? select_ln233_43_fu_2960_p3 : select_ln233_44_fu_2967_p3);

assign arr3_V_76_fu_2981_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr3_V_72_fu_2880_p4 : arr3_V_73_fu_2852_p4);

assign arr3_V_77_fu_2988_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr3_V_71_fu_2870_p4 : arr3_V_76_fu_2981_p3);

assign arr3_V_78_fu_3125_p4 = {{call_ret5_PixelProcessNew_1_s_fu_1194_ap_return_1[67:64]}};

assign arr3_V_79_fu_3135_p4 = {{call_ret5_PixelProcessNew_1_s_fu_1194_ap_return_2[67:64]}};

assign arr3_V_80_fu_3107_p4 = {{call_ret5_PixelProcessNew_1_s_fu_1194_ap_return_0[67:64]}};

assign arr3_V_81_fu_3152_p3 = ((or_ln233[0:0] == 1'b1) ? select_ln233_48_fu_3145_p3 : arr3_V_72_fu_2880_p4);

assign arr3_V_82_fu_3229_p3 = ((or_ln233[0:0] == 1'b1) ? select_ln233_59_fu_3215_p3 : select_ln233_60_fu_3222_p3);

assign arr3_V_83_fu_3236_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr3_V_79_fu_3135_p4 : arr3_V_80_fu_3107_p4);

assign arr3_V_84_fu_3243_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr3_V_78_fu_3125_p4 : arr3_V_83_fu_3236_p3);

assign arr3_V_85_fu_3380_p4 = {{call_ret_PixelProcessNew_1_s_fu_1201_ap_return_1[67:64]}};

assign arr3_V_86_fu_3390_p4 = {{call_ret_PixelProcessNew_1_s_fu_1201_ap_return_2[67:64]}};

assign arr3_V_87_fu_3362_p4 = {{call_ret_PixelProcessNew_1_s_fu_1201_ap_return_0[67:64]}};

assign arr3_V_88_fu_3407_p3 = ((or_ln233[0:0] == 1'b1) ? select_ln233_64_fu_3400_p3 : arr3_V_79_fu_3135_p4);

assign arr3_V_89_fu_3484_p3 = ((or_ln233[0:0] == 1'b1) ? select_ln233_75_fu_3470_p3 : select_ln233_76_fu_3477_p3);

assign arr3_V_90_fu_3491_p3 = ((or_ln233[0:0] == 1'b1) ? arr3_V_48_reg_4506 : arr3_V_86_fu_3390_p4);

assign arr3_V_91_fu_3497_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr3_V_47_fu_1982_p1 : arr3_V_85_fu_3380_p4);

assign arr3_V_92_fu_3504_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr3_V_86_fu_3390_p4 : arr3_V_91_fu_3497_p3);

assign arr3_V_93_fu_3511_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr3_V_86_fu_3390_p4 : arr3_V_87_fu_3362_p4);

assign arr3_V_94_fu_3518_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr3_V_85_fu_3380_p4 : arr3_V_93_fu_3511_p3);

assign arr4_V_20_fu_2098_p1 = call_ret1_PixelProcessNew_1_s_fu_1166_ap_return_0[63:0];

assign arr4_V_21_fu_2112_p1 = call_ret1_PixelProcessNew_1_s_fu_1166_ap_return_1[63:0];

assign arr4_V_22_fu_2116_p1 = call_ret1_PixelProcessNew_1_s_fu_1166_ap_return_2[63:0];

assign arr4_V_23_fu_2154_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr4_V_22_fu_2116_p1 : arr4_V_20_fu_2098_p1);

assign arr4_V_24_fu_2161_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr4_V_21_fu_2112_p1 : arr4_V_23_fu_2154_p3);

assign arr4_V_25_fu_2168_p3 = ((icmp_ln233[0:0] == 1'b1) ? p_Result_15_fu_1689_p3 : arr4_V_21_fu_2112_p1);

assign arr4_V_26_fu_2175_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr4_V_22_fu_2116_p1 : arr4_V_25_fu_2168_p3);

assign arr4_V_27_fu_2182_p3 = ((or_ln233[0:0] == 1'b1) ? p_Result_16_fu_1710_p3 : arr4_V_22_fu_2116_p1);

assign arr4_V_28_fu_2189_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr4_V_20_fu_2098_p1 : p_Result_s_fu_1633_p3);

assign arr4_V_29_fu_2196_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr4_V_21_fu_2112_p1 : p_Result_13_fu_1650_p3);

assign arr4_V_30_fu_2203_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr4_V_20_fu_2098_p1 : arr4_V_29_fu_2196_p3);

assign arr4_V_31_fu_2338_p1 = call_ret2_PixelProcessNew_1_s_fu_1173_ap_return_0[63:0];

assign arr4_V_32_fu_2352_p1 = call_ret2_PixelProcessNew_1_s_fu_1173_ap_return_1[63:0];

assign arr4_V_33_fu_2356_p1 = call_ret2_PixelProcessNew_1_s_fu_1173_ap_return_2[63:0];

assign arr4_V_34_fu_2394_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr4_V_33_fu_2356_p1 : arr4_V_31_fu_2338_p1);

assign arr4_V_35_fu_2401_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr4_V_32_fu_2352_p1 : arr4_V_34_fu_2394_p3);

assign arr4_V_36_fu_2408_p3 = ((icmp_ln233[0:0] == 1'b1) ? p_Result_18_fu_1746_p3 : arr4_V_32_fu_2352_p1);

assign arr4_V_37_fu_2415_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr4_V_33_fu_2356_p1 : arr4_V_36_fu_2408_p3);

assign arr4_V_38_fu_2422_p3 = ((or_ln233[0:0] == 1'b1) ? p_Result_19_fu_1767_p3 : arr4_V_33_fu_2356_p1);

assign arr4_V_39_fu_2429_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr4_V_31_fu_2338_p1 : arr4_V_26_fu_2175_p3);

assign arr4_V_40_fu_2436_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr4_V_32_fu_2352_p1 : arr4_V_27_fu_2182_p3);

assign arr4_V_41_fu_2443_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr4_V_31_fu_2338_p1 : arr4_V_40_fu_2436_p3);

assign arr4_V_42_fu_2593_p1 = call_ret3_PixelProcessNew_1_s_fu_1180_ap_return_0[63:0];

assign arr4_V_43_fu_2607_p1 = call_ret3_PixelProcessNew_1_s_fu_1180_ap_return_1[63:0];

assign arr4_V_44_fu_2611_p1 = call_ret3_PixelProcessNew_1_s_fu_1180_ap_return_2[63:0];

assign arr4_V_45_fu_2649_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr4_V_44_fu_2611_p1 : arr4_V_42_fu_2593_p1);

assign arr4_V_46_fu_2656_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr4_V_43_fu_2607_p1 : arr4_V_45_fu_2649_p3);

assign arr4_V_47_fu_2663_p3 = ((icmp_ln233[0:0] == 1'b1) ? p_Result_21_fu_1803_p3 : arr4_V_43_fu_2607_p1);

assign arr4_V_48_fu_2670_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr4_V_44_fu_2611_p1 : arr4_V_47_fu_2663_p3);

assign arr4_V_49_fu_2677_p3 = ((or_ln233[0:0] == 1'b1) ? p_Result_22_fu_1824_p3 : arr4_V_44_fu_2611_p1);

assign arr4_V_50_fu_2684_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr4_V_42_fu_2593_p1 : arr4_V_37_fu_2415_p3);

assign arr4_V_51_fu_2691_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr4_V_43_fu_2607_p1 : arr4_V_38_fu_2422_p3);

assign arr4_V_52_fu_2698_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr4_V_42_fu_2593_p1 : arr4_V_51_fu_2691_p3);

assign arr4_V_53_fu_2848_p1 = call_ret4_PixelProcessNew_1_s_fu_1187_ap_return_0[63:0];

assign arr4_V_54_fu_2862_p1 = call_ret4_PixelProcessNew_1_s_fu_1187_ap_return_1[63:0];

assign arr4_V_55_fu_2866_p1 = call_ret4_PixelProcessNew_1_s_fu_1187_ap_return_2[63:0];

assign arr4_V_56_fu_2904_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr4_V_55_fu_2866_p1 : arr4_V_53_fu_2848_p1);

assign arr4_V_57_fu_2911_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr4_V_54_fu_2862_p1 : arr4_V_56_fu_2904_p3);

assign arr4_V_58_fu_2918_p3 = ((icmp_ln233[0:0] == 1'b1) ? p_Result_24_fu_1860_p3 : arr4_V_54_fu_2862_p1);

assign arr4_V_59_fu_2925_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr4_V_55_fu_2866_p1 : arr4_V_58_fu_2918_p3);

assign arr4_V_60_fu_2932_p3 = ((or_ln233[0:0] == 1'b1) ? p_Result_25_fu_1881_p3 : arr4_V_55_fu_2866_p1);

assign arr4_V_61_fu_2939_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr4_V_53_fu_2848_p1 : arr4_V_48_fu_2670_p3);

assign arr4_V_62_fu_2946_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr4_V_54_fu_2862_p1 : arr4_V_49_fu_2677_p3);

assign arr4_V_63_fu_2953_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr4_V_53_fu_2848_p1 : arr4_V_62_fu_2946_p3);

assign arr4_V_64_fu_3103_p1 = call_ret5_PixelProcessNew_1_s_fu_1194_ap_return_0[63:0];

assign arr4_V_65_fu_3117_p1 = call_ret5_PixelProcessNew_1_s_fu_1194_ap_return_1[63:0];

assign arr4_V_66_fu_3121_p1 = call_ret5_PixelProcessNew_1_s_fu_1194_ap_return_2[63:0];

assign arr4_V_67_fu_3159_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr4_V_66_fu_3121_p1 : arr4_V_64_fu_3103_p1);

assign arr4_V_68_fu_3166_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr4_V_65_fu_3117_p1 : arr4_V_67_fu_3159_p3);

assign arr4_V_69_fu_3173_p3 = ((icmp_ln233[0:0] == 1'b1) ? p_Result_27_fu_1917_p3 : arr4_V_65_fu_3117_p1);

assign arr4_V_70_fu_3180_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr4_V_66_fu_3121_p1 : arr4_V_69_fu_3173_p3);

assign arr4_V_71_fu_3187_p3 = ((or_ln233[0:0] == 1'b1) ? p_Result_28_fu_1938_p3 : arr4_V_66_fu_3121_p1);

assign arr4_V_72_fu_3194_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr4_V_64_fu_3103_p1 : arr4_V_59_fu_2925_p3);

assign arr4_V_73_fu_3201_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr4_V_65_fu_3117_p1 : arr4_V_60_fu_2932_p3);

assign arr4_V_74_fu_3208_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr4_V_64_fu_3103_p1 : arr4_V_73_fu_3201_p3);

assign arr4_V_75_fu_3358_p1 = call_ret_PixelProcessNew_1_s_fu_1201_ap_return_0[63:0];

assign arr4_V_76_fu_3372_p1 = call_ret_PixelProcessNew_1_s_fu_1201_ap_return_1[63:0];

assign arr4_V_77_fu_3376_p1 = call_ret_PixelProcessNew_1_s_fu_1201_ap_return_2[63:0];

assign arr4_V_78_fu_3414_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr4_V_77_fu_3376_p1 : arr4_V_75_fu_3358_p1);

assign arr4_V_79_fu_3421_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr4_V_76_fu_3372_p1 : arr4_V_78_fu_3414_p3);

assign arr4_V_80_fu_3428_p3 = ((icmp_ln233[0:0] == 1'b1) ? p_Result_30_fu_1974_p3 : arr4_V_76_fu_3372_p1);

assign arr4_V_81_fu_3435_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr4_V_77_fu_3376_p1 : arr4_V_80_fu_3428_p3);

assign arr4_V_82_fu_3442_p3 = ((or_ln233[0:0] == 1'b1) ? p_Result_31_fu_1995_p3 : arr4_V_77_fu_3376_p1);

assign arr4_V_83_fu_3449_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr4_V_75_fu_3358_p1 : arr4_V_70_fu_3180_p3);

assign arr4_V_84_fu_3456_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr4_V_76_fu_3372_p1 : arr4_V_71_fu_3187_p3);

assign arr4_V_85_fu_3463_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr4_V_75_fu_3358_p1 : arr4_V_84_fu_3456_p3);

assign call_ret1_PixelProcessNew_1_s_fu_1166_k1 = {{trunc_ln628_reg_4511}, {tmp_19_fu_2003_p5}};

assign call_ret1_PixelProcessNew_1_s_fu_1166_k2 = {{trunc_ln628_9_fu_2052_p1}, {tmp_20_fu_2014_p5}};

assign call_ret1_PixelProcessNew_1_s_fu_1166_k3 = {{trunc_ln628_10_fu_2073_p1}, {tmp_21_fu_2025_p5}};

assign call_ret2_PixelProcessNew_1_s_fu_1173_k1 = {{trunc_ln628_14_fu_2271_p1}, {tmp_22_fu_2230_p5}};

assign call_ret2_PixelProcessNew_1_s_fu_1173_k2 = {{trunc_ln628_15_fu_2292_p1}, {tmp_23_fu_2241_p5}};

assign call_ret2_PixelProcessNew_1_s_fu_1173_k3 = {{trunc_ln628_16_fu_2313_p1}, {tmp_24_fu_2252_p5}};

assign call_ret3_PixelProcessNew_1_s_fu_1180_k1 = {{trunc_ln628_20_fu_2526_p1}, {tmp_25_fu_2485_p5}};

assign call_ret3_PixelProcessNew_1_s_fu_1180_k2 = {{trunc_ln628_21_fu_2547_p1}, {tmp_26_fu_2496_p5}};

assign call_ret3_PixelProcessNew_1_s_fu_1180_k3 = {{trunc_ln628_22_fu_2568_p1}, {tmp_27_fu_2507_p5}};

assign call_ret4_PixelProcessNew_1_s_fu_1187_k1 = {{trunc_ln628_26_fu_2781_p1}, {tmp_28_fu_2740_p5}};

assign call_ret4_PixelProcessNew_1_s_fu_1187_k2 = {{trunc_ln628_27_fu_2802_p1}, {tmp_29_fu_2751_p5}};

assign call_ret4_PixelProcessNew_1_s_fu_1187_k3 = {{trunc_ln628_28_fu_2823_p1}, {tmp_30_fu_2762_p5}};

assign call_ret5_PixelProcessNew_1_s_fu_1194_k1 = {{trunc_ln628_32_fu_3036_p1}, {tmp_31_fu_2995_p5}};

assign call_ret5_PixelProcessNew_1_s_fu_1194_k2 = {{trunc_ln628_33_fu_3057_p1}, {tmp_32_fu_3006_p5}};

assign call_ret5_PixelProcessNew_1_s_fu_1194_k3 = {{trunc_ln628_34_fu_3078_p1}, {tmp_33_fu_3017_p5}};

assign call_ret_PixelProcessNew_1_s_fu_1201_k1 = {{trunc_ln628_38_fu_3291_p1}, {tmp_34_fu_3250_p5}};

assign call_ret_PixelProcessNew_1_s_fu_1201_k2 = {{trunc_ln628_39_fu_3312_p1}, {tmp_35_fu_3261_p5}};

assign call_ret_PixelProcessNew_1_s_fu_1201_k3 = {{trunc_ln628_40_fu_3333_p1}, {tmp_36_fu_3272_p5}};

assign cmp173_fu_1454_p2 = (($signed(zext_ln189_1_fu_1444_p1) > $signed(mul172)) ? 1'b1 : 1'b0);

assign empty_521_fu_3730_p2 = ($signed(tmp216_cast_cast_reg_4224) + $signed(trunc_ln189_reg_4337_pp0_iter2_reg));

assign empty_fu_3701_p2 = ($signed(trunc_ln189_reg_4337_pp0_iter2_reg) + $signed(10'd1023));

assign iBuff_0_address1 = zext_ln189_fu_1420_p1;

assign iBuff_10_address0 = p_cast_fu_3706_p1;

assign iBuff_10_address1 = zext_ln189_fu_1420_p1;

assign iBuff_10_d0 = arr4_V_63_reg_4582;

assign iBuff_11_address0 = p_cast_fu_3706_p1;

assign iBuff_11_address1 = zext_ln189_fu_1420_p1;

assign iBuff_11_d0 = arr4_V_57_reg_4570;

assign iBuff_12_address0 = p_cast_fu_3706_p1;

assign iBuff_12_address1 = zext_ln189_fu_1420_p1;

assign iBuff_12_d0 = arr4_V_72_reg_4594;

assign iBuff_13_address0 = p_cast_fu_3706_p1;

assign iBuff_13_address1 = zext_ln189_fu_1420_p1;

assign iBuff_13_d0 = arr4_V_74_reg_4600;

assign iBuff_14_address0 = p_cast_fu_3706_p1;

assign iBuff_14_address1 = zext_ln189_fu_1420_p1;

assign iBuff_14_d0 = arr4_V_68_reg_4588;

assign iBuff_15_address0 = p_cast_fu_3706_p1;

assign iBuff_15_address1 = zext_ln189_fu_1420_p1;

assign iBuff_15_d0 = arr4_V_83_reg_4624;

assign iBuff_16_address0 = p_cast_fu_3706_p1;

assign iBuff_16_address1 = zext_ln189_fu_1420_p1;

assign iBuff_16_d0 = arr4_V_85_reg_4630;

assign iBuff_17_address0 = p_cast_fu_3706_p1;

assign iBuff_17_address1 = zext_ln189_fu_1420_p1;

assign iBuff_17_d0 = arr4_V_79_reg_4606;

assign iBuff_18_address0 = p_cast_fu_3706_p1;

assign iBuff_18_address1 = zext_ln189_fu_1420_p1;

assign iBuff_18_d0 = arr4_V_81_reg_4612;

assign iBuff_19_address0 = p_cast_fu_3706_p1;

assign iBuff_19_address1 = zext_ln189_fu_1420_p1;

assign iBuff_19_d0 = arr4_V_82_reg_4618;

assign iBuff_1_address0 = p_cast_fu_3706_p1;

assign iBuff_1_address1 = zext_ln189_fu_1420_p1;

assign iBuff_1_d0 = arr4_V_30_reg_4528;

assign iBuff_2_address0 = p_cast_fu_3706_p1;

assign iBuff_2_address1 = zext_ln189_fu_1420_p1;

assign iBuff_2_d0 = arr4_V_24_reg_4516;

assign iBuff_3_address0 = p_cast_fu_3706_p1;

assign iBuff_3_address1 = zext_ln189_fu_1420_p1;

assign iBuff_3_d0 = arr4_V_39_reg_4540;

assign iBuff_4_address0 = p_cast_fu_3706_p1;

assign iBuff_4_address1 = zext_ln189_fu_1420_p1;

assign iBuff_4_d0 = arr4_V_41_reg_4546;

assign iBuff_5_address0 = p_cast_fu_3706_p1;

assign iBuff_5_address1 = zext_ln189_fu_1420_p1;

assign iBuff_5_d0 = arr4_V_35_reg_4534;

assign iBuff_6_address0 = p_cast_fu_3706_p1;

assign iBuff_6_address1 = zext_ln189_fu_1420_p1;

assign iBuff_6_d0 = arr4_V_50_reg_4558;

assign iBuff_7_address0 = p_cast_fu_3706_p1;

assign iBuff_7_address1 = zext_ln189_fu_1420_p1;

assign iBuff_7_d0 = arr4_V_52_reg_4564;

assign iBuff_8_address0 = p_cast_fu_3706_p1;

assign iBuff_8_address1 = zext_ln189_fu_1420_p1;

assign iBuff_8_d0 = arr4_V_46_reg_4552;

assign iBuff_9_address0 = p_cast_fu_3706_p1;

assign iBuff_9_address1 = zext_ln189_fu_1420_p1;

assign iBuff_9_d0 = arr4_V_61_reg_4576;

assign icmp_ln189_fu_1448_p2 = ((ap_sig_allocacmp_el_1 < mul_ln175) ? 1'b1 : 1'b0);

assign icmp_ln233_read_reg_4132 = icmp_ln233;

assign or_ln233_read_reg_4076 = or_ln233;

assign p_Result_13_fu_1650_p3 = {{tmp_s_fu_1640_p4}, {arr3_V_21_fu_214}};

assign p_Result_14_fu_1671_p3 = {{tmp_1_fu_1661_p4}, {arr3_V_22_fu_218}};

assign p_Result_15_fu_1689_p3 = {{tmp_2_fu_1679_p4}, {arr3_V_23_fu_222}};

assign p_Result_16_fu_1710_p3 = {{tmp_3_fu_1700_p4}, {arr3_V_24_fu_226}};

assign p_Result_17_fu_1728_p3 = {{tmp_4_fu_1718_p4}, {arr3_V_25_fu_230}};

assign p_Result_18_fu_1746_p3 = {{tmp_5_fu_1736_p4}, {arr3_V_26_fu_234}};

assign p_Result_19_fu_1767_p3 = {{tmp_6_fu_1757_p4}, {arr3_V_27_fu_238}};

assign p_Result_20_fu_1785_p3 = {{tmp_7_fu_1775_p4}, {arr3_V_28_fu_242}};

assign p_Result_21_fu_1803_p3 = {{tmp_8_fu_1793_p4}, {arr3_V_29_fu_246}};

assign p_Result_22_fu_1824_p3 = {{tmp_9_fu_1814_p4}, {arr3_V_30_fu_250}};

assign p_Result_23_fu_1842_p3 = {{tmp_10_fu_1832_p4}, {arr3_V_31_fu_254}};

assign p_Result_24_fu_1860_p3 = {{tmp_11_fu_1850_p4}, {arr3_V_32_fu_258}};

assign p_Result_25_fu_1881_p3 = {{tmp_12_fu_1871_p4}, {arr3_V_33_fu_262}};

assign p_Result_26_fu_1899_p3 = {{tmp_13_fu_1889_p4}, {arr3_V_34_fu_266}};

assign p_Result_27_fu_1917_p3 = {{tmp_14_fu_1907_p4}, {arr3_V_35_fu_270}};

assign p_Result_28_fu_1938_p3 = {{tmp_15_fu_1928_p4}, {arr3_V_36_fu_274}};

assign p_Result_29_fu_1956_p3 = {{tmp_16_fu_1946_p4}, {arr3_V_37_fu_278}};

assign p_Result_30_fu_1974_p3 = {{tmp_17_fu_1964_p4}, {arr3_V_38_fu_282}};

assign p_Result_31_fu_1995_p3 = {{tmp_18_fu_1985_p4}, {arr3_V_39_fu_286}};

assign p_Result_s_fu_1633_p3 = {{tmp_reg_4343}, {arr3_V_20_fu_210}};

assign p_cast6_fu_3734_p1 = empty_521_fu_3730_p2;

assign p_cast_fu_3706_p1 = empty_fu_3701_p2;

assign select_ln233_11_fu_2450_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr3_V_59_fu_2342_p4 : arr3_V_50_fu_2130_p4);

assign select_ln233_12_fu_2457_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr3_V_42_fu_1697_p1 : arr3_V_49_fu_2120_p4);

assign select_ln233_16_fu_2635_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr3_V_66_fu_2597_p4 : arr3_V_64_fu_2615_p4);

assign select_ln233_27_fu_2705_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr3_V_66_fu_2597_p4 : arr3_V_58_fu_2370_p4);

assign select_ln233_28_fu_2712_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr3_V_43_fu_1754_p1 : arr3_V_57_fu_2360_p4);

assign select_ln233_32_fu_2890_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr3_V_73_fu_2852_p4 : arr3_V_71_fu_2870_p4);

assign select_ln233_43_fu_2960_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr3_V_73_fu_2852_p4 : arr3_V_65_fu_2625_p4);

assign select_ln233_44_fu_2967_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr3_V_44_fu_1811_p1 : arr3_V_64_fu_2615_p4);

assign select_ln233_48_fu_3145_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr3_V_80_fu_3107_p4 : arr3_V_78_fu_3125_p4);

assign select_ln233_59_fu_3215_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr3_V_80_fu_3107_p4 : arr3_V_72_fu_2880_p4);

assign select_ln233_60_fu_3222_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr3_V_45_fu_1868_p1 : arr3_V_71_fu_2870_p4);

assign select_ln233_64_fu_3400_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr3_V_87_fu_3362_p4 : arr3_V_85_fu_3380_p4);

assign select_ln233_75_fu_3470_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr3_V_87_fu_3362_p4 : arr3_V_79_fu_3135_p4);

assign select_ln233_76_fu_3477_p3 = ((icmp_ln233[0:0] == 1'b1) ? arr3_V_46_fu_1925_p1 : arr3_V_78_fu_3125_p4);

assign select_ln233_fu_2380_p3 = ((icmp_ln233_1[0:0] == 1'b1) ? arr3_V_59_fu_2342_p4 : arr3_V_57_fu_2360_p4);

assign tmp216_cast_cast_fu_1208_p1 = $signed(tmp216_cast);

assign tmp_10_fu_1832_p4 = {{p_Val2_11_fu_334[63:4]}};

assign tmp_11_fu_1850_p4 = {{p_Val2_12_fu_338[63:4]}};

assign tmp_12_fu_1871_p4 = {{p_Val2_13_fu_342[63:4]}};

assign tmp_13_fu_1889_p4 = {{p_Val2_14_fu_346[63:4]}};

assign tmp_14_fu_1907_p4 = {{p_Val2_15_fu_350[63:4]}};

assign tmp_15_fu_1928_p4 = {{p_Val2_16_fu_354[63:4]}};

assign tmp_16_fu_1946_p4 = {{p_Val2_17_fu_358[63:4]}};

assign tmp_17_fu_1964_p4 = {{p_Val2_18_fu_362[63:4]}};

assign tmp_18_fu_1985_p4 = {{p_Val2_19_fu_366[63:4]}};

assign tmp_1_fu_1661_p4 = {{p_Val2_2_fu_298[63:4]}};

assign tmp_2_fu_1679_p4 = {{p_Val2_3_fu_302[63:4]}};

assign tmp_3_fu_1700_p4 = {{p_Val2_4_fu_306[63:4]}};

assign tmp_4_fu_1718_p4 = {{p_Val2_5_fu_310[63:4]}};

assign tmp_5_fu_1736_p4 = {{p_Val2_6_fu_314[63:4]}};

assign tmp_6_fu_1757_p4 = {{p_Val2_7_fu_318[63:4]}};

assign tmp_7_fu_1775_p4 = {{p_Val2_8_fu_322[63:4]}};

assign tmp_8_fu_1793_p4 = {{p_Val2_9_fu_326[63:4]}};

assign tmp_9_fu_1814_p4 = {{p_Val2_10_fu_330[63:4]}};

assign tmp_s_fu_1640_p4 = {{p_Val2_1_fu_294[63:4]}};

assign trunc_ln189_fu_1460_p1 = ap_sig_allocacmp_el_1[9:0];

assign trunc_ln628_10_fu_2073_p1 = p_Val2_42_fu_2065_p5[3:0];

assign trunc_ln628_14_fu_2271_p1 = p_Val2_46_fu_2263_p5[3:0];

assign trunc_ln628_15_fu_2292_p1 = p_Val2_47_fu_2284_p5[3:0];

assign trunc_ln628_16_fu_2313_p1 = p_Val2_48_fu_2305_p5[3:0];

assign trunc_ln628_20_fu_2526_p1 = p_Val2_52_fu_2518_p5[3:0];

assign trunc_ln628_21_fu_2547_p1 = p_Val2_53_fu_2539_p5[3:0];

assign trunc_ln628_22_fu_2568_p1 = p_Val2_54_fu_2560_p5[3:0];

assign trunc_ln628_26_fu_2781_p1 = p_Val2_58_fu_2773_p5[3:0];

assign trunc_ln628_27_fu_2802_p1 = p_Val2_59_fu_2794_p5[3:0];

assign trunc_ln628_28_fu_2823_p1 = p_Val2_60_fu_2815_p5[3:0];

assign trunc_ln628_32_fu_3036_p1 = p_Val2_64_fu_3028_p5[3:0];

assign trunc_ln628_33_fu_3057_p1 = p_Val2_65_fu_3049_p5[3:0];

assign trunc_ln628_34_fu_3078_p1 = p_Val2_66_fu_3070_p5[3:0];

assign trunc_ln628_38_fu_3291_p1 = p_Val2_70_fu_3283_p5[3:0];

assign trunc_ln628_39_fu_3312_p1 = p_Val2_71_fu_3304_p5[3:0];

assign trunc_ln628_40_fu_3333_p1 = p_Val2_72_fu_3325_p5[3:0];

assign trunc_ln628_9_fu_2052_p1 = p_Val2_41_fu_2044_p5[3:0];

assign trunc_ln628_fu_1507_p1 = p_Val2_40_fu_1496_p5[3:0];

assign zext_ln189_1_fu_1444_p1 = ap_sig_allocacmp_el_1;

assign zext_ln189_fu_1420_p1 = ap_sig_allocacmp_el_1;

endmodule //edgetracing_accel_TopDown_20_6_1024_Pipeline_ELEMENTS_P_RAM
