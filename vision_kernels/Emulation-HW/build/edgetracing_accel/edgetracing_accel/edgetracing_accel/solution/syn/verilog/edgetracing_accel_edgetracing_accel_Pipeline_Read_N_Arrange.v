// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module edgetracing_accel_edgetracing_accel_Pipeline_Read_N_Arrange (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_dst1_data_dout,
        p_dst1_data_empty_n,
        p_dst1_data_read,
        lBound,
        iBuff_V_19_address0,
        iBuff_V_19_ce0,
        iBuff_V_19_we0,
        iBuff_V_19_d0,
        iBuff_V_19_address1,
        iBuff_V_19_ce1,
        iBuff_V_19_we1,
        iBuff_V_19_d1,
        iBuff_V_18_address0,
        iBuff_V_18_ce0,
        iBuff_V_18_we0,
        iBuff_V_18_d0,
        iBuff_V_17_address0,
        iBuff_V_17_ce0,
        iBuff_V_17_we0,
        iBuff_V_17_d0,
        iBuff_V_16_address0,
        iBuff_V_16_ce0,
        iBuff_V_16_we0,
        iBuff_V_16_d0,
        iBuff_V_16_address1,
        iBuff_V_16_ce1,
        iBuff_V_16_we1,
        iBuff_V_16_d1,
        iBuff_V_15_address0,
        iBuff_V_15_ce0,
        iBuff_V_15_we0,
        iBuff_V_15_d0,
        iBuff_V_14_address0,
        iBuff_V_14_ce0,
        iBuff_V_14_we0,
        iBuff_V_14_d0,
        iBuff_V_13_address0,
        iBuff_V_13_ce0,
        iBuff_V_13_we0,
        iBuff_V_13_d0,
        iBuff_V_13_address1,
        iBuff_V_13_ce1,
        iBuff_V_13_we1,
        iBuff_V_13_d1,
        iBuff_V_12_address0,
        iBuff_V_12_ce0,
        iBuff_V_12_we0,
        iBuff_V_12_d0,
        iBuff_V_11_address0,
        iBuff_V_11_ce0,
        iBuff_V_11_we0,
        iBuff_V_11_d0,
        iBuff_V_10_address0,
        iBuff_V_10_ce0,
        iBuff_V_10_we0,
        iBuff_V_10_d0,
        iBuff_V_10_address1,
        iBuff_V_10_ce1,
        iBuff_V_10_we1,
        iBuff_V_10_d1,
        iBuff_V_9_address0,
        iBuff_V_9_ce0,
        iBuff_V_9_we0,
        iBuff_V_9_d0,
        iBuff_V_8_address0,
        iBuff_V_8_ce0,
        iBuff_V_8_we0,
        iBuff_V_8_d0,
        iBuff_V_7_address0,
        iBuff_V_7_ce0,
        iBuff_V_7_we0,
        iBuff_V_7_d0,
        iBuff_V_7_address1,
        iBuff_V_7_ce1,
        iBuff_V_7_we1,
        iBuff_V_7_d1,
        iBuff_V_6_address0,
        iBuff_V_6_ce0,
        iBuff_V_6_we0,
        iBuff_V_6_d0,
        iBuff_V_5_address0,
        iBuff_V_5_ce0,
        iBuff_V_5_we0,
        iBuff_V_5_d0,
        iBuff_V_4_address0,
        iBuff_V_4_ce0,
        iBuff_V_4_we0,
        iBuff_V_4_d0,
        iBuff_V_4_address1,
        iBuff_V_4_ce1,
        iBuff_V_4_we1,
        iBuff_V_4_d1,
        iBuff_V_3_address0,
        iBuff_V_3_ce0,
        iBuff_V_3_we0,
        iBuff_V_3_d0,
        iBuff_V_2_address0,
        iBuff_V_2_ce0,
        iBuff_V_2_we0,
        iBuff_V_2_d0,
        iBuff_V_1_address0,
        iBuff_V_1_ce0,
        iBuff_V_1_we0,
        iBuff_V_1_d0,
        iBuff_V_1_address1,
        iBuff_V_1_ce1,
        iBuff_V_1_we1,
        iBuff_V_1_d1,
        iBuff_V_address0,
        iBuff_V_ce0,
        iBuff_V_we0,
        iBuff_V_d0,
        iBuff_V_address1,
        iBuff_V_ce1,
        iBuff_V_we1,
        iBuff_V_d1,
        zext_ln303,
        op2_assign_32_cast,
        ram_row_depth_cast53_cast,
        sdiv_ln305_1_cast,
        sext_ln305,
        op2_assign,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] p_dst1_data_dout;
input   p_dst1_data_empty_n;
output   p_dst1_data_read;
input  [31:0] lBound;
output  [9:0] iBuff_V_19_address0;
output   iBuff_V_19_ce0;
output   iBuff_V_19_we0;
output  [63:0] iBuff_V_19_d0;
output  [9:0] iBuff_V_19_address1;
output   iBuff_V_19_ce1;
output   iBuff_V_19_we1;
output  [63:0] iBuff_V_19_d1;
output  [9:0] iBuff_V_18_address0;
output   iBuff_V_18_ce0;
output   iBuff_V_18_we0;
output  [63:0] iBuff_V_18_d0;
output  [9:0] iBuff_V_17_address0;
output   iBuff_V_17_ce0;
output   iBuff_V_17_we0;
output  [63:0] iBuff_V_17_d0;
output  [9:0] iBuff_V_16_address0;
output   iBuff_V_16_ce0;
output   iBuff_V_16_we0;
output  [63:0] iBuff_V_16_d0;
output  [9:0] iBuff_V_16_address1;
output   iBuff_V_16_ce1;
output   iBuff_V_16_we1;
output  [63:0] iBuff_V_16_d1;
output  [9:0] iBuff_V_15_address0;
output   iBuff_V_15_ce0;
output   iBuff_V_15_we0;
output  [63:0] iBuff_V_15_d0;
output  [9:0] iBuff_V_14_address0;
output   iBuff_V_14_ce0;
output   iBuff_V_14_we0;
output  [63:0] iBuff_V_14_d0;
output  [9:0] iBuff_V_13_address0;
output   iBuff_V_13_ce0;
output   iBuff_V_13_we0;
output  [63:0] iBuff_V_13_d0;
output  [9:0] iBuff_V_13_address1;
output   iBuff_V_13_ce1;
output   iBuff_V_13_we1;
output  [63:0] iBuff_V_13_d1;
output  [9:0] iBuff_V_12_address0;
output   iBuff_V_12_ce0;
output   iBuff_V_12_we0;
output  [63:0] iBuff_V_12_d0;
output  [9:0] iBuff_V_11_address0;
output   iBuff_V_11_ce0;
output   iBuff_V_11_we0;
output  [63:0] iBuff_V_11_d0;
output  [9:0] iBuff_V_10_address0;
output   iBuff_V_10_ce0;
output   iBuff_V_10_we0;
output  [63:0] iBuff_V_10_d0;
output  [9:0] iBuff_V_10_address1;
output   iBuff_V_10_ce1;
output   iBuff_V_10_we1;
output  [63:0] iBuff_V_10_d1;
output  [9:0] iBuff_V_9_address0;
output   iBuff_V_9_ce0;
output   iBuff_V_9_we0;
output  [63:0] iBuff_V_9_d0;
output  [9:0] iBuff_V_8_address0;
output   iBuff_V_8_ce0;
output   iBuff_V_8_we0;
output  [63:0] iBuff_V_8_d0;
output  [9:0] iBuff_V_7_address0;
output   iBuff_V_7_ce0;
output   iBuff_V_7_we0;
output  [63:0] iBuff_V_7_d0;
output  [9:0] iBuff_V_7_address1;
output   iBuff_V_7_ce1;
output   iBuff_V_7_we1;
output  [63:0] iBuff_V_7_d1;
output  [9:0] iBuff_V_6_address0;
output   iBuff_V_6_ce0;
output   iBuff_V_6_we0;
output  [63:0] iBuff_V_6_d0;
output  [9:0] iBuff_V_5_address0;
output   iBuff_V_5_ce0;
output   iBuff_V_5_we0;
output  [63:0] iBuff_V_5_d0;
output  [9:0] iBuff_V_4_address0;
output   iBuff_V_4_ce0;
output   iBuff_V_4_we0;
output  [63:0] iBuff_V_4_d0;
output  [9:0] iBuff_V_4_address1;
output   iBuff_V_4_ce1;
output   iBuff_V_4_we1;
output  [63:0] iBuff_V_4_d1;
output  [9:0] iBuff_V_3_address0;
output   iBuff_V_3_ce0;
output   iBuff_V_3_we0;
output  [63:0] iBuff_V_3_d0;
output  [9:0] iBuff_V_2_address0;
output   iBuff_V_2_ce0;
output   iBuff_V_2_we0;
output  [63:0] iBuff_V_2_d0;
output  [9:0] iBuff_V_1_address0;
output   iBuff_V_1_ce0;
output   iBuff_V_1_we0;
output  [63:0] iBuff_V_1_d0;
output  [9:0] iBuff_V_1_address1;
output   iBuff_V_1_ce1;
output   iBuff_V_1_we1;
output  [63:0] iBuff_V_1_d1;
output  [9:0] iBuff_V_address0;
output   iBuff_V_ce0;
output   iBuff_V_we0;
output  [63:0] iBuff_V_d0;
output  [9:0] iBuff_V_address1;
output   iBuff_V_ce1;
output   iBuff_V_we1;
output  [63:0] iBuff_V_d1;
input  [5:0] zext_ln303;
input  [15:0] op2_assign_32_cast;
input  [5:0] ram_row_depth_cast53_cast;
input  [4:0] sdiv_ln305_1_cast;
input  [15:0] sext_ln305;
input  [17:0] op2_assign;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_idle;
reg p_dst1_data_read;
reg[9:0] iBuff_V_19_address0;
reg iBuff_V_19_ce0;
reg iBuff_V_19_we0;
reg[63:0] iBuff_V_19_d0;
reg iBuff_V_19_ce1;
reg iBuff_V_19_we1;
reg iBuff_V_18_ce0;
reg iBuff_V_18_we0;
reg iBuff_V_17_ce0;
reg iBuff_V_17_we0;
reg[9:0] iBuff_V_16_address0;
reg iBuff_V_16_ce0;
reg iBuff_V_16_we0;
reg[63:0] iBuff_V_16_d0;
reg iBuff_V_16_ce1;
reg iBuff_V_16_we1;
reg iBuff_V_15_ce0;
reg iBuff_V_15_we0;
reg iBuff_V_14_ce0;
reg iBuff_V_14_we0;
reg[9:0] iBuff_V_13_address0;
reg iBuff_V_13_ce0;
reg iBuff_V_13_we0;
reg[63:0] iBuff_V_13_d0;
reg iBuff_V_13_ce1;
reg iBuff_V_13_we1;
reg iBuff_V_12_ce0;
reg iBuff_V_12_we0;
reg iBuff_V_11_ce0;
reg iBuff_V_11_we0;
reg[9:0] iBuff_V_10_address0;
reg iBuff_V_10_ce0;
reg iBuff_V_10_we0;
reg[63:0] iBuff_V_10_d0;
reg iBuff_V_10_ce1;
reg iBuff_V_10_we1;
reg iBuff_V_9_ce0;
reg iBuff_V_9_we0;
reg iBuff_V_8_ce0;
reg iBuff_V_8_we0;
reg[9:0] iBuff_V_7_address0;
reg iBuff_V_7_ce0;
reg iBuff_V_7_we0;
reg[63:0] iBuff_V_7_d0;
reg iBuff_V_7_ce1;
reg iBuff_V_7_we1;
reg iBuff_V_6_ce0;
reg iBuff_V_6_we0;
reg iBuff_V_5_ce0;
reg iBuff_V_5_we0;
reg[9:0] iBuff_V_4_address0;
reg iBuff_V_4_ce0;
reg iBuff_V_4_we0;
reg[63:0] iBuff_V_4_d0;
reg iBuff_V_4_ce1;
reg iBuff_V_4_we1;
reg iBuff_V_3_ce0;
reg iBuff_V_3_we0;
reg iBuff_V_2_ce0;
reg iBuff_V_2_we0;
reg[9:0] iBuff_V_1_address0;
reg iBuff_V_1_ce0;
reg iBuff_V_1_we0;
reg[63:0] iBuff_V_1_d0;
reg iBuff_V_1_ce1;
reg iBuff_V_1_we1;
reg[9:0] iBuff_V_address0;
reg iBuff_V_ce0;
reg iBuff_V_we0;
reg[63:0] iBuff_V_d0;
reg iBuff_V_ce1;
reg iBuff_V_we1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln332_fu_633_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    p_dst1_data_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire  signed [16:0] sext_ln305_cast_fu_594_p1;
reg  signed [16:0] sext_ln305_cast_reg_870;
wire   [9:0] ram_row_depth_cast53_cast_cast_fu_598_p1;
reg   [9:0] ram_row_depth_cast53_cast_cast_reg_875;
wire  signed [16:0] op2_assign_32_cast_cast_fu_602_p1;
reg  signed [16:0] op2_assign_32_cast_cast_reg_881;
wire   [15:0] zext_ln303_cast_fu_606_p1;
reg   [15:0] zext_ln303_cast_reg_886;
wire   [9:0] trunc_ln342_fu_669_p1;
reg   [9:0] trunc_ln342_reg_896;
wire   [0:0] icmp_ln1019_1_fu_685_p2;
reg   [0:0] icmp_ln1019_1_reg_901;
wire   [15:0] idx2_V_6_fu_690_p3;
reg   [15:0] idx2_V_6_reg_906;
wire   [4:0] trunc_ln353_fu_698_p1;
reg   [4:0] trunc_ln353_reg_912;
reg   [63:0] iReg_V_reg_916;
wire   [9:0] index_fu_742_p2;
reg   [9:0] index_reg_928;
reg   [9:0] iBuff_V_addr_reg_934;
reg   [9:0] iBuff_V_1_addr_reg_939;
reg   [9:0] iBuff_V_4_addr_reg_944;
reg   [9:0] iBuff_V_7_addr_reg_949;
reg   [9:0] iBuff_V_10_addr_reg_954;
reg   [9:0] iBuff_V_13_addr_reg_959;
reg   [9:0] iBuff_V_16_addr_reg_964;
reg   [9:0] iBuff_V_19_addr_reg_969;
wire   [0:0] icmp_ln1019_4_fu_771_p2;
reg   [0:0] icmp_ln1019_4_reg_974;
wire   [0:0] icmp_ln1019_6_fu_779_p2;
reg   [0:0] icmp_ln1019_6_reg_978;
wire   [0:0] icmp_ln1019_10_fu_788_p2;
reg   [0:0] icmp_ln1019_10_reg_982;
wire   [0:0] icmp_ln1019_5_fu_793_p2;
reg   [0:0] icmp_ln1019_5_reg_986;
wire   [63:0] zext_ln541_fu_747_p1;
wire   [63:0] zext_ln541_2_fu_808_p1;
wire   [63:0] zext_ln541_1_fu_817_p1;
reg   [15:0] idx1_V_fu_146;
wire   [15:0] idx1_V_5_fu_702_p2;
wire    ap_loop_init;
reg   [15:0] dep_V_fu_150;
wire   [15:0] dep_V_4_fu_731_p3;
reg   [15:0] idx2_V_fu_154;
reg   [31:0] i_fu_158;
wire   [31:0] i_4_fu_638_p2;
wire   [0:0] icmp_ln1019_fu_650_p2;
wire   [15:0] idx1_V_4_fu_661_p3;
wire   [15:0] idx2_V_4_fu_655_p2;
wire   [15:0] idx2_V_5_fu_673_p3;
wire   [16:0] zext_ln1019_fu_681_p1;
wire   [15:0] dep_V_3_fu_726_p2;
wire   [9:0] trunc_ln347_fu_738_p1;
wire   [16:0] zext_ln1019_1_fu_776_p1;
wire   [17:0] zext_ln1019_2_fu_784_p1;
wire   [9:0] ret_V_1_fu_804_p2;
wire   [9:0] ret_V_fu_813_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_int_blocking_cur_n;
reg    ap_block_pp0;
reg    ap_enable_operation_119;
reg    ap_enable_state3_pp0_iter2_stage0;
reg    ap_predicate_op161_store_state4;
reg    ap_enable_operation_161;
reg    ap_enable_state4_pp0_iter3_stage0;
reg    ap_predicate_op184_store_state4;
reg    ap_enable_operation_184;
reg    ap_enable_operation_122;
reg    ap_predicate_op163_store_state4;
reg    ap_enable_operation_163;
reg    ap_predicate_op186_store_state4;
reg    ap_enable_operation_186;
reg    ap_enable_operation_125;
reg    ap_predicate_op165_store_state4;
reg    ap_enable_operation_165;
reg    ap_predicate_op188_store_state4;
reg    ap_enable_operation_188;
reg    ap_enable_operation_128;
reg    ap_predicate_op167_store_state4;
reg    ap_enable_operation_167;
reg    ap_predicate_op190_store_state4;
reg    ap_enable_operation_190;
reg    ap_enable_operation_131;
reg    ap_predicate_op169_store_state4;
reg    ap_enable_operation_169;
reg    ap_predicate_op192_store_state4;
reg    ap_enable_operation_192;
reg    ap_enable_operation_134;
reg    ap_predicate_op171_store_state4;
reg    ap_enable_operation_171;
reg    ap_predicate_op194_store_state4;
reg    ap_enable_operation_194;
reg    ap_enable_operation_135;
reg    ap_predicate_op159_store_state4;
reg    ap_enable_operation_159;
reg    ap_predicate_op198_store_state4;
reg    ap_enable_operation_198;
reg    ap_predicate_op136_store_state3;
reg    ap_enable_operation_136;
reg    ap_predicate_op173_store_state4;
reg    ap_enable_operation_173;
reg    ap_predicate_op196_store_state4;
reg    ap_enable_operation_196;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_406;
reg    ap_condition_794;
reg    ap_condition_800;
reg    ap_condition_803;
reg    ap_condition_811;
reg    ap_condition_814;
reg    ap_condition_817;
reg    ap_condition_820;
reg    ap_condition_348;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

edgetracing_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dep_V_fu_150 <= 16'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            dep_V_fu_150 <= dep_V_4_fu_731_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_158 <= 32'd0;
        end else if (((icmp_ln332_fu_633_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_158 <= i_4_fu_638_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            idx1_V_fu_146 <= 16'd0;
        end else if (((icmp_ln332_fu_633_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            idx1_V_fu_146 <= idx1_V_5_fu_702_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            idx2_V_fu_154 <= 16'd1;
        end else if (((icmp_ln332_fu_633_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            idx2_V_fu_154 <= idx2_V_6_fu_690_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        op2_assign_32_cast_cast_reg_881 <= op2_assign_32_cast_cast_fu_602_p1;
        ram_row_depth_cast53_cast_cast_reg_875[5 : 0] <= ram_row_depth_cast53_cast_cast_fu_598_p1[5 : 0];
        sext_ln305_cast_reg_870 <= sext_ln305_cast_fu_594_p1;
        zext_ln303_cast_reg_886[5 : 0] <= zext_ln303_cast_fu_606_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        iBuff_V_10_addr_reg_954 <= zext_ln541_fu_747_p1;
        iBuff_V_13_addr_reg_959 <= zext_ln541_fu_747_p1;
        iBuff_V_16_addr_reg_964 <= zext_ln541_fu_747_p1;
        iBuff_V_19_addr_reg_969 <= zext_ln541_fu_747_p1;
        iBuff_V_1_addr_reg_939 <= zext_ln541_fu_747_p1;
        iBuff_V_4_addr_reg_944 <= zext_ln541_fu_747_p1;
        iBuff_V_7_addr_reg_949 <= zext_ln541_fu_747_p1;
        iBuff_V_addr_reg_934 <= zext_ln541_fu_747_p1;
        iReg_V_reg_916 <= p_dst1_data_dout;
        icmp_ln1019_4_reg_974 <= icmp_ln1019_4_fu_771_p2;
        index_reg_928 <= index_fu_742_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_6_fu_779_p2 == 1'd1) & (icmp_ln1019_4_fu_771_p2 == 1'd0))) begin
        icmp_ln1019_10_reg_982 <= icmp_ln1019_10_fu_788_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln332_fu_633_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1019_1_reg_901 <= icmp_ln1019_1_fu_685_p2;
        idx2_V_6_reg_906 <= idx2_V_6_fu_690_p3;
        trunc_ln342_reg_896 <= trunc_ln342_fu_669_p1;
        trunc_ln353_reg_912 <= trunc_ln353_fu_698_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_4_fu_771_p2 == 1'd1))) begin
        icmp_ln1019_5_reg_986 <= icmp_ln1019_5_fu_793_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_4_fu_771_p2 == 1'd0))) begin
        icmp_ln1019_6_reg_978 <= icmp_ln1019_6_fu_779_p2;
    end
end

always @ (*) begin
    if (((icmp_ln332_fu_633_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_794)) begin
        if (((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1))) begin
            iBuff_V_10_address0 = zext_ln541_1_fu_817_p1;
        end else if ((1'b1 == ap_condition_406)) begin
            iBuff_V_10_address0 = iBuff_V_10_addr_reg_954;
        end else begin
            iBuff_V_10_address0 = 'bx;
        end
    end else begin
        iBuff_V_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd3)))) begin
        iBuff_V_10_ce0 = 1'b1;
    end else begin
        iBuff_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_10_ce1 = 1'b1;
    end else begin
        iBuff_V_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_794)) begin
        if (((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1))) begin
            iBuff_V_10_d0 = iReg_V_reg_916;
        end else if ((1'b1 == ap_condition_406)) begin
            iBuff_V_10_d0 = 64'd0;
        end else begin
            iBuff_V_10_d0 = 'bx;
        end
    end else begin
        iBuff_V_10_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd3)))) begin
        iBuff_V_10_we0 = 1'b1;
    end else begin
        iBuff_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln353_reg_912 == 5'd10) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_10_we1 = 1'b1;
    end else begin
        iBuff_V_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_11_ce0 = 1'b1;
    end else begin
        iBuff_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln353_reg_912 == 5'd11) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_11_we0 = 1'b1;
    end else begin
        iBuff_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_12_ce0 = 1'b1;
    end else begin
        iBuff_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln353_reg_912 == 5'd12) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_12_we0 = 1'b1;
    end else begin
        iBuff_V_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_800)) begin
        if (((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1))) begin
            iBuff_V_13_address0 = zext_ln541_1_fu_817_p1;
        end else if ((1'b1 == ap_condition_406)) begin
            iBuff_V_13_address0 = iBuff_V_13_addr_reg_959;
        end else begin
            iBuff_V_13_address0 = 'bx;
        end
    end else begin
        iBuff_V_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd4)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd4)))) begin
        iBuff_V_13_ce0 = 1'b1;
    end else begin
        iBuff_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_13_ce1 = 1'b1;
    end else begin
        iBuff_V_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_800)) begin
        if (((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1))) begin
            iBuff_V_13_d0 = iReg_V_reg_916;
        end else if ((1'b1 == ap_condition_406)) begin
            iBuff_V_13_d0 = 64'd0;
        end else begin
            iBuff_V_13_d0 = 'bx;
        end
    end else begin
        iBuff_V_13_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd4)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd4)))) begin
        iBuff_V_13_we0 = 1'b1;
    end else begin
        iBuff_V_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln353_reg_912 == 5'd13) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_13_we1 = 1'b1;
    end else begin
        iBuff_V_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_14_ce0 = 1'b1;
    end else begin
        iBuff_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln353_reg_912 == 5'd14) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_14_we0 = 1'b1;
    end else begin
        iBuff_V_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_15_ce0 = 1'b1;
    end else begin
        iBuff_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln353_reg_912 == 5'd15) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_15_we0 = 1'b1;
    end else begin
        iBuff_V_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_803)) begin
        if (((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1))) begin
            iBuff_V_16_address0 = zext_ln541_1_fu_817_p1;
        end else if ((1'b1 == ap_condition_406)) begin
            iBuff_V_16_address0 = iBuff_V_16_addr_reg_964;
        end else begin
            iBuff_V_16_address0 = 'bx;
        end
    end else begin
        iBuff_V_16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd5)))) begin
        iBuff_V_16_ce0 = 1'b1;
    end else begin
        iBuff_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_16_ce1 = 1'b1;
    end else begin
        iBuff_V_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_803)) begin
        if (((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1))) begin
            iBuff_V_16_d0 = iReg_V_reg_916;
        end else if ((1'b1 == ap_condition_406)) begin
            iBuff_V_16_d0 = 64'd0;
        end else begin
            iBuff_V_16_d0 = 'bx;
        end
    end else begin
        iBuff_V_16_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd5)))) begin
        iBuff_V_16_we0 = 1'b1;
    end else begin
        iBuff_V_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln353_reg_912 == 5'd16) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_16_we1 = 1'b1;
    end else begin
        iBuff_V_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_17_ce0 = 1'b1;
    end else begin
        iBuff_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln353_reg_912 == 5'd17) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_17_we0 = 1'b1;
    end else begin
        iBuff_V_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_18_ce0 = 1'b1;
    end else begin
        iBuff_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln353_reg_912 == 5'd18) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_18_we0 = 1'b1;
    end else begin
        iBuff_V_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_811)) begin
        if (((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1))) begin
            iBuff_V_19_address0 = zext_ln541_1_fu_817_p1;
        end else if ((1'b1 == ap_condition_406)) begin
            iBuff_V_19_address0 = iBuff_V_19_addr_reg_969;
        end else begin
            iBuff_V_19_address0 = 'bx;
        end
    end else begin
        iBuff_V_19_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~(sdiv_ln305_1_cast == 5'd0) & ~(sdiv_ln305_1_cast == 5'd1) & ~(sdiv_ln305_1_cast == 5'd2) & ~(sdiv_ln305_1_cast == 5'd3) & ~(sdiv_ln305_1_cast == 5'd4) & ~(sdiv_ln305_1_cast == 5'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~(sdiv_ln305_1_cast == 5'd0) & ~(sdiv_ln305_1_cast == 5'd1) & ~(sdiv_ln305_1_cast == 5'd2) & ~(sdiv_ln305_1_cast == 5'd3) & ~(sdiv_ln305_1_cast == 5'd4) & ~(sdiv_ln305_1_cast == 5'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        iBuff_V_19_ce0 = 1'b1;
    end else begin
        iBuff_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_19_ce1 = 1'b1;
    end else begin
        iBuff_V_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_811)) begin
        if (((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1))) begin
            iBuff_V_19_d0 = iReg_V_reg_916;
        end else if ((1'b1 == ap_condition_406)) begin
            iBuff_V_19_d0 = 64'd0;
        end else begin
            iBuff_V_19_d0 = 'bx;
        end
    end else begin
        iBuff_V_19_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~(sdiv_ln305_1_cast == 5'd0) & ~(sdiv_ln305_1_cast == 5'd1) & ~(sdiv_ln305_1_cast == 5'd2) & ~(sdiv_ln305_1_cast == 5'd3) & ~(sdiv_ln305_1_cast == 5'd4) & ~(sdiv_ln305_1_cast == 5'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~(sdiv_ln305_1_cast == 5'd0) & ~(sdiv_ln305_1_cast == 5'd1) & ~(sdiv_ln305_1_cast == 5'd2) & ~(sdiv_ln305_1_cast == 5'd3) & ~(sdiv_ln305_1_cast == 5'd4) & ~(sdiv_ln305_1_cast == 5'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        iBuff_V_19_we0 = 1'b1;
    end else begin
        iBuff_V_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & ((trunc_ln353_reg_912 == 5'd19) | ((trunc_ln353_reg_912 == 5'd20) | ((trunc_ln353_reg_912 == 5'd21) | ((trunc_ln353_reg_912 == 5'd22) | ((trunc_ln353_reg_912 == 5'd23) | ((trunc_ln353_reg_912 == 5'd24) | ((trunc_ln353_reg_912 == 5'd25) | ((trunc_ln353_reg_912 == 5'd26) | ((trunc_ln353_reg_912 == 5'd27) | ((trunc_ln353_reg_912 == 5'd28) | ((trunc_ln353_reg_912 == 5'd29) | ((trunc_ln353_reg_912 == 5'd30) | (trunc_ln353_reg_912 == 5'd31))))))))))))))) begin
        iBuff_V_19_we1 = 1'b1;
    end else begin
        iBuff_V_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_814)) begin
        if (((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1))) begin
            iBuff_V_1_address0 = zext_ln541_1_fu_817_p1;
        end else if ((1'b1 == ap_condition_406)) begin
            iBuff_V_1_address0 = iBuff_V_1_addr_reg_939;
        end else begin
            iBuff_V_1_address0 = 'bx;
        end
    end else begin
        iBuff_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd0)))) begin
        iBuff_V_1_ce0 = 1'b1;
    end else begin
        iBuff_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_1_ce1 = 1'b1;
    end else begin
        iBuff_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_814)) begin
        if (((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1))) begin
            iBuff_V_1_d0 = iReg_V_reg_916;
        end else if ((1'b1 == ap_condition_406)) begin
            iBuff_V_1_d0 = 64'd0;
        end else begin
            iBuff_V_1_d0 = 'bx;
        end
    end else begin
        iBuff_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd0)))) begin
        iBuff_V_1_we0 = 1'b1;
    end else begin
        iBuff_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln353_reg_912 == 5'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_1_we1 = 1'b1;
    end else begin
        iBuff_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_2_ce0 = 1'b1;
    end else begin
        iBuff_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln353_reg_912 == 5'd2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_2_we0 = 1'b1;
    end else begin
        iBuff_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_3_ce0 = 1'b1;
    end else begin
        iBuff_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln353_reg_912 == 5'd3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_3_we0 = 1'b1;
    end else begin
        iBuff_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_817)) begin
        if (((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1))) begin
            iBuff_V_4_address0 = zext_ln541_1_fu_817_p1;
        end else if ((1'b1 == ap_condition_406)) begin
            iBuff_V_4_address0 = iBuff_V_4_addr_reg_944;
        end else begin
            iBuff_V_4_address0 = 'bx;
        end
    end else begin
        iBuff_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd1)))) begin
        iBuff_V_4_ce0 = 1'b1;
    end else begin
        iBuff_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_4_ce1 = 1'b1;
    end else begin
        iBuff_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_817)) begin
        if (((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1))) begin
            iBuff_V_4_d0 = iReg_V_reg_916;
        end else if ((1'b1 == ap_condition_406)) begin
            iBuff_V_4_d0 = 64'd0;
        end else begin
            iBuff_V_4_d0 = 'bx;
        end
    end else begin
        iBuff_V_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd1)))) begin
        iBuff_V_4_we0 = 1'b1;
    end else begin
        iBuff_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln353_reg_912 == 5'd4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_4_we1 = 1'b1;
    end else begin
        iBuff_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_5_ce0 = 1'b1;
    end else begin
        iBuff_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln353_reg_912 == 5'd5) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_5_we0 = 1'b1;
    end else begin
        iBuff_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_6_ce0 = 1'b1;
    end else begin
        iBuff_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln353_reg_912 == 5'd6) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_6_we0 = 1'b1;
    end else begin
        iBuff_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_820)) begin
        if (((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1))) begin
            iBuff_V_7_address0 = zext_ln541_1_fu_817_p1;
        end else if ((1'b1 == ap_condition_406)) begin
            iBuff_V_7_address0 = iBuff_V_7_addr_reg_949;
        end else begin
            iBuff_V_7_address0 = 'bx;
        end
    end else begin
        iBuff_V_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd2)))) begin
        iBuff_V_7_ce0 = 1'b1;
    end else begin
        iBuff_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_7_ce1 = 1'b1;
    end else begin
        iBuff_V_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_820)) begin
        if (((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1))) begin
            iBuff_V_7_d0 = iReg_V_reg_916;
        end else if ((1'b1 == ap_condition_406)) begin
            iBuff_V_7_d0 = 64'd0;
        end else begin
            iBuff_V_7_d0 = 'bx;
        end
    end else begin
        iBuff_V_7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd2)))) begin
        iBuff_V_7_we0 = 1'b1;
    end else begin
        iBuff_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln353_reg_912 == 5'd7) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_7_we1 = 1'b1;
    end else begin
        iBuff_V_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_8_ce0 = 1'b1;
    end else begin
        iBuff_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln353_reg_912 == 5'd8) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_8_we0 = 1'b1;
    end else begin
        iBuff_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_9_ce0 = 1'b1;
    end else begin
        iBuff_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln353_reg_912 == 5'd9) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_9_we0 = 1'b1;
    end else begin
        iBuff_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((icmp_ln1019_5_reg_986 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd1))) begin
            iBuff_V_address0 = iBuff_V_addr_reg_934;
        end else if ((1'b1 == ap_condition_348)) begin
            iBuff_V_address0 = zext_ln541_2_fu_808_p1;
        end else begin
            iBuff_V_address0 = 'bx;
        end
    end else begin
        iBuff_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_5_reg_986 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_10_reg_982 == 1'd0) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        iBuff_V_ce0 = 1'b1;
    end else begin
        iBuff_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_ce1 = 1'b1;
    end else begin
        iBuff_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((icmp_ln1019_5_reg_986 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd1))) begin
            iBuff_V_d0 = 64'd0;
        end else if ((1'b1 == ap_condition_348)) begin
            iBuff_V_d0 = iReg_V_reg_916;
        end else begin
            iBuff_V_d0 = 'bx;
        end
    end else begin
        iBuff_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_5_reg_986 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_10_reg_982 == 1'd0) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        iBuff_V_we0 = 1'b1;
    end else begin
        iBuff_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln353_reg_912 == 5'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_we1 = 1'b1;
    end else begin
        iBuff_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_dst1_data_blk_n = p_dst1_data_empty_n;
    end else begin
        p_dst1_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_dst1_data_read = 1'b1;
    end else begin
        p_dst1_data_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((p_dst1_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((p_dst1_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (p_dst1_data_empty_n == 1'b0);
end

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_348 = ((icmp_ln1019_10_reg_982 == 1'd0) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0));
end

always @ (*) begin
    ap_condition_406 = ((icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0));
end

always @ (*) begin
    ap_condition_794 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd3));
end

always @ (*) begin
    ap_condition_800 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd4));
end

always @ (*) begin
    ap_condition_803 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd5));
end

always @ (*) begin
    ap_condition_811 = (~(sdiv_ln305_1_cast == 5'd0) & ~(sdiv_ln305_1_cast == 5'd1) & ~(sdiv_ln305_1_cast == 5'd2) & ~(sdiv_ln305_1_cast == 5'd3) & ~(sdiv_ln305_1_cast == 5'd4) & ~(sdiv_ln305_1_cast == 5'd5) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_814 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd0));
end

always @ (*) begin
    ap_condition_817 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd1));
end

always @ (*) begin
    ap_condition_820 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (sdiv_ln305_1_cast == 5'd2));
end

always @ (*) begin
    ap_enable_operation_119 = (trunc_ln353_reg_912 == 5'd16);
end

always @ (*) begin
    ap_enable_operation_122 = (trunc_ln353_reg_912 == 5'd13);
end

always @ (*) begin
    ap_enable_operation_125 = (trunc_ln353_reg_912 == 5'd10);
end

always @ (*) begin
    ap_enable_operation_128 = (trunc_ln353_reg_912 == 5'd7);
end

always @ (*) begin
    ap_enable_operation_131 = (trunc_ln353_reg_912 == 5'd4);
end

always @ (*) begin
    ap_enable_operation_134 = (trunc_ln353_reg_912 == 5'd1);
end

always @ (*) begin
    ap_enable_operation_135 = (trunc_ln353_reg_912 == 5'd0);
end

always @ (*) begin
    ap_enable_operation_136 = (ap_predicate_op136_store_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_159 = (ap_predicate_op159_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_161 = (ap_predicate_op161_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_163 = (ap_predicate_op163_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_165 = (ap_predicate_op165_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_167 = (ap_predicate_op167_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_169 = (ap_predicate_op169_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_171 = (ap_predicate_op171_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_173 = (ap_predicate_op173_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_184 = (ap_predicate_op184_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_186 = (ap_predicate_op186_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_188 = (ap_predicate_op188_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_190 = (ap_predicate_op190_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_192 = (ap_predicate_op192_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_194 = (ap_predicate_op194_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_196 = (ap_predicate_op196_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_198 = (ap_predicate_op198_store_state4 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_cur_n = p_dst1_data_blk_n;

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

always @ (*) begin
    ap_predicate_op136_store_state3 = ((trunc_ln353_reg_912 == 5'd19) | ((trunc_ln353_reg_912 == 5'd20) | ((trunc_ln353_reg_912 == 5'd21) | ((trunc_ln353_reg_912 == 5'd22) | ((trunc_ln353_reg_912 == 5'd23) | ((trunc_ln353_reg_912 == 5'd24) | ((trunc_ln353_reg_912 == 5'd25) | ((trunc_ln353_reg_912 == 5'd26) | ((trunc_ln353_reg_912 == 5'd27) | ((trunc_ln353_reg_912 == 5'd28) | ((trunc_ln353_reg_912 == 5'd29) | ((trunc_ln353_reg_912 == 5'd30) | (trunc_ln353_reg_912 == 5'd31)))))))))))));
end

always @ (*) begin
    ap_predicate_op159_store_state4 = ((icmp_ln1019_10_reg_982 == 1'd0) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0));
end

always @ (*) begin
    ap_predicate_op161_store_state4 = ((icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (sdiv_ln305_1_cast == 5'd5));
end

always @ (*) begin
    ap_predicate_op163_store_state4 = ((icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (sdiv_ln305_1_cast == 5'd4));
end

always @ (*) begin
    ap_predicate_op165_store_state4 = ((icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (sdiv_ln305_1_cast == 5'd3));
end

always @ (*) begin
    ap_predicate_op167_store_state4 = ((icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (sdiv_ln305_1_cast == 5'd2));
end

always @ (*) begin
    ap_predicate_op169_store_state4 = ((icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (sdiv_ln305_1_cast == 5'd1));
end

always @ (*) begin
    ap_predicate_op171_store_state4 = ((icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0) & (sdiv_ln305_1_cast == 5'd0));
end

always @ (*) begin
    ap_predicate_op173_store_state4 = (~(sdiv_ln305_1_cast == 5'd0) & ~(sdiv_ln305_1_cast == 5'd1) & ~(sdiv_ln305_1_cast == 5'd2) & ~(sdiv_ln305_1_cast == 5'd3) & ~(sdiv_ln305_1_cast == 5'd4) & ~(sdiv_ln305_1_cast == 5'd5) & (icmp_ln1019_10_reg_982 == 1'd1) & (icmp_ln1019_6_reg_978 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd0));
end

always @ (*) begin
    ap_predicate_op184_store_state4 = ((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (sdiv_ln305_1_cast == 5'd5));
end

always @ (*) begin
    ap_predicate_op186_store_state4 = ((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (sdiv_ln305_1_cast == 5'd4));
end

always @ (*) begin
    ap_predicate_op188_store_state4 = ((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (sdiv_ln305_1_cast == 5'd3));
end

always @ (*) begin
    ap_predicate_op190_store_state4 = ((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (sdiv_ln305_1_cast == 5'd2));
end

always @ (*) begin
    ap_predicate_op192_store_state4 = ((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (sdiv_ln305_1_cast == 5'd1));
end

always @ (*) begin
    ap_predicate_op194_store_state4 = ((icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1) & (sdiv_ln305_1_cast == 5'd0));
end

always @ (*) begin
    ap_predicate_op196_store_state4 = (~(sdiv_ln305_1_cast == 5'd0) & ~(sdiv_ln305_1_cast == 5'd1) & ~(sdiv_ln305_1_cast == 5'd2) & ~(sdiv_ln305_1_cast == 5'd3) & ~(sdiv_ln305_1_cast == 5'd4) & ~(sdiv_ln305_1_cast == 5'd5) & (icmp_ln1019_5_reg_986 == 1'd0) & (icmp_ln1019_4_reg_974 == 1'd1));
end

always @ (*) begin
    ap_predicate_op198_store_state4 = ((icmp_ln1019_5_reg_986 == 1'd1) & (icmp_ln1019_4_reg_974 == 1'd1));
end

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign dep_V_3_fu_726_p2 = (dep_V_fu_150 + zext_ln303_cast_reg_886);

assign dep_V_4_fu_731_p3 = ((icmp_ln1019_1_reg_901[0:0] == 1'b1) ? dep_V_3_fu_726_p2 : dep_V_fu_150);

assign iBuff_V_10_address1 = zext_ln541_fu_747_p1;

assign iBuff_V_10_d1 = p_dst1_data_dout;

assign iBuff_V_11_address0 = zext_ln541_fu_747_p1;

assign iBuff_V_11_d0 = p_dst1_data_dout;

assign iBuff_V_12_address0 = zext_ln541_fu_747_p1;

assign iBuff_V_12_d0 = p_dst1_data_dout;

assign iBuff_V_13_address1 = zext_ln541_fu_747_p1;

assign iBuff_V_13_d1 = p_dst1_data_dout;

assign iBuff_V_14_address0 = zext_ln541_fu_747_p1;

assign iBuff_V_14_d0 = p_dst1_data_dout;

assign iBuff_V_15_address0 = zext_ln541_fu_747_p1;

assign iBuff_V_15_d0 = p_dst1_data_dout;

assign iBuff_V_16_address1 = zext_ln541_fu_747_p1;

assign iBuff_V_16_d1 = p_dst1_data_dout;

assign iBuff_V_17_address0 = zext_ln541_fu_747_p1;

assign iBuff_V_17_d0 = p_dst1_data_dout;

assign iBuff_V_18_address0 = zext_ln541_fu_747_p1;

assign iBuff_V_18_d0 = p_dst1_data_dout;

assign iBuff_V_19_address1 = zext_ln541_fu_747_p1;

assign iBuff_V_19_d1 = p_dst1_data_dout;

assign iBuff_V_1_address1 = zext_ln541_fu_747_p1;

assign iBuff_V_1_d1 = p_dst1_data_dout;

assign iBuff_V_2_address0 = zext_ln541_fu_747_p1;

assign iBuff_V_2_d0 = p_dst1_data_dout;

assign iBuff_V_3_address0 = zext_ln541_fu_747_p1;

assign iBuff_V_3_d0 = p_dst1_data_dout;

assign iBuff_V_4_address1 = zext_ln541_fu_747_p1;

assign iBuff_V_4_d1 = p_dst1_data_dout;

assign iBuff_V_5_address0 = zext_ln541_fu_747_p1;

assign iBuff_V_5_d0 = p_dst1_data_dout;

assign iBuff_V_6_address0 = zext_ln541_fu_747_p1;

assign iBuff_V_6_d0 = p_dst1_data_dout;

assign iBuff_V_7_address1 = zext_ln541_fu_747_p1;

assign iBuff_V_7_d1 = p_dst1_data_dout;

assign iBuff_V_8_address0 = zext_ln541_fu_747_p1;

assign iBuff_V_8_d0 = p_dst1_data_dout;

assign iBuff_V_9_address0 = zext_ln541_fu_747_p1;

assign iBuff_V_9_d0 = p_dst1_data_dout;

assign iBuff_V_address1 = zext_ln541_fu_747_p1;

assign iBuff_V_d1 = p_dst1_data_dout;

assign i_4_fu_638_p2 = (i_fu_158 + 32'd1);

assign icmp_ln1019_10_fu_788_p2 = ((op2_assign == zext_ln1019_2_fu_784_p1) ? 1'b1 : 1'b0);

assign icmp_ln1019_1_fu_685_p2 = ((op2_assign_32_cast_cast_reg_881 == zext_ln1019_fu_681_p1) ? 1'b1 : 1'b0);

assign icmp_ln1019_4_fu_771_p2 = ((idx2_V_6_reg_906 == 16'd1) ? 1'b1 : 1'b0);

assign icmp_ln1019_5_fu_793_p2 = ((dep_V_4_fu_731_p3 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1019_6_fu_779_p2 = ((sext_ln305_cast_reg_870 == zext_ln1019_1_fu_776_p1) ? 1'b1 : 1'b0);

assign icmp_ln1019_fu_650_p2 = ((zext_ln303_cast_reg_886 == idx1_V_fu_146) ? 1'b1 : 1'b0);

assign icmp_ln332_fu_633_p2 = ((i_fu_158 == lBound) ? 1'b1 : 1'b0);

assign idx1_V_4_fu_661_p3 = ((icmp_ln1019_fu_650_p2[0:0] == 1'b1) ? 16'd0 : idx1_V_fu_146);

assign idx1_V_5_fu_702_p2 = (idx1_V_4_fu_661_p3 + 16'd1);

assign idx2_V_4_fu_655_p2 = (idx2_V_fu_154 + 16'd1);

assign idx2_V_5_fu_673_p3 = ((icmp_ln1019_fu_650_p2[0:0] == 1'b1) ? idx2_V_4_fu_655_p2 : idx2_V_fu_154);

assign idx2_V_6_fu_690_p3 = ((icmp_ln1019_1_fu_685_p2[0:0] == 1'b1) ? 16'd1 : idx2_V_5_fu_673_p3);

assign index_fu_742_p2 = (trunc_ln347_fu_738_p1 + trunc_ln342_reg_896);

assign op2_assign_32_cast_cast_fu_602_p1 = $signed(op2_assign_32_cast);

assign ram_row_depth_cast53_cast_cast_fu_598_p1 = ram_row_depth_cast53_cast;

assign ret_V_1_fu_804_p2 = (ram_row_depth_cast53_cast_cast_reg_875 + index_reg_928);

assign ret_V_fu_813_p2 = (index_reg_928 - ram_row_depth_cast53_cast_cast_reg_875);

assign sext_ln305_cast_fu_594_p1 = $signed(sext_ln305);

assign trunc_ln342_fu_669_p1 = idx1_V_4_fu_661_p3[9:0];

assign trunc_ln347_fu_738_p1 = dep_V_4_fu_731_p3[9:0];

assign trunc_ln353_fu_698_p1 = idx2_V_6_fu_690_p3[4:0];

assign zext_ln1019_1_fu_776_p1 = idx2_V_6_reg_906;

assign zext_ln1019_2_fu_784_p1 = dep_V_4_fu_731_p3;

assign zext_ln1019_fu_681_p1 = idx2_V_5_fu_673_p3;

assign zext_ln303_cast_fu_606_p1 = zext_ln303;

assign zext_ln541_1_fu_817_p1 = ret_V_fu_813_p2;

assign zext_ln541_2_fu_808_p1 = ret_V_1_fu_804_p2;

assign zext_ln541_fu_747_p1 = index_fu_742_p2;

always @ (posedge ap_clk) begin
    ram_row_depth_cast53_cast_cast_reg_875[9:6] <= 4'b0000;
    zext_ln303_cast_reg_886[15:6] <= 10'b0000000000;
end

endmodule //edgetracing_accel_edgetracing_accel_Pipeline_Read_N_Arrange
