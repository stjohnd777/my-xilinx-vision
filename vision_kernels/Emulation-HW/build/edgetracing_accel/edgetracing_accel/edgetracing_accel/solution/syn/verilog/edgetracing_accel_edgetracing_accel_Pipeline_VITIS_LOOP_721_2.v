// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module edgetracing_accel_edgetracing_accel_Pipeline_VITIS_LOOP_721_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_dst1_data_din,
        p_dst1_data_full_n,
        p_dst1_data_write,
        m_axi_gmem3_AWVALID,
        m_axi_gmem3_AWREADY,
        m_axi_gmem3_AWADDR,
        m_axi_gmem3_AWID,
        m_axi_gmem3_AWLEN,
        m_axi_gmem3_AWSIZE,
        m_axi_gmem3_AWBURST,
        m_axi_gmem3_AWLOCK,
        m_axi_gmem3_AWCACHE,
        m_axi_gmem3_AWPROT,
        m_axi_gmem3_AWQOS,
        m_axi_gmem3_AWREGION,
        m_axi_gmem3_AWUSER,
        m_axi_gmem3_WVALID,
        m_axi_gmem3_WREADY,
        m_axi_gmem3_WDATA,
        m_axi_gmem3_WSTRB,
        m_axi_gmem3_WLAST,
        m_axi_gmem3_WID,
        m_axi_gmem3_WUSER,
        m_axi_gmem3_ARVALID,
        m_axi_gmem3_ARREADY,
        m_axi_gmem3_ARADDR,
        m_axi_gmem3_ARID,
        m_axi_gmem3_ARLEN,
        m_axi_gmem3_ARSIZE,
        m_axi_gmem3_ARBURST,
        m_axi_gmem3_ARLOCK,
        m_axi_gmem3_ARCACHE,
        m_axi_gmem3_ARPROT,
        m_axi_gmem3_ARQOS,
        m_axi_gmem3_ARREGION,
        m_axi_gmem3_ARUSER,
        m_axi_gmem3_RVALID,
        m_axi_gmem3_RREADY,
        m_axi_gmem3_RDATA,
        m_axi_gmem3_RLAST,
        m_axi_gmem3_RID,
        m_axi_gmem3_RFIFONUM,
        m_axi_gmem3_RUSER,
        m_axi_gmem3_RRESP,
        m_axi_gmem3_BVALID,
        m_axi_gmem3_BREADY,
        m_axi_gmem3_BRESP,
        m_axi_gmem3_BID,
        m_axi_gmem3_BUSER,
        bound,
        zext_ln715,
        packcols,
        p_cast,
        img_inp,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_pp0_stage0 = 32'd1;
parameter    ap_ST_fsm_pp0_stage1 = 32'd2;
parameter    ap_ST_fsm_pp0_stage2 = 32'd4;
parameter    ap_ST_fsm_pp0_stage3 = 32'd8;
parameter    ap_ST_fsm_pp0_stage4 = 32'd16;
parameter    ap_ST_fsm_pp0_stage5 = 32'd32;
parameter    ap_ST_fsm_pp0_stage6 = 32'd64;
parameter    ap_ST_fsm_pp0_stage7 = 32'd128;
parameter    ap_ST_fsm_pp0_stage8 = 32'd256;
parameter    ap_ST_fsm_pp0_stage9 = 32'd512;
parameter    ap_ST_fsm_pp0_stage10 = 32'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 32'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 32'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 32'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 32'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 32'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 32'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 32'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 32'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 32'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 32'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 32'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 32'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 32'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 32'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 32'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 32'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 32'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 32'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 32'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 32'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 32'd2147483648;
parameter    ap_const_lv64_0 = 64'd0;
































input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [63:0] p_dst1_data_din;
input   p_dst1_data_full_n;
output   p_dst1_data_write;
output   m_axi_gmem3_AWVALID;
input   m_axi_gmem3_AWREADY;
output  [63:0] m_axi_gmem3_AWADDR;
output  [0:0] m_axi_gmem3_AWID;
output  [31:0] m_axi_gmem3_AWLEN;
output  [2:0] m_axi_gmem3_AWSIZE;
output  [1:0] m_axi_gmem3_AWBURST;
output  [1:0] m_axi_gmem3_AWLOCK;
output  [3:0] m_axi_gmem3_AWCACHE;
output  [2:0] m_axi_gmem3_AWPROT;
output  [3:0] m_axi_gmem3_AWQOS;
output  [3:0] m_axi_gmem3_AWREGION;
output  [0:0] m_axi_gmem3_AWUSER;
output   m_axi_gmem3_WVALID;
input   m_axi_gmem3_WREADY;
output  [255:0] m_axi_gmem3_WDATA;
output  [31:0] m_axi_gmem3_WSTRB;
output   m_axi_gmem3_WLAST;
output  [0:0] m_axi_gmem3_WID;
output  [0:0] m_axi_gmem3_WUSER;
output   m_axi_gmem3_ARVALID;
input   m_axi_gmem3_ARREADY;
output  [63:0] m_axi_gmem3_ARADDR;
output  [0:0] m_axi_gmem3_ARID;
output  [31:0] m_axi_gmem3_ARLEN;
output  [2:0] m_axi_gmem3_ARSIZE;
output  [1:0] m_axi_gmem3_ARBURST;
output  [1:0] m_axi_gmem3_ARLOCK;
output  [3:0] m_axi_gmem3_ARCACHE;
output  [2:0] m_axi_gmem3_ARPROT;
output  [3:0] m_axi_gmem3_ARQOS;
output  [3:0] m_axi_gmem3_ARREGION;
output  [0:0] m_axi_gmem3_ARUSER;
input   m_axi_gmem3_RVALID;
output   m_axi_gmem3_RREADY;
input  [255:0] m_axi_gmem3_RDATA;
input   m_axi_gmem3_RLAST;
input  [0:0] m_axi_gmem3_RID;
input  [8:0] m_axi_gmem3_RFIFONUM;
input  [0:0] m_axi_gmem3_RUSER;
input  [1:0] m_axi_gmem3_RRESP;
input   m_axi_gmem3_BVALID;
output   m_axi_gmem3_BREADY;
input  [1:0] m_axi_gmem3_BRESP;
input  [0:0] m_axi_gmem3_BID;
input  [0:0] m_axi_gmem3_BUSER;
input  [16:0] bound;
input  [5:0] zext_ln715;
input  [5:0] packcols;
input  [10:0] p_cast;
input  [63:0] img_inp;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_idle;
reg[63:0] p_dst1_data_din;
reg p_dst1_data_write;
reg m_axi_gmem3_ARVALID;
reg m_axi_gmem3_RREADY;

(* fsm_encoding = "none" *) reg   [31:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_state32_pp0_stage31_iter0;
wire    ap_block_state64_pp0_stage31_iter1;
reg   [0:0] icmp_ln720_reg_1254;
reg   [0:0] icmp_ln720_reg_1254_pp0_iter2_reg;
reg    ap_block_state96_pp0_stage31_iter2;
reg    ap_block_pp0_stage31_subdone;
reg    ap_condition_exit_pp0_iter0_stage31;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem3_blk_n_R;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
reg    gmem3_blk_n_AR;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] or_ln720_reg_1258;
reg    p_dst1_data_blk_n;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_pp0_stage28;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_pp0_stage29;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_pp0_stage30;
wire    ap_block_pp0_stage31;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] icmp_ln720_reg_1254_pp0_iter3_reg;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
reg   [0:0] first_iter_0_reg_362;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state33_pp0_stage0_iter1;
wire    ap_block_state65_pp0_stage0_iter2;
reg    ap_block_state97_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
wire   [21:0] p_cast_cast_fu_381_p1;
reg   [21:0] p_cast_cast_reg_1244;
wire   [31:0] zext_ln715_cast_fu_385_p1;
reg   [31:0] zext_ln715_cast_reg_1249;
wire   [0:0] icmp_ln720_fu_410_p2;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state34_pp0_stage1_iter1;
wire    ap_block_state66_pp0_stage1_iter2;
reg    ap_block_state98_pp0_stage1_iter3;
reg    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln720_reg_1254_pp0_iter1_reg;
wire   [0:0] or_ln720_fu_429_p2;
reg   [58:0] sext_ln721_mid2_v_reg_1267;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state37_pp0_stage4_iter1;
wire    ap_block_state69_pp0_stage4_iter2;
reg    ap_block_state101_pp0_stage4_iter3;
reg    ap_block_pp0_stage4_11001;
wire  signed [63:0] sext_ln720_fu_500_p1;
reg  signed [63:0] sext_ln720_reg_1272;
wire    ap_block_state6_pp0_stage5_iter0;
reg    ap_predicate_op158_readreq_state6;
reg    ap_block_state6_io;
wire    ap_block_state38_pp0_stage5_iter1;
wire    ap_block_state70_pp0_stage5_iter2;
reg    ap_block_state102_pp0_stage5_iter3;
reg    ap_block_pp0_stage5_11001;
reg  signed [63:0] sext_ln720_reg_1272_pp0_iter1_reg;
reg  signed [63:0] sext_ln720_reg_1272_pp0_iter2_reg;
reg   [63:0] grp_fu_374_p2;
wire   [1:0] trunc_ln211_fu_504_p1;
reg   [1:0] trunc_ln211_reg_1282;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state44_pp0_stage11_iter1;
reg    ap_block_state76_pp0_stage11_iter2;
reg    ap_block_state108_pp0_stage11_iter3;
reg    ap_block_pp0_stage11_11001;
reg   [1:0] trunc_ln211_1_reg_1287;
reg   [1:0] trunc_ln211_2_reg_1292;
reg   [1:0] trunc_ln211_3_reg_1297;
reg   [1:0] trunc_ln211_4_reg_1302;
reg   [1:0] trunc_ln211_5_reg_1307;
reg   [1:0] trunc_ln211_6_reg_1312;
reg   [1:0] trunc_ln211_7_reg_1317;
reg   [1:0] trunc_ln211_8_reg_1322;
reg   [1:0] trunc_ln211_9_reg_1327;
reg   [1:0] trunc_ln211_s_reg_1332;
reg   [1:0] trunc_ln211_10_reg_1337;
reg   [1:0] trunc_ln211_11_reg_1342;
reg   [1:0] trunc_ln211_12_reg_1347;
reg   [1:0] trunc_ln211_13_reg_1352;
reg   [1:0] trunc_ln211_14_reg_1357;
reg   [1:0] trunc_ln211_15_reg_1362;
reg   [1:0] trunc_ln211_16_reg_1367;
reg   [1:0] trunc_ln211_17_reg_1372;
reg   [1:0] trunc_ln211_18_reg_1377;
reg   [1:0] trunc_ln211_19_reg_1382;
reg   [1:0] trunc_ln211_20_reg_1387;
reg   [1:0] trunc_ln211_21_reg_1392;
reg   [1:0] trunc_ln211_22_reg_1397;
reg   [1:0] trunc_ln211_23_reg_1402;
reg   [1:0] trunc_ln211_24_reg_1407;
reg   [1:0] trunc_ln211_25_reg_1412;
reg   [1:0] trunc_ln211_26_reg_1417;
reg   [1:0] trunc_ln211_27_reg_1422;
reg   [1:0] trunc_ln211_28_reg_1427;
reg   [1:0] trunc_ln211_29_reg_1432;
reg   [1:0] trunc_ln211_30_reg_1437;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage11_subdone;
reg   [0:0] ap_phi_mux_first_iter_0_phi_fu_366_p4;
wire    ap_loop_init;
reg    ap_block_pp0_stage0_subdone;
reg   [5:0] c_fu_302;
wire   [5:0] select_ln721_fu_459_p3;
reg   [10:0] r_fu_306;
wire   [10:0] select_ln720_fu_441_p3;
reg   [16:0] indvar_flatten_fu_310;
wire   [16:0] add_ln720_fu_415_p2;
wire   [63:0] p_Result_s_fu_818_p5;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state45_pp0_stage12_iter1;
reg    ap_block_state77_pp0_stage12_iter2;
reg    ap_block_pp0_stage12_01001;
wire   [63:0] p_Result_s_48_fu_830_p5;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_state46_pp0_stage13_iter1;
reg    ap_block_state78_pp0_stage13_iter2;
reg    ap_block_pp0_stage13_01001;
wire   [63:0] p_Result_1_fu_842_p5;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_state47_pp0_stage14_iter1;
reg    ap_block_state79_pp0_stage14_iter2;
reg    ap_block_pp0_stage14_01001;
wire   [63:0] p_Result_2_fu_854_p5;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_state48_pp0_stage15_iter1;
reg    ap_block_state80_pp0_stage15_iter2;
reg    ap_block_pp0_stage15_01001;
wire   [63:0] p_Result_3_fu_866_p5;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_state49_pp0_stage16_iter1;
reg    ap_block_state81_pp0_stage16_iter2;
reg    ap_block_pp0_stage16_01001;
wire   [63:0] p_Result_4_fu_878_p5;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_state50_pp0_stage17_iter1;
reg    ap_block_state82_pp0_stage17_iter2;
reg    ap_block_pp0_stage17_01001;
wire   [63:0] p_Result_5_fu_890_p5;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_state51_pp0_stage18_iter1;
reg    ap_block_state83_pp0_stage18_iter2;
reg    ap_block_pp0_stage18_01001;
wire   [63:0] p_Result_6_fu_902_p5;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_state52_pp0_stage19_iter1;
reg    ap_block_state84_pp0_stage19_iter2;
reg    ap_block_pp0_stage19_01001;
wire   [63:0] p_Result_7_fu_914_p5;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_block_state53_pp0_stage20_iter1;
reg    ap_block_state85_pp0_stage20_iter2;
reg    ap_block_pp0_stage20_01001;
wire   [63:0] p_Result_8_fu_926_p5;
wire    ap_block_state22_pp0_stage21_iter0;
wire    ap_block_state54_pp0_stage21_iter1;
reg    ap_block_state86_pp0_stage21_iter2;
reg    ap_block_pp0_stage21_01001;
wire   [63:0] p_Result_9_fu_938_p5;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_block_state55_pp0_stage22_iter1;
reg    ap_block_state87_pp0_stage22_iter2;
reg    ap_block_pp0_stage22_01001;
wire   [63:0] p_Result_10_fu_950_p5;
wire    ap_block_state24_pp0_stage23_iter0;
wire    ap_block_state56_pp0_stage23_iter1;
reg    ap_block_state88_pp0_stage23_iter2;
reg    ap_block_pp0_stage23_01001;
wire   [63:0] p_Result_11_fu_962_p5;
wire    ap_block_state25_pp0_stage24_iter0;
wire    ap_block_state57_pp0_stage24_iter1;
reg    ap_block_state89_pp0_stage24_iter2;
reg    ap_block_pp0_stage24_01001;
wire   [63:0] p_Result_12_fu_974_p5;
wire    ap_block_state26_pp0_stage25_iter0;
wire    ap_block_state58_pp0_stage25_iter1;
reg    ap_block_state90_pp0_stage25_iter2;
reg    ap_block_pp0_stage25_01001;
wire   [63:0] p_Result_13_fu_986_p5;
wire    ap_block_state27_pp0_stage26_iter0;
wire    ap_block_state59_pp0_stage26_iter1;
reg    ap_block_state91_pp0_stage26_iter2;
reg    ap_block_pp0_stage26_01001;
wire   [63:0] p_Result_14_fu_998_p5;
wire    ap_block_state28_pp0_stage27_iter0;
wire    ap_block_state60_pp0_stage27_iter1;
reg    ap_block_state92_pp0_stage27_iter2;
reg    ap_block_pp0_stage27_01001;
wire   [63:0] p_Result_15_fu_1010_p5;
wire    ap_block_state29_pp0_stage28_iter0;
wire    ap_block_state61_pp0_stage28_iter1;
reg    ap_block_state93_pp0_stage28_iter2;
reg    ap_block_pp0_stage28_01001;
wire   [63:0] p_Result_16_fu_1022_p5;
wire    ap_block_state30_pp0_stage29_iter0;
wire    ap_block_state62_pp0_stage29_iter1;
reg    ap_block_state94_pp0_stage29_iter2;
reg    ap_block_pp0_stage29_01001;
wire   [63:0] p_Result_17_fu_1034_p5;
wire    ap_block_state31_pp0_stage30_iter0;
wire    ap_block_state63_pp0_stage30_iter1;
reg    ap_block_state95_pp0_stage30_iter2;
reg    ap_block_pp0_stage30_01001;
wire   [63:0] p_Result_18_fu_1046_p5;
reg    ap_block_pp0_stage31_01001;
wire   [63:0] p_Result_19_fu_1058_p5;
reg    ap_block_pp0_stage0_01001;
wire   [63:0] p_Result_20_fu_1070_p5;
reg    ap_block_pp0_stage1_01001;
wire   [63:0] p_Result_21_fu_1082_p5;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state35_pp0_stage2_iter1;
wire    ap_block_state67_pp0_stage2_iter2;
reg    ap_block_state99_pp0_stage2_iter3;
reg    ap_block_pp0_stage2_01001;
wire   [63:0] p_Result_22_fu_1094_p5;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state36_pp0_stage3_iter1;
wire    ap_block_state68_pp0_stage3_iter2;
reg    ap_block_state100_pp0_stage3_iter3;
reg    ap_block_pp0_stage3_01001;
wire   [63:0] p_Result_23_fu_1106_p5;
reg    ap_block_pp0_stage4_01001;
wire   [63:0] p_Result_24_fu_1118_p5;
reg    ap_block_pp0_stage5_01001;
wire   [63:0] p_Result_25_fu_1130_p5;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state39_pp0_stage6_iter1;
wire    ap_block_state71_pp0_stage6_iter2;
reg    ap_block_state103_pp0_stage6_iter3;
reg    ap_block_pp0_stage6_01001;
wire   [63:0] p_Result_26_fu_1142_p5;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state40_pp0_stage7_iter1;
wire    ap_block_state72_pp0_stage7_iter2;
reg    ap_block_state104_pp0_stage7_iter3;
reg    ap_block_pp0_stage7_01001;
wire   [63:0] p_Result_27_fu_1154_p5;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state41_pp0_stage8_iter1;
wire    ap_block_state73_pp0_stage8_iter2;
reg    ap_block_state105_pp0_stage8_iter3;
reg    ap_block_pp0_stage8_01001;
wire   [63:0] p_Result_28_fu_1166_p5;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state42_pp0_stage9_iter1;
wire    ap_block_state74_pp0_stage9_iter2;
reg    ap_block_state106_pp0_stage9_iter3;
reg    ap_block_pp0_stage9_01001;
wire   [63:0] p_Result_29_fu_1178_p5;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state43_pp0_stage10_iter1;
wire    ap_block_state75_pp0_stage10_iter2;
reg    ap_block_state107_pp0_stage10_iter3;
reg    ap_block_pp0_stage10_01001;
wire   [63:0] p_Result_30_fu_1190_p5;
reg    ap_block_pp0_stage11_01001;
reg    ap_block_pp0_stage12_11001;
reg    ap_block_pp0_stage13_11001;
reg    ap_block_pp0_stage14_11001;
reg    ap_block_pp0_stage15_11001;
reg    ap_block_pp0_stage16_11001;
reg    ap_block_pp0_stage17_11001;
reg    ap_block_pp0_stage18_11001;
reg    ap_block_pp0_stage19_11001;
reg    ap_block_pp0_stage20_11001;
reg    ap_block_pp0_stage21_11001;
reg    ap_block_pp0_stage22_11001;
reg    ap_block_pp0_stage23_11001;
reg    ap_block_pp0_stage24_11001;
reg    ap_block_pp0_stage25_11001;
reg    ap_block_pp0_stage26_11001;
reg    ap_block_pp0_stage27_11001;
reg    ap_block_pp0_stage28_11001;
reg    ap_block_pp0_stage29_11001;
reg    ap_block_pp0_stage30_11001;
reg    ap_block_pp0_stage31_11001;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_pp0_stage3_11001;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_pp0_stage7_11001;
reg    ap_block_pp0_stage8_11001;
reg    ap_block_pp0_stage9_11001;
reg    ap_block_pp0_stage10_11001;
wire   [0:0] icmp_ln721_fu_424_p2;
wire   [10:0] add_ln720_3_fu_435_p2;
wire   [5:0] add_ln721_fu_453_p2;
wire   [21:0] grp_fu_1202_p2;
wire   [63:0] zext_ln720_1_fu_482_p1;
wire   [63:0] add_ln720_1_fu_485_p2;
wire   [10:0] grp_fu_1202_p0;
wire   [10:0] grp_fu_1202_p1;
reg    grp_fu_1202_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter2_stage11;
reg    ap_idle_pp0_0to1;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [31:0] ap_NS_fsm;
reg    ap_idle_pp0_1to3;
reg    ap_done_pending_pp0;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage20_subdone;
reg    ap_block_pp0_stage21_subdone;
reg    ap_block_pp0_stage22_subdone;
reg    ap_block_pp0_stage23_subdone;
reg    ap_block_pp0_stage24_subdone;
reg    ap_block_pp0_stage25_subdone;
reg    ap_block_pp0_stage26_subdone;
reg    ap_block_pp0_stage27_subdone;
reg    ap_block_pp0_stage28_subdone;
reg    ap_block_pp0_stage29_subdone;
reg    ap_block_pp0_stage30_subdone;
wire    ap_ext_blocking_cur_n;
wire    ap_int_blocking_cur_n;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [21:0] grp_fu_1202_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 32'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

edgetracing_accel_mul_mul_11ns_11ns_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 22 ))
mul_mul_11ns_11ns_22_4_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1202_p0),
    .din1(grp_fu_1202_p1),
    .ce(grp_fu_1202_ce),
    .dout(grp_fu_1202_p2)
);

edgetracing_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage31),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage11_subdone) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage31)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage31_subdone) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage31_subdone) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage11_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage31_subdone) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter2_stage11) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage31_11001) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter2_stage11) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage31_11001) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_fu_302 <= 6'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln720_fu_410_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        c_fu_302 <= select_ln721_fu_459_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln720_reg_1254 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        first_iter_0_reg_362 <= 1'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        first_iter_0_reg_362 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_fu_310 <= 17'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln720_fu_410_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten_fu_310 <= add_ln720_fu_415_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r_fu_306 <= 11'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln720_fu_410_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        r_fu_306 <= select_ln720_fu_441_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln720_reg_1254 <= icmp_ln720_fu_410_p2;
        icmp_ln720_reg_1254_pp0_iter1_reg <= icmp_ln720_reg_1254;
        icmp_ln720_reg_1254_pp0_iter2_reg <= icmp_ln720_reg_1254_pp0_iter1_reg;
        icmp_ln720_reg_1254_pp0_iter3_reg <= icmp_ln720_reg_1254_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln720_fu_410_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        or_ln720_reg_1258 <= or_ln720_fu_429_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_cast_cast_reg_1244[10 : 0] <= p_cast_cast_fu_381_p1[10 : 0];
        zext_ln715_cast_reg_1249[5 : 0] <= zext_ln715_cast_fu_385_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln720_reg_1254 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        sext_ln720_reg_1272 <= sext_ln720_fu_500_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        sext_ln720_reg_1272_pp0_iter1_reg <= sext_ln720_reg_1272;
        sext_ln720_reg_1272_pp0_iter2_reg <= sext_ln720_reg_1272_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln720_reg_1254 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        sext_ln721_mid2_v_reg_1267 <= {{add_ln720_1_fu_485_p2[63:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        trunc_ln211_10_reg_1337 <= {{m_axi_gmem3_RDATA[89:88]}};
        trunc_ln211_11_reg_1342 <= {{m_axi_gmem3_RDATA[97:96]}};
        trunc_ln211_12_reg_1347 <= {{m_axi_gmem3_RDATA[105:104]}};
        trunc_ln211_13_reg_1352 <= {{m_axi_gmem3_RDATA[113:112]}};
        trunc_ln211_14_reg_1357 <= {{m_axi_gmem3_RDATA[121:120]}};
        trunc_ln211_15_reg_1362 <= {{m_axi_gmem3_RDATA[129:128]}};
        trunc_ln211_16_reg_1367 <= {{m_axi_gmem3_RDATA[137:136]}};
        trunc_ln211_17_reg_1372 <= {{m_axi_gmem3_RDATA[145:144]}};
        trunc_ln211_18_reg_1377 <= {{m_axi_gmem3_RDATA[153:152]}};
        trunc_ln211_19_reg_1382 <= {{m_axi_gmem3_RDATA[161:160]}};
        trunc_ln211_1_reg_1287 <= {{m_axi_gmem3_RDATA[9:8]}};
        trunc_ln211_20_reg_1387 <= {{m_axi_gmem3_RDATA[169:168]}};
        trunc_ln211_21_reg_1392 <= {{m_axi_gmem3_RDATA[177:176]}};
        trunc_ln211_22_reg_1397 <= {{m_axi_gmem3_RDATA[185:184]}};
        trunc_ln211_23_reg_1402 <= {{m_axi_gmem3_RDATA[193:192]}};
        trunc_ln211_24_reg_1407 <= {{m_axi_gmem3_RDATA[201:200]}};
        trunc_ln211_25_reg_1412 <= {{m_axi_gmem3_RDATA[209:208]}};
        trunc_ln211_26_reg_1417 <= {{m_axi_gmem3_RDATA[217:216]}};
        trunc_ln211_27_reg_1422 <= {{m_axi_gmem3_RDATA[225:224]}};
        trunc_ln211_28_reg_1427 <= {{m_axi_gmem3_RDATA[233:232]}};
        trunc_ln211_29_reg_1432 <= {{m_axi_gmem3_RDATA[241:240]}};
        trunc_ln211_2_reg_1292 <= {{m_axi_gmem3_RDATA[17:16]}};
        trunc_ln211_30_reg_1437 <= {{m_axi_gmem3_RDATA[249:248]}};
        trunc_ln211_3_reg_1297 <= {{m_axi_gmem3_RDATA[25:24]}};
        trunc_ln211_4_reg_1302 <= {{m_axi_gmem3_RDATA[33:32]}};
        trunc_ln211_5_reg_1307 <= {{m_axi_gmem3_RDATA[41:40]}};
        trunc_ln211_6_reg_1312 <= {{m_axi_gmem3_RDATA[49:48]}};
        trunc_ln211_7_reg_1317 <= {{m_axi_gmem3_RDATA[57:56]}};
        trunc_ln211_8_reg_1322 <= {{m_axi_gmem3_RDATA[65:64]}};
        trunc_ln211_9_reg_1327 <= {{m_axi_gmem3_RDATA[73:72]}};
        trunc_ln211_reg_1282 <= trunc_ln211_fu_504_p1;
        trunc_ln211_s_reg_1332 <= {{m_axi_gmem3_RDATA[81:80]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage31_subdone) & (icmp_ln720_reg_1254 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        ap_condition_exit_pp0_iter0_stage31 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage31 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_subdone) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        ap_condition_exit_pp0_iter2_stage11 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_subdone) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (icmp_ln720_reg_1254 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_mux_first_iter_0_phi_fu_366_p4 = 1'd0;
    end else begin
        ap_phi_mux_first_iter_0_phi_fu_366_p4 = first_iter_0_reg_362;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage31_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (icmp_ln720_reg_1254 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln720_reg_1258 == 1'd1))) begin
        gmem3_blk_n_AR = m_axi_gmem3_ARREADY;
    end else begin
        gmem3_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        gmem3_blk_n_R = m_axi_gmem3_RVALID;
    end else begin
        gmem3_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_1202_ce = 1'b1;
    end else begin
        grp_fu_1202_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_374_p2 = sext_ln720_reg_1272_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (icmp_ln720_reg_1254 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln720_reg_1258 == 1'd1))) begin
        grp_fu_374_p2 = sext_ln720_fu_500_p1;
    end else begin
        grp_fu_374_p2 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_predicate_op158_readreq_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        m_axi_gmem3_ARVALID = 1'b1;
    end else begin
        m_axi_gmem3_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        m_axi_gmem3_RREADY = 1'b1;
    end else begin
        m_axi_gmem3_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage31) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b0 == ap_block_pp0_stage30) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage29) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b0 == ap_block_pp0_stage28) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b0 == ap_block_pp0_stage27) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b0 == ap_block_pp0_stage26) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage25) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage24) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage23) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage22) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage21) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage20) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage19) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage18) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage15) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        p_dst1_data_blk_n = p_dst1_data_full_n;
    end else begin
        p_dst1_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_01001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        p_dst1_data_din = p_Result_30_fu_1190_p5;
    end else if (((1'b0 == ap_block_pp0_stage10_01001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        p_dst1_data_din = p_Result_29_fu_1178_p5;
    end else if (((1'b0 == ap_block_pp0_stage9_01001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        p_dst1_data_din = p_Result_28_fu_1166_p5;
    end else if (((1'b0 == ap_block_pp0_stage8_01001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        p_dst1_data_din = p_Result_27_fu_1154_p5;
    end else if (((1'b0 == ap_block_pp0_stage7_01001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        p_dst1_data_din = p_Result_26_fu_1142_p5;
    end else if (((1'b0 == ap_block_pp0_stage6_01001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        p_dst1_data_din = p_Result_25_fu_1130_p5;
    end else if (((1'b0 == ap_block_pp0_stage5_01001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        p_dst1_data_din = p_Result_24_fu_1118_p5;
    end else if (((1'b0 == ap_block_pp0_stage4_01001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        p_dst1_data_din = p_Result_23_fu_1106_p5;
    end else if (((1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        p_dst1_data_din = p_Result_22_fu_1094_p5;
    end else if (((1'b0 == ap_block_pp0_stage2_01001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_dst1_data_din = p_Result_21_fu_1082_p5;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_dst1_data_din = p_Result_20_fu_1070_p5;
    end else if (((1'b0 == ap_block_pp0_stage0_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_dst1_data_din = p_Result_19_fu_1058_p5;
    end else if (((1'b0 == ap_block_pp0_stage31_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        p_dst1_data_din = p_Result_18_fu_1046_p5;
    end else if (((1'b0 == ap_block_pp0_stage30_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30))) begin
        p_dst1_data_din = p_Result_17_fu_1034_p5;
    end else if (((1'b0 == ap_block_pp0_stage29_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29))) begin
        p_dst1_data_din = p_Result_16_fu_1022_p5;
    end else if (((1'b0 == ap_block_pp0_stage28_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
        p_dst1_data_din = p_Result_15_fu_1010_p5;
    end else if (((1'b0 == ap_block_pp0_stage27_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27))) begin
        p_dst1_data_din = p_Result_14_fu_998_p5;
    end else if (((1'b0 == ap_block_pp0_stage26_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26))) begin
        p_dst1_data_din = p_Result_13_fu_986_p5;
    end else if (((1'b0 == ap_block_pp0_stage25_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        p_dst1_data_din = p_Result_12_fu_974_p5;
    end else if (((1'b0 == ap_block_pp0_stage24_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        p_dst1_data_din = p_Result_11_fu_962_p5;
    end else if (((1'b0 == ap_block_pp0_stage23_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        p_dst1_data_din = p_Result_10_fu_950_p5;
    end else if (((1'b0 == ap_block_pp0_stage22_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        p_dst1_data_din = p_Result_9_fu_938_p5;
    end else if (((1'b0 == ap_block_pp0_stage21_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        p_dst1_data_din = p_Result_8_fu_926_p5;
    end else if (((1'b0 == ap_block_pp0_stage20_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        p_dst1_data_din = p_Result_7_fu_914_p5;
    end else if (((1'b0 == ap_block_pp0_stage19_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        p_dst1_data_din = p_Result_6_fu_902_p5;
    end else if (((1'b0 == ap_block_pp0_stage18_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        p_dst1_data_din = p_Result_5_fu_890_p5;
    end else if (((1'b0 == ap_block_pp0_stage17_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        p_dst1_data_din = p_Result_4_fu_878_p5;
    end else if (((1'b0 == ap_block_pp0_stage16_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        p_dst1_data_din = p_Result_3_fu_866_p5;
    end else if (((1'b0 == ap_block_pp0_stage15_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        p_dst1_data_din = p_Result_2_fu_854_p5;
    end else if (((1'b0 == ap_block_pp0_stage14_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        p_dst1_data_din = p_Result_1_fu_842_p5;
    end else if (((1'b0 == ap_block_pp0_stage13_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        p_dst1_data_din = p_Result_s_48_fu_830_p5;
    end else if (((1'b0 == ap_block_pp0_stage12_01001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        p_dst1_data_din = p_Result_s_fu_818_p5;
    end else begin
        p_dst1_data_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage31_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b0 == ap_block_pp0_stage30_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage29_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b0 == ap_block_pp0_stage28_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b0 == ap_block_pp0_stage27_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b0 == ap_block_pp0_stage26_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage25_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage24_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage23_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage22_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage21_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage20_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage19_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage18_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        p_dst1_data_write = 1'b1;
    end else begin
        p_dst1_data_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter2_stage11) & (ap_idle_pp0_0to1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln720_1_fu_485_p2 = (zext_ln720_1_fu_482_p1 + img_inp);

assign add_ln720_3_fu_435_p2 = (r_fu_306 + 11'd1);

assign add_ln720_fu_415_p2 = (indvar_flatten_fu_310 + 17'd1);

assign add_ln721_fu_453_p2 = (c_fu_302 + 6'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_01001 = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_01001 = (((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (m_axi_gmem3_RVALID == 1'b0)) | ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage11_11001 = (((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (m_axi_gmem3_RVALID == 1'b0)) | ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = (((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (m_axi_gmem3_RVALID == 1'b0)) | ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0)));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage18_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage21_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage21_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage21_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage22_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage22_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage22_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage24_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage24_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage24_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage25_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage25_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage25_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage26_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage26_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage26_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage27_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage27_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage27_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage28_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage28_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage28_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage29_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage29_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage29_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage30_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage30_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage30_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage31_01001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage31_11001 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage31_subdone = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)) | ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)) | ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_01001 = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_01001 = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((p_dst1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state100_pp0_stage3_iter3 = ((p_dst1_data_full_n == 1'b0) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state101_pp0_stage4_iter3 = ((p_dst1_data_full_n == 1'b0) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state102_pp0_stage5_iter3 = ((p_dst1_data_full_n == 1'b0) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state103_pp0_stage6_iter3 = ((p_dst1_data_full_n == 1'b0) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state104_pp0_stage7_iter3 = ((p_dst1_data_full_n == 1'b0) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state105_pp0_stage8_iter3 = ((p_dst1_data_full_n == 1'b0) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state106_pp0_stage9_iter3 = ((p_dst1_data_full_n == 1'b0) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state107_pp0_stage10_iter3 = ((p_dst1_data_full_n == 1'b0) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state108_pp0_stage11_iter3 = ((p_dst1_data_full_n == 1'b0) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage16_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage17_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage18_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage19_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage20_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage21_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage22_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage23_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage24_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage25_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage26_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage27_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage28_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage29_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage30_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage31_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((ap_predicate_op158_readreq_state6 == 1'b1) & (m_axi_gmem3_ARREADY == 1'b0));
end

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state76_pp0_stage11_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (m_axi_gmem3_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state77_pp0_stage12_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state78_pp0_stage13_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state79_pp0_stage14_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state80_pp0_stage15_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state81_pp0_stage16_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state82_pp0_stage17_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state83_pp0_stage18_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state84_pp0_stage19_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state85_pp0_stage20_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state86_pp0_stage21_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state87_pp0_stage22_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state88_pp0_stage23_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state89_pp0_stage24_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state90_pp0_stage25_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state91_pp0_stage26_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state92_pp0_stage27_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state93_pp0_stage28_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state94_pp0_stage29_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state95_pp0_stage30_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state96_pp0_stage31_iter2 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state97_pp0_stage0_iter3 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state98_pp0_stage1_iter3 = ((icmp_ln720_reg_1254_pp0_iter2_reg == 1'd0) & (p_dst1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state99_pp0_stage2_iter3 = ((p_dst1_data_full_n == 1'b0) & (icmp_ln720_reg_1254_pp0_iter3_reg == 1'd0));
end

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ext_blocking_cur_n = (gmem3_blk_n_R & gmem3_blk_n_AR);

assign ap_ext_blocking_n = (ap_ext_blocking_cur_n & 1'b1);

assign ap_int_blocking_cur_n = p_dst1_data_blk_n;

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage31;

always @ (*) begin
    ap_predicate_op158_readreq_state6 = ((icmp_ln720_reg_1254 == 1'd0) & (or_ln720_reg_1258 == 1'd1));
end

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign grp_fu_1202_p0 = grp_fu_1202_p00;

assign grp_fu_1202_p00 = select_ln720_fu_441_p3;

assign grp_fu_1202_p1 = p_cast_cast_reg_1244;

assign icmp_ln720_fu_410_p2 = ((indvar_flatten_fu_310 == bound) ? 1'b1 : 1'b0);

assign icmp_ln721_fu_424_p2 = ((c_fu_302 == packcols) ? 1'b1 : 1'b0);

assign m_axi_gmem3_ARADDR = grp_fu_374_p2;

assign m_axi_gmem3_ARBURST = 2'd0;

assign m_axi_gmem3_ARCACHE = 4'd0;

assign m_axi_gmem3_ARID = 1'd0;

assign m_axi_gmem3_ARLEN = zext_ln715_cast_reg_1249;

assign m_axi_gmem3_ARLOCK = 2'd0;

assign m_axi_gmem3_ARPROT = 3'd0;

assign m_axi_gmem3_ARQOS = 4'd0;

assign m_axi_gmem3_ARREGION = 4'd0;

assign m_axi_gmem3_ARSIZE = 3'd0;

assign m_axi_gmem3_ARUSER = 1'd0;

assign m_axi_gmem3_AWADDR = 64'd0;

assign m_axi_gmem3_AWBURST = 2'd0;

assign m_axi_gmem3_AWCACHE = 4'd0;

assign m_axi_gmem3_AWID = 1'd0;

assign m_axi_gmem3_AWLEN = 32'd0;

assign m_axi_gmem3_AWLOCK = 2'd0;

assign m_axi_gmem3_AWPROT = 3'd0;

assign m_axi_gmem3_AWQOS = 4'd0;

assign m_axi_gmem3_AWREGION = 4'd0;

assign m_axi_gmem3_AWSIZE = 3'd0;

assign m_axi_gmem3_AWUSER = 1'd0;

assign m_axi_gmem3_AWVALID = 1'b0;

assign m_axi_gmem3_BREADY = 1'b0;

assign m_axi_gmem3_WDATA = 256'd0;

assign m_axi_gmem3_WID = 1'd0;

assign m_axi_gmem3_WLAST = 1'b0;

assign m_axi_gmem3_WSTRB = 32'd0;

assign m_axi_gmem3_WUSER = 1'd0;

assign m_axi_gmem3_WVALID = 1'b0;

assign or_ln720_fu_429_p2 = (icmp_ln721_fu_424_p2 | ap_phi_mux_first_iter_0_phi_fu_366_p4);

assign p_Result_10_fu_950_p5 = {{ap_const_lv64_0[63:24]}, {trunc_ln211_10_reg_1337}, {ap_const_lv64_0[21:0]}};

assign p_Result_11_fu_962_p5 = {{ap_const_lv64_0[63:26]}, {trunc_ln211_11_reg_1342}, {ap_const_lv64_0[23:0]}};

assign p_Result_12_fu_974_p5 = {{ap_const_lv64_0[63:28]}, {trunc_ln211_12_reg_1347}, {ap_const_lv64_0[25:0]}};

assign p_Result_13_fu_986_p5 = {{ap_const_lv64_0[63:30]}, {trunc_ln211_13_reg_1352}, {ap_const_lv64_0[27:0]}};

assign p_Result_14_fu_998_p5 = {{ap_const_lv64_0[63:32]}, {trunc_ln211_14_reg_1357}, {ap_const_lv64_0[29:0]}};

assign p_Result_15_fu_1010_p5 = {{ap_const_lv64_0[63:34]}, {trunc_ln211_15_reg_1362}, {ap_const_lv64_0[31:0]}};

assign p_Result_16_fu_1022_p5 = {{ap_const_lv64_0[63:36]}, {trunc_ln211_16_reg_1367}, {ap_const_lv64_0[33:0]}};

assign p_Result_17_fu_1034_p5 = {{ap_const_lv64_0[63:38]}, {trunc_ln211_17_reg_1372}, {ap_const_lv64_0[35:0]}};

assign p_Result_18_fu_1046_p5 = {{ap_const_lv64_0[63:40]}, {trunc_ln211_18_reg_1377}, {ap_const_lv64_0[37:0]}};

assign p_Result_19_fu_1058_p5 = {{ap_const_lv64_0[63:42]}, {trunc_ln211_19_reg_1382}, {ap_const_lv64_0[39:0]}};

assign p_Result_1_fu_842_p5 = {{ap_const_lv64_0[63:6]}, {trunc_ln211_2_reg_1292}, {ap_const_lv64_0[3:0]}};

assign p_Result_20_fu_1070_p5 = {{ap_const_lv64_0[63:44]}, {trunc_ln211_20_reg_1387}, {ap_const_lv64_0[41:0]}};

assign p_Result_21_fu_1082_p5 = {{ap_const_lv64_0[63:46]}, {trunc_ln211_21_reg_1392}, {ap_const_lv64_0[43:0]}};

assign p_Result_22_fu_1094_p5 = {{ap_const_lv64_0[63:48]}, {trunc_ln211_22_reg_1397}, {ap_const_lv64_0[45:0]}};

assign p_Result_23_fu_1106_p5 = {{ap_const_lv64_0[63:50]}, {trunc_ln211_23_reg_1402}, {ap_const_lv64_0[47:0]}};

assign p_Result_24_fu_1118_p5 = {{ap_const_lv64_0[63:52]}, {trunc_ln211_24_reg_1407}, {ap_const_lv64_0[49:0]}};

assign p_Result_25_fu_1130_p5 = {{ap_const_lv64_0[63:54]}, {trunc_ln211_25_reg_1412}, {ap_const_lv64_0[51:0]}};

assign p_Result_26_fu_1142_p5 = {{ap_const_lv64_0[63:56]}, {trunc_ln211_26_reg_1417}, {ap_const_lv64_0[53:0]}};

assign p_Result_27_fu_1154_p5 = {{ap_const_lv64_0[63:58]}, {trunc_ln211_27_reg_1422}, {ap_const_lv64_0[55:0]}};

assign p_Result_28_fu_1166_p5 = {{ap_const_lv64_0[63:60]}, {trunc_ln211_28_reg_1427}, {ap_const_lv64_0[57:0]}};

assign p_Result_29_fu_1178_p5 = {{ap_const_lv64_0[63:62]}, {trunc_ln211_29_reg_1432}, {ap_const_lv64_0[59:0]}};

assign p_Result_2_fu_854_p5 = {{ap_const_lv64_0[63:8]}, {trunc_ln211_3_reg_1297}, {ap_const_lv64_0[5:0]}};

assign p_Result_30_fu_1190_p5 = {{trunc_ln211_30_reg_1437}, {ap_const_lv64_0[61:0]}};

assign p_Result_3_fu_866_p5 = {{ap_const_lv64_0[63:10]}, {trunc_ln211_4_reg_1302}, {ap_const_lv64_0[7:0]}};

assign p_Result_4_fu_878_p5 = {{ap_const_lv64_0[63:12]}, {trunc_ln211_5_reg_1307}, {ap_const_lv64_0[9:0]}};

assign p_Result_5_fu_890_p5 = {{ap_const_lv64_0[63:14]}, {trunc_ln211_6_reg_1312}, {ap_const_lv64_0[11:0]}};

assign p_Result_6_fu_902_p5 = {{ap_const_lv64_0[63:16]}, {trunc_ln211_7_reg_1317}, {ap_const_lv64_0[13:0]}};

assign p_Result_7_fu_914_p5 = {{ap_const_lv64_0[63:18]}, {trunc_ln211_8_reg_1322}, {ap_const_lv64_0[15:0]}};

assign p_Result_8_fu_926_p5 = {{ap_const_lv64_0[63:20]}, {trunc_ln211_9_reg_1327}, {ap_const_lv64_0[17:0]}};

assign p_Result_9_fu_938_p5 = {{ap_const_lv64_0[63:22]}, {trunc_ln211_s_reg_1332}, {ap_const_lv64_0[19:0]}};

assign p_Result_s_48_fu_830_p5 = {{ap_const_lv64_0[63:4]}, {trunc_ln211_1_reg_1287}, {ap_const_lv64_0[1:0]}};

assign p_Result_s_fu_818_p5 = {{ap_const_lv64_0[63:2]}, {trunc_ln211_reg_1282}};

assign p_cast_cast_fu_381_p1 = p_cast;

assign select_ln720_fu_441_p3 = ((icmp_ln721_fu_424_p2[0:0] == 1'b1) ? add_ln720_3_fu_435_p2 : r_fu_306);

assign select_ln721_fu_459_p3 = ((icmp_ln721_fu_424_p2[0:0] == 1'b1) ? 6'd1 : add_ln721_fu_453_p2);

assign sext_ln720_fu_500_p1 = $signed(sext_ln721_mid2_v_reg_1267);

assign trunc_ln211_fu_504_p1 = m_axi_gmem3_RDATA[1:0];

assign zext_ln715_cast_fu_385_p1 = zext_ln715;

assign zext_ln720_1_fu_482_p1 = grp_fu_1202_p2;

always @ (posedge ap_clk) begin
    p_cast_cast_reg_1244[21:11] <= 11'b00000000000;
    zext_ln715_cast_reg_1249[31:6] <= 26'b00000000000000000000000000;
end

endmodule //edgetracing_accel_edgetracing_accel_Pipeline_VITIS_LOOP_721_2
