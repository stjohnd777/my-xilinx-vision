// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module canny_accel_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        nms_mat_data10_dout,
        nms_mat_data10_num_data_valid,
        nms_mat_data10_fifo_cap,
        nms_mat_data10_empty_n,
        nms_mat_data10_read,
        dst_mat_data2_din,
        dst_mat_data2_num_data_valid,
        dst_mat_data2_fifo_cap,
        dst_mat_data2_full_n,
        dst_mat_data2_write,
        imgheight_dout,
        imgheight_num_data_valid,
        imgheight_fifo_cap,
        imgheight_empty_n,
        imgheight_read,
        imgwidth_dout,
        imgwidth_num_data_valid,
        imgwidth_fifo_cap,
        imgwidth_empty_n,
        imgwidth_read,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [1:0] nms_mat_data10_dout;
input  [1:0] nms_mat_data10_num_data_valid;
input  [1:0] nms_mat_data10_fifo_cap;
input   nms_mat_data10_empty_n;
output   nms_mat_data10_read;
output  [63:0] dst_mat_data2_din;
input  [1:0] dst_mat_data2_num_data_valid;
input  [1:0] dst_mat_data2_fifo_cap;
input   dst_mat_data2_full_n;
output   dst_mat_data2_write;
input  [15:0] imgheight_dout;
input  [1:0] imgheight_num_data_valid;
input  [1:0] imgheight_fifo_cap;
input   imgheight_empty_n;
output   imgheight_read;
input  [15:0] imgwidth_dout;
input  [1:0] imgwidth_num_data_valid;
input  [1:0] imgwidth_fifo_cap;
input   imgwidth_empty_n;
output   imgwidth_read;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg nms_mat_data10_read;
reg dst_mat_data2_write;
reg imgheight_read;
reg imgwidth_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    imgheight_blk_n;
reg    imgwidth_blk_n;
reg   [15:0] col_loop_count_ac_reg_207;
reg   [15:0] imgheight_read_reg_212;
wire   [16:0] npcCols_fu_139_p3;
reg   [16:0] npcCols_reg_217;
wire   [16:0] tmp_3_fu_181_p3;
reg   [16:0] tmp_3_reg_225;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln122_fu_155_p2;
wire    grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_start;
wire    grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_done;
wire    grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_idle;
wire    grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_ready;
wire   [63:0] grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_dst_mat_data2_din;
wire    grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_dst_mat_data2_write;
wire    grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_nms_mat_data10_read;
wire   [63:0] grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_val_V_98_out_o;
wire    grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_val_V_98_out_o_ap_vld;
wire    grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_ext_blocking_n;
wire    grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_str_blocking_n;
wire    grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_int_blocking_n;
reg    grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_start_reg;
wire    ap_CS_fsm_state3;
reg   [63:0] val_V_fu_66;
reg   [15:0] i_fu_70;
wire   [15:0] i_2_fu_160_p2;
reg    ap_block_state1;
wire   [10:0] tmp_fu_105_p4;
wire   [15:0] and_ln_fu_115_p3;
wire   [16:0] zext_ln110_1_fu_123_p1;
wire   [4:0] trunc_ln110_fu_101_p1;
wire   [0:0] icmp_ln111_fu_133_p2;
wire   [16:0] npcColsNxt_fu_127_p2;
wire   [16:0] zext_ln110_fu_97_p1;
wire   [16:0] add_ln129_fu_166_p2;
wire   [11:0] tmp_2_fu_171_p4;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_int_blocking_cur_n;
reg    ap_ext_blocking_sub_n;
reg    ap_wait_0;
reg    ap_sub_ext_blocking_0;
reg    ap_str_blocking_sub_n;
reg    ap_sub_str_blocking_0;
reg    ap_int_blocking_sub_n;
reg    ap_sub_int_blocking_0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_start_reg = 1'b0;
end

canny_accel_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_start),
    .ap_done(grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_done),
    .ap_idle(grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_idle),
    .ap_ready(grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_ready),
    .dst_mat_data2_din(grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_dst_mat_data2_din),
    .dst_mat_data2_num_data_valid(2'd0),
    .dst_mat_data2_fifo_cap(2'd0),
    .dst_mat_data2_full_n(dst_mat_data2_full_n),
    .dst_mat_data2_write(grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_dst_mat_data2_write),
    .empty(tmp_3_reg_225),
    .nms_mat_data10_dout(nms_mat_data10_dout),
    .nms_mat_data10_num_data_valid(2'd0),
    .nms_mat_data10_fifo_cap(2'd0),
    .nms_mat_data10_empty_n(nms_mat_data10_empty_n),
    .nms_mat_data10_read(grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_nms_mat_data10_read),
    .zext_ln108(col_loop_count_ac_reg_207),
    .val_V_98_out_i(val_V_fu_66),
    .val_V_98_out_o(grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_val_V_98_out_o),
    .val_V_98_out_o_ap_vld(grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_val_V_98_out_o_ap_vld),
    .ap_ext_blocking_n(grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_str_blocking_n),
    .ap_int_blocking_n(grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_int_blocking_n)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln122_fu_155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln122_fu_155_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_start_reg <= 1'b1;
        end else if ((grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_ready == 1'b1)) begin
            grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (imgwidth_empty_n == 1'b0) | (imgheight_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_70 <= 16'd0;
    end else if (((icmp_ln122_fu_155_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_fu_70 <= i_2_fu_160_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        col_loop_count_ac_reg_207 <= imgwidth_dout;
        imgheight_read_reg_212 <= imgheight_dout;
        npcCols_reg_217 <= npcCols_fu_139_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_fu_155_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_3_reg_225[16 : 5] <= tmp_3_fu_181_p3[16 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_val_V_98_out_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        val_V_fu_66 <= grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_val_V_98_out_o;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (imgwidth_empty_n == 1'b0) | (imgheight_empty_n == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_fu_155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_wait_0 & ap_sub_ext_blocking_0) == 1'b1)) begin
        ap_ext_blocking_sub_n = 1'b0;
    end else begin
        ap_ext_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_wait_0 & ap_sub_int_blocking_0) == 1'b1)) begin
        ap_int_blocking_sub_n = 1'b0;
    end else begin
        ap_int_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln122_fu_155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_wait_0 & ap_sub_str_blocking_0) == 1'b1)) begin
        ap_str_blocking_sub_n = 1'b0;
    end else begin
        ap_str_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if ((grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_0 = 1'b1;
    end else begin
        ap_sub_ext_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_0 = 1'b1;
    end else begin
        ap_sub_int_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_0 = 1'b1;
    end else begin
        ap_sub_str_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state3 == ap_CS_fsm)) begin
        ap_wait_0 = 1'b1;
    end else begin
        ap_wait_0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dst_mat_data2_write = grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_dst_mat_data2_write;
    end else begin
        dst_mat_data2_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgheight_blk_n = imgheight_empty_n;
    end else begin
        imgheight_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (imgwidth_empty_n == 1'b0) | (imgheight_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgheight_read = 1'b1;
    end else begin
        imgheight_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgwidth_blk_n = imgwidth_empty_n;
    end else begin
        imgwidth_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (imgwidth_empty_n == 1'b0) | (imgheight_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgwidth_read = 1'b1;
    end else begin
        imgwidth_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        nms_mat_data10_read = grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_nms_mat_data10_read;
    end else begin
        nms_mat_data10_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (imgwidth_empty_n == 1'b0) | (imgheight_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln122_fu_155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln129_fu_166_p2 = (npcCols_reg_217 + 17'd31);

assign and_ln_fu_115_p3 = {{tmp_fu_105_p4}, {5'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (imgwidth_empty_n == 1'b0) | (imgheight_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ext_blocking_n = (ap_ext_blocking_sub_n & 1'b1);

assign ap_int_blocking_cur_n = (imgwidth_blk_n & imgheight_blk_n);

assign ap_int_blocking_n = (ap_int_blocking_sub_n & ap_int_blocking_cur_n);

assign ap_str_blocking_n = (ap_str_blocking_sub_n & 1'b1);

assign dst_mat_data2_din = grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_dst_mat_data2_din;

assign grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_start = grp_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_Pipeline_colLoop_fu_86_ap_start_reg;

assign i_2_fu_160_p2 = (i_fu_70 + 16'd1);

assign icmp_ln111_fu_133_p2 = ((trunc_ln110_fu_101_p1 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_155_p2 = ((i_fu_70 == imgheight_read_reg_212) ? 1'b1 : 1'b0);

assign npcColsNxt_fu_127_p2 = (zext_ln110_1_fu_123_p1 + 17'd32);

assign npcCols_fu_139_p3 = ((icmp_ln111_fu_133_p2[0:0] == 1'b1) ? npcColsNxt_fu_127_p2 : zext_ln110_fu_97_p1);

assign tmp_2_fu_171_p4 = {{add_ln129_fu_166_p2[16:5]}};

assign tmp_3_fu_181_p3 = {{tmp_2_fu_171_p4}, {5'd0}};

assign tmp_fu_105_p4 = {{imgwidth_dout[15:5]}};

assign trunc_ln110_fu_101_p1 = imgwidth_dout[4:0];

assign zext_ln110_1_fu_123_p1 = and_ln_fu_115_p3;

assign zext_ln110_fu_97_p1 = imgwidth_dout;

always @ (posedge ap_clk) begin
    tmp_3_reg_225[4:0] <= 5'b00000;
end

endmodule //canny_accel_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_s
