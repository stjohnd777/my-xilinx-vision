// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sobel_accel_xFSobelFilter3x3_Pipeline_Col_Loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_mat_data1_dout,
        in_mat_data1_num_data_valid,
        in_mat_data1_fifo_cap,
        in_mat_data1_empty_n,
        in_mat_data1_read,
        p_dstgx_data2_din,
        p_dstgx_data2_num_data_valid,
        p_dstgx_data2_fifo_cap,
        p_dstgx_data2_full_n,
        p_dstgx_data2_write,
        p_dstgy_data3_din,
        p_dstgy_data3_num_data_valid,
        p_dstgy_data3_fifo_cap,
        p_dstgy_data3_full_n,
        p_dstgy_data3_write,
        img_width,
        tp_V,
        mid_V,
        bottom_V,
        row_ind_V_cast,
        buf_V_2_address0,
        buf_V_2_ce0,
        buf_V_2_q0,
        buf_V_2_address1,
        buf_V_2_ce1,
        buf_V_2_we1,
        buf_V_2_d1,
        buf_V_1_address0,
        buf_V_1_ce0,
        buf_V_1_q0,
        buf_V_1_address1,
        buf_V_1_ce1,
        buf_V_1_we1,
        buf_V_1_d1,
        buf_V_address0,
        buf_V_ce0,
        buf_V_q0,
        buf_V_address1,
        buf_V_ce1,
        buf_V_we1,
        buf_V_d1,
        cmp_i_i603_i,
        src_buf3_V_1_out,
        src_buf3_V_1_out_ap_vld,
        p_Val2_2_out,
        p_Val2_2_out_ap_vld,
        p_Val2_1_out,
        p_Val2_1_out_ap_vld,
        src_buf1_V_1_out,
        src_buf1_V_1_out_ap_vld,
        p_Val2_out,
        p_Val2_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] in_mat_data1_dout;
input  [1:0] in_mat_data1_num_data_valid;
input  [1:0] in_mat_data1_fifo_cap;
input   in_mat_data1_empty_n;
output   in_mat_data1_read;
output  [7:0] p_dstgx_data2_din;
input  [1:0] p_dstgx_data2_num_data_valid;
input  [1:0] p_dstgx_data2_fifo_cap;
input   p_dstgx_data2_full_n;
output   p_dstgx_data2_write;
output  [7:0] p_dstgy_data3_din;
input  [1:0] p_dstgy_data3_num_data_valid;
input  [1:0] p_dstgy_data3_fifo_cap;
input   p_dstgy_data3_full_n;
output   p_dstgy_data3_write;
input  [15:0] img_width;
input  [1:0] tp_V;
input  [1:0] mid_V;
input  [1:0] bottom_V;
input  [1:0] row_ind_V_cast;
output  [11:0] buf_V_2_address0;
output   buf_V_2_ce0;
input  [7:0] buf_V_2_q0;
output  [11:0] buf_V_2_address1;
output   buf_V_2_ce1;
output   buf_V_2_we1;
output  [7:0] buf_V_2_d1;
output  [11:0] buf_V_1_address0;
output   buf_V_1_ce0;
input  [7:0] buf_V_1_q0;
output  [11:0] buf_V_1_address1;
output   buf_V_1_ce1;
output   buf_V_1_we1;
output  [7:0] buf_V_1_d1;
output  [11:0] buf_V_address0;
output   buf_V_ce0;
input  [7:0] buf_V_q0;
output  [11:0] buf_V_address1;
output   buf_V_ce1;
output   buf_V_we1;
output  [7:0] buf_V_d1;
input  [0:0] cmp_i_i603_i;
output  [7:0] src_buf3_V_1_out;
output   src_buf3_V_1_out_ap_vld;
output  [7:0] p_Val2_2_out;
output   p_Val2_2_out_ap_vld;
output  [7:0] p_Val2_1_out;
output   p_Val2_1_out_ap_vld;
output  [7:0] src_buf1_V_1_out;
output   src_buf1_V_1_out_ap_vld;
output  [7:0] p_Val2_out;
output   p_Val2_out_ap_vld;

reg ap_idle;
reg in_mat_data1_read;
reg p_dstgx_data2_write;
reg p_dstgy_data3_write;
reg buf_V_2_ce0;
reg buf_V_2_ce1;
reg buf_V_2_we1;
reg[7:0] buf_V_2_d1;
reg buf_V_1_ce0;
reg buf_V_1_ce1;
reg buf_V_1_we1;
reg[7:0] buf_V_1_d1;
reg buf_V_ce0;
reg buf_V_ce1;
reg buf_V_we1;
reg[7:0] buf_V_d1;
reg src_buf3_V_1_out_ap_vld;
reg p_Val2_2_out_ap_vld;
reg p_Val2_1_out_ap_vld;
reg src_buf1_V_1_out_ap_vld;
reg p_Val2_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln1027_reg_542;
wire   [0:0] cmp_i_i603_i_read_reg_513;
reg    ap_predicate_op59_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg   [0:0] icmp_ln1019_reg_561;
reg   [0:0] icmp_ln1019_reg_561_pp0_iter3_reg;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1027_fu_322_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    in_mat_data1_blk_n;
wire    ap_block_pp0_stage0;
reg    p_dstgx_data2_blk_n;
reg    p_dstgy_data3_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [1:0] row_ind_V_cast_read_reg_517;
wire   [1:0] bottom_V_read_reg_521;
reg   [12:0] col_V_1_reg_536;
reg   [0:0] icmp_ln1027_reg_542_pp0_iter1_reg;
reg   [0:0] icmp_ln1027_reg_542_pp0_iter2_reg;
reg   [11:0] buf_V_addr_reg_546;
reg   [11:0] buf_V_1_addr_reg_551;
reg   [11:0] buf_V_2_addr_reg_556;
wire   [0:0] icmp_ln1019_fu_345_p2;
reg   [0:0] icmp_ln1019_reg_561_pp0_iter2_reg;
reg   [7:0] GradientValuesX_V_reg_565;
reg   [7:0] GradientValuesY_V_reg_570;
reg    ap_condition_exit_pp0_iter3_stage0;
wire    call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_ready;
wire   [7:0] call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_return_0;
wire   [7:0] call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_return_1;
wire   [7:0] src_buf1_V_fu_375_p5;
wire   [7:0] src_buf2_V_1_fu_387_p5;
wire   [7:0] src_buf3_V_fu_399_p5;
wire   [63:0] zext_ln541_fu_339_p1;
reg   [12:0] col_V_fu_92;
wire   [12:0] col_V_2_fu_328_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_col_V_1;
reg   [7:0] src_buf1_V_2_fu_96;
reg   [7:0] src_buf2_V_2_fu_100;
reg   [7:0] src_buf3_V_2_fu_104;
reg   [7:0] src_buf2_V_fu_108;
reg   [7:0] src_buf1_V_1_fu_112;
reg   [7:0] src_buf3_V_1_fu_116;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] zext_ln1027_fu_318_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_258;
reg    ap_condition_441;
reg    ap_condition_445;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
end

sobel_accel_xFSobel3x3_1_1_0_0_s call_ret_xFSobel3x3_1_1_0_0_s_fu_268(
    .ap_ready(call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_ready),
    .p_read2(src_buf1_V_2_fu_96),
    .p_read5(src_buf1_V_1_fu_112),
    .p_read6(src_buf1_V_fu_375_p5),
    .p_read7(src_buf2_V_2_fu_100),
    .p_read8(src_buf2_V_1_fu_387_p5),
    .p_read9(src_buf3_V_2_fu_104),
    .p_read10(src_buf3_V_1_fu_116),
    .p_read11(src_buf3_V_fu_399_p5),
    .ap_return_0(call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_return_0),
    .ap_return_1(call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_return_1)
);

sobel_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U88(
    .din0(buf_V_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(tp_V),
    .dout(src_buf1_V_fu_375_p5)
);

sobel_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U89(
    .din0(buf_V_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(mid_V),
    .dout(src_buf2_V_1_fu_387_p5)
);

sobel_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U90(
    .din0(buf_V_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(bottom_V),
    .dout(src_buf3_V_fu_399_p5)
);

sobel_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter3_stage0)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1027_fu_322_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            col_V_fu_92 <= col_V_2_fu_328_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            col_V_fu_92 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf1_V_1_fu_112 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_542_pp0_iter2_reg == 1'd1))) begin
            src_buf1_V_1_fu_112 <= src_buf1_V_fu_375_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf1_V_2_fu_96 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_542_pp0_iter2_reg == 1'd1))) begin
            src_buf1_V_2_fu_96 <= src_buf1_V_1_fu_112;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf2_V_2_fu_100 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_542_pp0_iter2_reg == 1'd1))) begin
            src_buf2_V_2_fu_100 <= src_buf2_V_fu_108;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf2_V_fu_108 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_542_pp0_iter2_reg == 1'd1))) begin
            src_buf2_V_fu_108 <= src_buf2_V_1_fu_387_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf3_V_1_fu_116 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_542_pp0_iter2_reg == 1'd1))) begin
            src_buf3_V_1_fu_116 <= src_buf3_V_fu_399_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf3_V_2_fu_104 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_542_pp0_iter2_reg == 1'd1))) begin
            src_buf3_V_2_fu_104 <= src_buf3_V_1_fu_116;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_542_pp0_iter2_reg == 1'd1))) begin
        GradientValuesX_V_reg_565 <= call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_return_0;
        GradientValuesY_V_reg_570 <= call_ret_xFSobel3x3_1_1_0_0_s_fu_268_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        col_V_1_reg_536 <= ap_sig_allocacmp_col_V_1;
        icmp_ln1027_reg_542 <= icmp_ln1027_fu_322_p2;
        icmp_ln1027_reg_542_pp0_iter1_reg <= icmp_ln1027_reg_542;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln1019_reg_561_pp0_iter2_reg <= icmp_ln1019_reg_561;
        icmp_ln1019_reg_561_pp0_iter3_reg <= icmp_ln1019_reg_561_pp0_iter2_reg;
        icmp_ln1027_reg_542_pp0_iter2_reg <= icmp_ln1027_reg_542_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_542 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_V_1_addr_reg_551 <= zext_ln541_fu_339_p1;
        buf_V_2_addr_reg_556 <= zext_ln541_fu_339_p1;
        buf_V_addr_reg_546 <= zext_ln541_fu_339_p1;
        icmp_ln1019_reg_561 <= icmp_ln1019_fu_345_p2;
    end
end

always @ (*) begin
    if (((icmp_ln1027_fu_322_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_542_pp0_iter2_reg == 1'd0))) begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_col_V_1 = 13'd0;
    end else begin
        ap_sig_allocacmp_col_V_1 = col_V_fu_92;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_V_1_ce0 = 1'b1;
    end else begin
        buf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i603_i == 1'd1) & (icmp_ln1027_reg_542 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (row_ind_V_cast_read_reg_517 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i603_i_read_reg_513 == 1'd0) & (icmp_ln1027_reg_542 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (bottom_V_read_reg_521 == 2'd1)))) begin
        buf_V_1_ce1 = 1'b1;
    end else begin
        buf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_258)) begin
        if (((cmp_i_i603_i == 1'd1) & (row_ind_V_cast_read_reg_517 == 2'd1))) begin
            buf_V_1_d1 = in_mat_data1_dout;
        end else if (((cmp_i_i603_i_read_reg_513 == 1'd0) & (bottom_V_read_reg_521 == 2'd1))) begin
            buf_V_1_d1 = 8'd0;
        end else begin
            buf_V_1_d1 = 'bx;
        end
    end else begin
        buf_V_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i603_i == 1'd1) & (icmp_ln1027_reg_542 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (row_ind_V_cast_read_reg_517 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i603_i_read_reg_513 == 1'd0) & (icmp_ln1027_reg_542 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (bottom_V_read_reg_521 == 2'd1)))) begin
        buf_V_1_we1 = 1'b1;
    end else begin
        buf_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_V_2_ce0 = 1'b1;
    end else begin
        buf_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(row_ind_V_cast_read_reg_517 == 2'd0) & ~(row_ind_V_cast_read_reg_517 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i603_i == 1'd1) & (icmp_ln1027_reg_542 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(bottom_V_read_reg_521 == 2'd0) & ~(bottom_V_read_reg_521 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i603_i_read_reg_513 == 1'd0) & (icmp_ln1027_reg_542 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_V_2_ce1 = 1'b1;
    end else begin
        buf_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_258)) begin
        if ((1'b1 == ap_condition_445)) begin
            buf_V_2_d1 = in_mat_data1_dout;
        end else if ((1'b1 == ap_condition_441)) begin
            buf_V_2_d1 = 8'd0;
        end else begin
            buf_V_2_d1 = 'bx;
        end
    end else begin
        buf_V_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(row_ind_V_cast_read_reg_517 == 2'd0) & ~(row_ind_V_cast_read_reg_517 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i603_i == 1'd1) & (icmp_ln1027_reg_542 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(bottom_V_read_reg_521 == 2'd0) & ~(bottom_V_read_reg_521 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i603_i_read_reg_513 == 1'd0) & (icmp_ln1027_reg_542 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_V_2_we1 = 1'b1;
    end else begin
        buf_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_V_ce0 = 1'b1;
    end else begin
        buf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i603_i == 1'd1) & (icmp_ln1027_reg_542 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (row_ind_V_cast_read_reg_517 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i603_i_read_reg_513 == 1'd0) & (icmp_ln1027_reg_542 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (bottom_V_read_reg_521 == 2'd0)))) begin
        buf_V_ce1 = 1'b1;
    end else begin
        buf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_258)) begin
        if (((cmp_i_i603_i == 1'd1) & (row_ind_V_cast_read_reg_517 == 2'd0))) begin
            buf_V_d1 = in_mat_data1_dout;
        end else if (((cmp_i_i603_i_read_reg_513 == 1'd0) & (bottom_V_read_reg_521 == 2'd0))) begin
            buf_V_d1 = 8'd0;
        end else begin
            buf_V_d1 = 'bx;
        end
    end else begin
        buf_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i603_i == 1'd1) & (icmp_ln1027_reg_542 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (row_ind_V_cast_read_reg_517 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i603_i_read_reg_513 == 1'd0) & (icmp_ln1027_reg_542 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (bottom_V_read_reg_521 == 2'd0)))) begin
        buf_V_we1 = 1'b1;
    end else begin
        buf_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op59_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_mat_data1_blk_n = in_mat_data1_empty_n;
    end else begin
        in_mat_data1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op59_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_mat_data1_read = 1'b1;
    end else begin
        in_mat_data1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_542_pp0_iter2_reg == 1'd0))) begin
        p_Val2_1_out_ap_vld = 1'b1;
    end else begin
        p_Val2_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_542_pp0_iter2_reg == 1'd0))) begin
        p_Val2_2_out_ap_vld = 1'b1;
    end else begin
        p_Val2_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_542_pp0_iter2_reg == 1'd0))) begin
        p_Val2_out_ap_vld = 1'b1;
    end else begin
        p_Val2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1019_reg_561_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        p_dstgx_data2_blk_n = p_dstgx_data2_full_n;
    end else begin
        p_dstgx_data2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_reg_561_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        p_dstgx_data2_write = 1'b1;
    end else begin
        p_dstgx_data2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1019_reg_561_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        p_dstgy_data3_blk_n = p_dstgy_data3_full_n;
    end else begin
        p_dstgy_data3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1019_reg_561_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        p_dstgy_data3_write = 1'b1;
    end else begin
        p_dstgy_data3_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_542_pp0_iter2_reg == 1'd0))) begin
        src_buf1_V_1_out_ap_vld = 1'b1;
    end else begin
        src_buf1_V_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_542_pp0_iter2_reg == 1'd0))) begin
        src_buf3_V_1_out_ap_vld = 1'b1;
    end else begin
        src_buf3_V_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (((p_dstgy_data3_full_n == 1'b0) & (icmp_ln1019_reg_561_pp0_iter3_reg == 1'd0)) | ((icmp_ln1019_reg_561_pp0_iter3_reg == 1'd0) & (p_dstgx_data2_full_n == 1'b0)))) | ((ap_predicate_op59_read_state2 == 1'b1) & (in_mat_data1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (((p_dstgy_data3_full_n == 1'b0) & (icmp_ln1019_reg_561_pp0_iter3_reg == 1'd0)) | ((icmp_ln1019_reg_561_pp0_iter3_reg == 1'd0) & (p_dstgx_data2_full_n == 1'b0)))) | ((ap_predicate_op59_read_state2 == 1'b1) & (in_mat_data1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (((p_dstgy_data3_full_n == 1'b0) & (icmp_ln1019_reg_561_pp0_iter3_reg == 1'd0)) | ((icmp_ln1019_reg_561_pp0_iter3_reg == 1'd0) & (p_dstgx_data2_full_n == 1'b0)))) | ((ap_predicate_op59_read_state2 == 1'b1) & (in_mat_data1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op59_read_state2 == 1'b1) & (in_mat_data1_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = (((p_dstgy_data3_full_n == 1'b0) & (icmp_ln1019_reg_561_pp0_iter3_reg == 1'd0)) | ((icmp_ln1019_reg_561_pp0_iter3_reg == 1'd0) & (p_dstgx_data2_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_258 = ((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_542 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_441 = (~(bottom_V_read_reg_521 == 2'd0) & ~(bottom_V_read_reg_521 == 2'd1) & (cmp_i_i603_i_read_reg_513 == 1'd0));
end

always @ (*) begin
    ap_condition_445 = (~(row_ind_V_cast_read_reg_517 == 2'd0) & ~(row_ind_V_cast_read_reg_517 == 2'd1) & (cmp_i_i603_i == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op59_read_state2 = ((cmp_i_i603_i == 1'd1) & (icmp_ln1027_reg_542 == 1'd1));
end

assign bottom_V_read_reg_521 = bottom_V;

assign buf_V_1_address0 = buf_V_1_addr_reg_551;

assign buf_V_1_address1 = zext_ln541_fu_339_p1;

assign buf_V_2_address0 = buf_V_2_addr_reg_556;

assign buf_V_2_address1 = zext_ln541_fu_339_p1;

assign buf_V_address0 = buf_V_addr_reg_546;

assign buf_V_address1 = zext_ln541_fu_339_p1;

assign cmp_i_i603_i_read_reg_513 = cmp_i_i603_i;

assign col_V_2_fu_328_p2 = (ap_sig_allocacmp_col_V_1 + 13'd1);

assign icmp_ln1019_fu_345_p2 = ((col_V_1_reg_536 == 13'd0) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_322_p2 = ((zext_ln1027_fu_318_p1 < img_width) ? 1'b1 : 1'b0);

assign p_Val2_1_out = src_buf2_V_2_fu_100;

assign p_Val2_2_out = src_buf3_V_2_fu_104;

assign p_Val2_out = src_buf1_V_2_fu_96;

assign p_dstgx_data2_din = GradientValuesX_V_reg_565;

assign p_dstgy_data3_din = GradientValuesY_V_reg_570;

assign row_ind_V_cast_read_reg_517 = row_ind_V_cast;

assign src_buf1_V_1_out = src_buf1_V_1_fu_112;

assign src_buf3_V_1_out = src_buf3_V_1_fu_116;

assign zext_ln1027_fu_318_p1 = ap_sig_allocacmp_col_V_1;

assign zext_ln541_fu_339_p1 = col_V_1_reg_536;

endmodule //sobel_accel_xFSobelFilter3x3_Pipeline_Col_Loop
