-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fast_accel_xFfastnms_0_2160_3840_0_1_2_2_1_3841_3_9_4_Pipeline_Col_Loop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_dst_data1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    p_dst_data1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    p_dst_data1_empty_n : IN STD_LOGIC;
    p_dst_data1_read : OUT STD_LOGIC;
    imgOutput_data2_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    imgOutput_data2_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    imgOutput_data2_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    imgOutput_data2_full_n : IN STD_LOGIC;
    imgOutput_data2_write : OUT STD_LOGIC;
    img_width_load : IN STD_LOGIC_VECTOR (15 downto 0);
    buf_V_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    buf_V_2_ce0 : OUT STD_LOGIC;
    buf_V_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    buf_V_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    buf_V_2_ce1 : OUT STD_LOGIC;
    buf_V_2_we1 : OUT STD_LOGIC;
    buf_V_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    buf_V_ce0 : OUT STD_LOGIC;
    buf_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    buf_V_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    buf_V_ce1 : OUT STD_LOGIC;
    buf_V_we1 : OUT STD_LOGIC;
    buf_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf_V_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    buf_V_1_ce0 : OUT STD_LOGIC;
    buf_V_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    buf_V_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    buf_V_1_ce1 : OUT STD_LOGIC;
    buf_V_1_we1 : OUT STD_LOGIC;
    buf_V_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    row_ind_V_7 : IN STD_LOGIC_VECTOR (12 downto 0);
    row_ind_V_8 : IN STD_LOGIC_VECTOR (12 downto 0);
    row_ind_V_9 : IN STD_LOGIC_VECTOR (12 downto 0);
    sub_i214_i_cast : IN STD_LOGIC_VECTOR (1 downto 0);
    row_ind_V_7_cast : IN STD_LOGIC_VECTOR (1 downto 0);
    spec_select51 : IN STD_LOGIC_VECTOR (0 downto 0);
    row_ind_V_8_cast : IN STD_LOGIC_VECTOR (1 downto 0);
    spec_select55 : IN STD_LOGIC_VECTOR (0 downto 0);
    row_ind_V_9_cast : IN STD_LOGIC_VECTOR (1 downto 0);
    spec_select59 : IN STD_LOGIC_VECTOR (0 downto 0);
    cmp_i_i322_i : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of fast_accel_xFfastnms_0_2160_3840_0_1_2_2_1_3841_3_9_4_Pipeline_Col_Loop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln1027_reg_750 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln666_reg_761 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op53_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal icmp_ln1027_reg_750_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1031_reg_780 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1031_reg_780_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op117_write_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln1027_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal p_dst_data1_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal imgOutput_data2_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal row_ind_V_9_cast_read_reg_698 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_V_reg_743 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_V_reg_743_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln1027_reg_750_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_750_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_1_fu_366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_1_reg_754 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_1_reg_754_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_1_reg_754_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln666_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1031_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf_V_17_reg_784 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_16_reg_790 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_15_reg_804 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_18_fu_487_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_18_reg_810 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_19_fu_494_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_19_reg_816 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_20_fu_501_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_20_reg_822 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_condition_exit_pp0_iter3_stage0 : STD_LOGIC;
    signal ap_phi_reg_pp0_iter0_src_buf_V_14_reg_285 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_src_buf_V_14_reg_285 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_src_buf_V_14_reg_285 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_src_buf_V_14_reg_285 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_src_buf_V_14_reg_285 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_src_buf_V_13_reg_294 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_src_buf_V_13_reg_294 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_src_buf_V_13_reg_294 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_src_buf_V_13_reg_294 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_src_buf_V_13_reg_294 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_src_buf_V_12_reg_303 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_src_buf_V_12_reg_303 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_src_buf_V_12_reg_303 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_src_buf_V_12_reg_303 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_src_buf_V_12_reg_303 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln541_fu_383_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_i131_i_fu_389_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal col_V_4_fu_94 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_V_5_fu_360_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_col_V : STD_LOGIC_VECTOR (12 downto 0);
    signal src_buf_V_fu_98 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_3_fu_102 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_5_fu_106 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_1_fu_110 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_4_fu_114 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_2_fu_118 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln1027_fu_350_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_409_p5 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_5_fu_421_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_fu_421_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_433_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_451_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_469_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_8_fu_480_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_7_fu_462_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_6_fu_444_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1035_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_1_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_2_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_3_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1023_1_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1023_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_4_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_5_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_7_fu_563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1023_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1023_4_fu_596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_6_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1023_5_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1023_3_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1023_6_fu_608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1023_2_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pix_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fast_accel_mux_32_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component fast_accel_mux_32_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component fast_accel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_32_13_1_1_U163 : component fast_accel_mux_32_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        din2_WIDTH => 13,
        din3_WIDTH => 2,
        dout_WIDTH => 13)
    port map (
        din0 => row_ind_V_7,
        din1 => row_ind_V_8,
        din2 => row_ind_V_9,
        din3 => sub_i214_i_cast,
        dout => tmp_4_fu_409_p5);

    mux_32_8_1_1_U164 : component fast_accel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_V_q0,
        din1 => buf_V_1_q0,
        din2 => buf_V_2_q0,
        din3 => tmp_5_fu_421_p4,
        dout => tmp_5_fu_421_p5);

    mux_32_8_1_1_U165 : component fast_accel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_V_q0,
        din1 => buf_V_1_q0,
        din2 => buf_V_2_q0,
        din3 => row_ind_V_7_cast,
        dout => tmp_6_fu_433_p5);

    mux_32_8_1_1_U166 : component fast_accel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_V_q0,
        din1 => buf_V_1_q0,
        din2 => buf_V_2_q0,
        din3 => row_ind_V_8_cast,
        dout => tmp_9_fu_451_p5);

    mux_32_8_1_1_U167 : component fast_accel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_V_q0,
        din1 => buf_V_1_q0,
        din2 => buf_V_2_q0,
        din3 => row_ind_V_9_cast,
        dout => tmp_3_fu_469_p5);

    flow_control_loop_pipe_sequential_init_U : component fast_accel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter3_stage0)) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter4_src_buf_V_12_reg_303_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                if (((icmp_ln1031_reg_780 = ap_const_lv1_1) and (icmp_ln1027_reg_750_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_src_buf_V_12_reg_303 <= src_buf_V_20_fu_501_p3;
                elsif (((icmp_ln1031_reg_780 = ap_const_lv1_0) and (icmp_ln1027_reg_750_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_src_buf_V_12_reg_303 <= src_buf_V_1_fu_110;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_src_buf_V_12_reg_303 <= ap_phi_reg_pp0_iter3_src_buf_V_12_reg_303;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_src_buf_V_13_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                if (((icmp_ln1031_reg_780 = ap_const_lv1_1) and (icmp_ln1027_reg_750_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_src_buf_V_13_reg_294 <= src_buf_V_19_fu_494_p3;
                elsif (((icmp_ln1031_reg_780 = ap_const_lv1_0) and (icmp_ln1027_reg_750_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_src_buf_V_13_reg_294 <= src_buf_V_4_fu_114;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_src_buf_V_13_reg_294 <= ap_phi_reg_pp0_iter3_src_buf_V_13_reg_294;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_src_buf_V_14_reg_285_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                if (((icmp_ln1031_reg_780 = ap_const_lv1_1) and (icmp_ln1027_reg_750_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_src_buf_V_14_reg_285 <= src_buf_V_18_fu_487_p3;
                elsif (((icmp_ln1031_reg_780 = ap_const_lv1_0) and (icmp_ln1027_reg_750_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_src_buf_V_14_reg_285 <= src_buf_V_2_fu_118;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_src_buf_V_14_reg_285 <= ap_phi_reg_pp0_iter3_src_buf_V_14_reg_285;
                end if;
            end if; 
        end if;
    end process;

    col_V_4_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln1027_fu_354_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    col_V_4_fu_94 <= col_V_5_fu_360_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    col_V_4_fu_94 <= ap_const_lv13_0;
                end if;
            end if; 
        end if;
    end process;

    src_buf_V_1_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf_V_1_fu_110 <= ap_const_lv8_0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_750_pp0_iter2_reg = ap_const_lv1_0))) then 
                    src_buf_V_1_fu_110 <= src_buf_V_20_fu_501_p3;
                end if;
            end if; 
        end if;
    end process;

    src_buf_V_2_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf_V_2_fu_118 <= ap_const_lv8_0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_750_pp0_iter2_reg = ap_const_lv1_0))) then 
                    src_buf_V_2_fu_118 <= src_buf_V_18_fu_487_p3;
                end if;
            end if; 
        end if;
    end process;

    src_buf_V_3_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf_V_3_fu_102 <= ap_const_lv8_0;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    src_buf_V_3_fu_102 <= ap_phi_reg_pp0_iter4_src_buf_V_13_reg_294;
                end if;
            end if; 
        end if;
    end process;

    src_buf_V_4_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf_V_4_fu_114 <= ap_const_lv8_0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_750_pp0_iter2_reg = ap_const_lv1_0))) then 
                    src_buf_V_4_fu_114 <= src_buf_V_19_fu_494_p3;
                end if;
            end if; 
        end if;
    end process;

    src_buf_V_5_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf_V_5_fu_106 <= ap_const_lv8_0;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    src_buf_V_5_fu_106 <= ap_phi_reg_pp0_iter4_src_buf_V_14_reg_285;
                end if;
            end if; 
        end if;
    end process;

    src_buf_V_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf_V_fu_98 <= ap_const_lv8_0;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    src_buf_V_fu_98 <= ap_phi_reg_pp0_iter4_src_buf_V_12_reg_303;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_fu_354_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln666_reg_761 <= and_ln666_fu_372_p2;
                icmp_ln1027_1_reg_754 <= icmp_ln1027_1_fu_366_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                col_V_reg_743 <= ap_sig_allocacmp_col_V;
                col_V_reg_743_pp0_iter1_reg <= col_V_reg_743;
                icmp_ln1027_1_reg_754_pp0_iter1_reg <= icmp_ln1027_1_reg_754;
                icmp_ln1027_reg_750 <= icmp_ln1027_fu_354_p2;
                icmp_ln1027_reg_750_pp0_iter1_reg <= icmp_ln1027_reg_750;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                icmp_ln1027_1_reg_754_pp0_iter2_reg <= icmp_ln1027_1_reg_754_pp0_iter1_reg;
                icmp_ln1027_reg_750_pp0_iter2_reg <= icmp_ln1027_reg_750_pp0_iter1_reg;
                icmp_ln1027_reg_750_pp0_iter3_reg <= icmp_ln1027_reg_750_pp0_iter2_reg;
                icmp_ln1031_reg_780_pp0_iter3_reg <= icmp_ln1031_reg_780;
                src_buf_V_15_reg_804 <= src_buf_V_2_fu_118;
                src_buf_V_16_reg_790 <= src_buf_V_4_fu_114;
                src_buf_V_17_reg_784 <= src_buf_V_1_fu_110;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_src_buf_V_12_reg_303 <= ap_phi_reg_pp0_iter0_src_buf_V_12_reg_303;
                ap_phi_reg_pp0_iter1_src_buf_V_13_reg_294 <= ap_phi_reg_pp0_iter0_src_buf_V_13_reg_294;
                ap_phi_reg_pp0_iter1_src_buf_V_14_reg_285 <= ap_phi_reg_pp0_iter0_src_buf_V_14_reg_285;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_src_buf_V_12_reg_303 <= ap_phi_reg_pp0_iter1_src_buf_V_12_reg_303;
                ap_phi_reg_pp0_iter2_src_buf_V_13_reg_294 <= ap_phi_reg_pp0_iter1_src_buf_V_13_reg_294;
                ap_phi_reg_pp0_iter2_src_buf_V_14_reg_285 <= ap_phi_reg_pp0_iter1_src_buf_V_14_reg_285;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_src_buf_V_12_reg_303 <= ap_phi_reg_pp0_iter2_src_buf_V_12_reg_303;
                ap_phi_reg_pp0_iter3_src_buf_V_13_reg_294 <= ap_phi_reg_pp0_iter2_src_buf_V_13_reg_294;
                ap_phi_reg_pp0_iter3_src_buf_V_14_reg_285 <= ap_phi_reg_pp0_iter2_src_buf_V_14_reg_285;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_750_pp0_iter1_reg = ap_const_lv1_0))) then
                icmp_ln1031_reg_780 <= icmp_ln1031_fu_395_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_750_pp0_iter2_reg = ap_const_lv1_0))) then
                src_buf_V_18_reg_810 <= src_buf_V_18_fu_487_p3;
                src_buf_V_19_reg_816 <= src_buf_V_19_fu_494_p3;
                src_buf_V_20_reg_822 <= src_buf_V_20_fu_501_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    and_ln1023_1_fu_578_p2 <= (icmp_ln1035_3_fu_546_p2 and icmp_ln1035_2_fu_541_p2);
    and_ln1023_2_fu_584_p2 <= (and_ln1023_fu_572_p2 and and_ln1023_1_fu_578_p2);
    and_ln1023_3_fu_590_p2 <= (icmp_ln1035_5_fu_554_p2 and icmp_ln1035_4_fu_550_p2);
    and_ln1023_4_fu_596_p2 <= (icmp_ln1035_7_fu_563_p2 and icmp_ln1023_fu_567_p2);
    and_ln1023_5_fu_602_p2 <= (icmp_ln1035_6_fu_559_p2 and and_ln1023_4_fu_596_p2);
    and_ln1023_6_fu_608_p2 <= (and_ln1023_5_fu_602_p2 and and_ln1023_3_fu_590_p2);
    and_ln1023_fu_572_p2 <= (icmp_ln1035_fu_532_p2 and icmp_ln1035_1_fu_537_p2);
    and_ln666_fu_372_p2 <= (icmp_ln1027_1_fu_366_p2 and cmp_i_i322_i);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, p_dst_data1_empty_n, ap_predicate_op53_read_state2, imgOutput_data2_full_n, ap_predicate_op117_write_state5)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_predicate_op117_write_state5 = ap_const_boolean_1) and (imgOutput_data2_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_predicate_op53_read_state2 = ap_const_boolean_1) and (p_dst_data1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, p_dst_data1_empty_n, ap_predicate_op53_read_state2, imgOutput_data2_full_n, ap_predicate_op117_write_state5)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_predicate_op117_write_state5 = ap_const_boolean_1) and (imgOutput_data2_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_predicate_op53_read_state2 = ap_const_boolean_1) and (p_dst_data1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, p_dst_data1_empty_n, ap_predicate_op53_read_state2, imgOutput_data2_full_n, ap_predicate_op117_write_state5)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_predicate_op117_write_state5 = ap_const_boolean_1) and (imgOutput_data2_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_predicate_op53_read_state2 = ap_const_boolean_1) and (p_dst_data1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(p_dst_data1_empty_n, ap_predicate_op53_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op53_read_state2 = ap_const_boolean_1) and (p_dst_data1_empty_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter4_assign_proc : process(imgOutput_data2_full_n, ap_predicate_op117_write_state5)
    begin
                ap_block_state5_pp0_stage0_iter4 <= ((ap_predicate_op117_write_state5 = ap_const_boolean_1) and (imgOutput_data2_full_n = ap_const_logic_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln1027_fu_354_p2)
    begin
        if (((icmp_ln1027_fu_354_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter3_stage0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone, icmp_ln1027_reg_750_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_750_pp0_iter2_reg = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter3_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter3_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_phi_reg_pp0_iter0_src_buf_V_12_reg_303 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_src_buf_V_13_reg_294 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_src_buf_V_14_reg_285 <= "XXXXXXXX";

    ap_predicate_op117_write_state5_assign_proc : process(icmp_ln1027_reg_750_pp0_iter3_reg, icmp_ln1031_reg_780_pp0_iter3_reg)
    begin
                ap_predicate_op117_write_state5 <= ((icmp_ln1031_reg_780_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln1027_reg_750_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op53_read_state2_assign_proc : process(icmp_ln1027_reg_750, and_ln666_reg_761)
    begin
                ap_predicate_op53_read_state2 <= ((ap_const_lv1_1 = and_ln666_reg_761) and (icmp_ln1027_reg_750 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_col_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, col_V_4_fu_94, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_col_V <= ap_const_lv13_0;
        else 
            ap_sig_allocacmp_col_V <= col_V_4_fu_94;
        end if; 
    end process;

    buf_V_1_address0 <= conv_i131_i_fu_389_p1(12 - 1 downto 0);
    buf_V_1_address1 <= zext_ln541_fu_383_p1(12 - 1 downto 0);

    buf_V_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_V_1_ce0 <= ap_const_logic_1;
        else 
            buf_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_V_1_ce1 <= ap_const_logic_1;
        else 
            buf_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_1_d1 <= p_dst_data1_dout;

    buf_V_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1027_reg_750, and_ln666_reg_761, ap_block_pp0_stage0_11001, row_ind_V_9_cast_read_reg_698)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln666_reg_761) and (icmp_ln1027_reg_750 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (row_ind_V_9_cast_read_reg_698 = ap_const_lv2_1))) then 
            buf_V_1_we1 <= ap_const_logic_1;
        else 
            buf_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_2_address0 <= conv_i131_i_fu_389_p1(12 - 1 downto 0);
    buf_V_2_address1 <= zext_ln541_fu_383_p1(12 - 1 downto 0);

    buf_V_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_V_2_ce0 <= ap_const_logic_1;
        else 
            buf_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_V_2_ce1 <= ap_const_logic_1;
        else 
            buf_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_2_d1 <= p_dst_data1_dout;

    buf_V_2_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1027_reg_750, and_ln666_reg_761, ap_block_pp0_stage0_11001, row_ind_V_9_cast_read_reg_698)
    begin
        if ((not((row_ind_V_9_cast_read_reg_698 = ap_const_lv2_0)) and not((row_ind_V_9_cast_read_reg_698 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln666_reg_761) and (icmp_ln1027_reg_750 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_V_2_we1 <= ap_const_logic_1;
        else 
            buf_V_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_address0 <= conv_i131_i_fu_389_p1(12 - 1 downto 0);
    buf_V_address1 <= zext_ln541_fu_383_p1(12 - 1 downto 0);

    buf_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_V_ce0 <= ap_const_logic_1;
        else 
            buf_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_V_ce1 <= ap_const_logic_1;
        else 
            buf_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_d1 <= p_dst_data1_dout;

    buf_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1027_reg_750, and_ln666_reg_761, ap_block_pp0_stage0_11001, row_ind_V_9_cast_read_reg_698)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln666_reg_761) and (icmp_ln1027_reg_750 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (row_ind_V_9_cast_read_reg_698 = ap_const_lv2_0))) then 
            buf_V_we1 <= ap_const_logic_1;
        else 
            buf_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    col_V_5_fu_360_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_col_V) + unsigned(ap_const_lv13_1));
    conv_i131_i_fu_389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_V_reg_743_pp0_iter1_reg),64));
    icmp_ln1023_fu_567_p2 <= "0" when (src_buf_V_16_reg_790 = ap_const_lv8_0) else "1";
    icmp_ln1027_1_fu_366_p2 <= "1" when (unsigned(zext_ln1027_fu_350_p1) < unsigned(img_width_load)) else "0";
    icmp_ln1027_fu_354_p2 <= "1" when (unsigned(zext_ln1027_fu_350_p1) > unsigned(img_width_load)) else "0";
    icmp_ln1031_fu_395_p2 <= "1" when (col_V_reg_743_pp0_iter1_reg = ap_const_lv13_0) else "0";
    icmp_ln1035_1_fu_537_p2 <= "1" when (unsigned(src_buf_V_16_reg_790) > unsigned(src_buf_V_19_reg_816)) else "0";
    icmp_ln1035_2_fu_541_p2 <= "1" when (unsigned(src_buf_V_fu_98) < unsigned(src_buf_V_16_reg_790)) else "0";
    icmp_ln1035_3_fu_546_p2 <= "1" when (unsigned(src_buf_V_16_reg_790) > unsigned(src_buf_V_17_reg_784)) else "0";
    icmp_ln1035_4_fu_550_p2 <= "1" when (unsigned(src_buf_V_20_reg_822) < unsigned(src_buf_V_16_reg_790)) else "0";
    icmp_ln1035_5_fu_554_p2 <= "1" when (unsigned(src_buf_V_16_reg_790) > unsigned(src_buf_V_5_fu_106)) else "0";
    icmp_ln1035_6_fu_559_p2 <= "1" when (unsigned(src_buf_V_15_reg_804) < unsigned(src_buf_V_16_reg_790)) else "0";
    icmp_ln1035_7_fu_563_p2 <= "1" when (unsigned(src_buf_V_16_reg_790) > unsigned(src_buf_V_18_reg_810)) else "0";
    icmp_ln1035_fu_532_p2 <= "1" when (unsigned(src_buf_V_3_fu_102) < unsigned(src_buf_V_16_reg_790)) else "0";

    imgOutput_data2_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, imgOutput_data2_full_n, ap_predicate_op117_write_state5, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op117_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            imgOutput_data2_blk_n <= imgOutput_data2_full_n;
        else 
            imgOutput_data2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    imgOutput_data2_din <= 
        ap_const_lv8_FF when (pix_fu_614_p2(0) = '1') else 
        ap_const_lv8_0;

    imgOutput_data2_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_predicate_op117_write_state5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op117_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            imgOutput_data2_write <= ap_const_logic_1;
        else 
            imgOutput_data2_write <= ap_const_logic_0;
        end if; 
    end process;


    p_dst_data1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, p_dst_data1_empty_n, ap_predicate_op53_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op53_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_dst_data1_blk_n <= p_dst_data1_empty_n;
        else 
            p_dst_data1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_dst_data1_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op53_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op53_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_dst_data1_read <= ap_const_logic_1;
        else 
            p_dst_data1_read <= ap_const_logic_0;
        end if; 
    end process;

    pix_fu_614_p2 <= (and_ln1023_6_fu_608_p2 and and_ln1023_2_fu_584_p2);
    row_ind_V_9_cast_read_reg_698 <= row_ind_V_9_cast;
    src_buf_V_18_fu_487_p3 <= 
        src_buf_V_8_fu_480_p3 when (icmp_ln1027_1_reg_754_pp0_iter2_reg(0) = '1') else 
        src_buf_V_2_fu_118;
    src_buf_V_19_fu_494_p3 <= 
        src_buf_V_7_fu_462_p3 when (icmp_ln1027_1_reg_754_pp0_iter2_reg(0) = '1') else 
        src_buf_V_4_fu_114;
    src_buf_V_20_fu_501_p3 <= 
        src_buf_V_6_fu_444_p3 when (icmp_ln1027_1_reg_754_pp0_iter2_reg(0) = '1') else 
        src_buf_V_1_fu_110;
    src_buf_V_6_fu_444_p3 <= 
        tmp_5_fu_421_p5 when (spec_select51(0) = '1') else 
        tmp_6_fu_433_p5;
    src_buf_V_7_fu_462_p3 <= 
        tmp_5_fu_421_p5 when (spec_select55(0) = '1') else 
        tmp_9_fu_451_p5;
    src_buf_V_8_fu_480_p3 <= 
        tmp_5_fu_421_p5 when (spec_select59(0) = '1') else 
        tmp_3_fu_469_p5;
    tmp_5_fu_421_p4 <= tmp_4_fu_409_p5(2 - 1 downto 0);
    zext_ln1027_fu_350_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_col_V),16));
    zext_ln541_fu_383_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_V_reg_743),64));
end behav;
