-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity canny_accel_xFCannyKernel is
port (
    in_mat_data1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_mat_data1_empty_n : IN STD_LOGIC;
    in_mat_data1_read : OUT STD_LOGIC;
    dst_mat_data2_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    dst_mat_data2_full_n : IN STD_LOGIC;
    dst_mat_data2_write : OUT STD_LOGIC;
    p_lowthreshold : IN STD_LOGIC_VECTOR (7 downto 0);
    p_highthreshold : IN STD_LOGIC_VECTOR (7 downto 0);
    img_height : IN STD_LOGIC_VECTOR (15 downto 0);
    img_width : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    p_lowthreshold_ap_vld : IN STD_LOGIC;
    p_highthreshold_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    img_height_ap_vld : IN STD_LOGIC;
    img_width_ap_vld : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of canny_accel_xFCannyKernel is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal entry_proc16_U0_ap_start : STD_LOGIC;
    signal entry_proc16_U0_ap_done : STD_LOGIC;
    signal entry_proc16_U0_ap_continue : STD_LOGIC;
    signal entry_proc16_U0_ap_idle : STD_LOGIC;
    signal entry_proc16_U0_ap_ready : STD_LOGIC;
    signal entry_proc16_U0_start_out : STD_LOGIC;
    signal entry_proc16_U0_start_write : STD_LOGIC;
    signal entry_proc16_U0_p_lowthreshold_c_din : STD_LOGIC_VECTOR (7 downto 0);
    signal entry_proc16_U0_p_lowthreshold_c_write : STD_LOGIC;
    signal entry_proc16_U0_p_highthreshold_c_din : STD_LOGIC_VECTOR (7 downto 0);
    signal entry_proc16_U0_p_highthreshold_c_write : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_start : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_done : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_continue : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_idle : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_ready : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_start_out : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_start_write : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_in_mat_data1_read : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_gaussian_mat_data1_din : STD_LOGIC_VECTOR (7 downto 0);
    signal xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_gaussian_mat_data1_write : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_img_height_c22_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_img_height_c22_write : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_img_width_c26_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_img_width_c26_write : STD_LOGIC;
    signal xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_ap_start : STD_LOGIC;
    signal xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_ap_done : STD_LOGIC;
    signal xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_ap_continue : STD_LOGIC;
    signal xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_ap_idle : STD_LOGIC;
    signal xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_ap_ready : STD_LOGIC;
    signal xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_start_out : STD_LOGIC;
    signal xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_start_write : STD_LOGIC;
    signal xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_gaussian_mat_data1_read : STD_LOGIC;
    signal xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_gradx_mat_data2_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_gradx_mat_data2_write : STD_LOGIC;
    signal xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_grady_mat_data5_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_grady_mat_data5_write : STD_LOGIC;
    signal xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_imgheight_read : STD_LOGIC;
    signal xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_imgwidth_read : STD_LOGIC;
    signal xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_img_height_c21_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_img_height_c21_write : STD_LOGIC;
    signal xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_img_width_c25_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_img_width_c25_write : STD_LOGIC;
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_ap_start : STD_LOGIC;
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_ap_done : STD_LOGIC;
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_ap_continue : STD_LOGIC;
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_ap_idle : STD_LOGIC;
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_ap_ready : STD_LOGIC;
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_start_out : STD_LOGIC;
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_start_write : STD_LOGIC;
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_gradx_mat_data2_read : STD_LOGIC;
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_grady_mat_data5_read : STD_LOGIC;
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_gradx1_mat_data3_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_gradx1_mat_data3_write : STD_LOGIC;
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_gradx2_mat_data4_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_gradx2_mat_data4_write : STD_LOGIC;
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_grady1_mat_data6_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_grady1_mat_data6_write : STD_LOGIC;
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_grady2_mat_data7_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_grady2_mat_data7_write : STD_LOGIC;
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_img_height_read : STD_LOGIC;
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_img_width_read : STD_LOGIC;
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_img_height_c20_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_img_height_c20_write : STD_LOGIC;
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_img_width_c24_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_img_width_c24_write : STD_LOGIC;
    signal xFCannyKernel_Block_entry15_proc_U0_ap_start : STD_LOGIC;
    signal xFCannyKernel_Block_entry15_proc_U0_ap_done : STD_LOGIC;
    signal xFCannyKernel_Block_entry15_proc_U0_ap_continue : STD_LOGIC;
    signal xFCannyKernel_Block_entry15_proc_U0_ap_idle : STD_LOGIC;
    signal xFCannyKernel_Block_entry15_proc_U0_ap_ready : STD_LOGIC;
    signal xFCannyKernel_Block_entry15_proc_U0_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal xFCannyKernel_Block_entry15_proc_U0_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_channel_done_height : STD_LOGIC;
    signal height_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_height : STD_LOGIC := '0';
    signal ap_sync_channel_write_height : STD_LOGIC;
    signal ap_channel_done_imgwidth : STD_LOGIC;
    signal imgwidth_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_imgwidth : STD_LOGIC := '0';
    signal ap_sync_channel_write_imgwidth : STD_LOGIC;
    signal xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_ap_start : STD_LOGIC;
    signal xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_ap_done : STD_LOGIC;
    signal xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_ap_continue : STD_LOGIC;
    signal xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_ap_idle : STD_LOGIC;
    signal xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_ap_ready : STD_LOGIC;
    signal xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_gradx1_mat_data3_read : STD_LOGIC;
    signal xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_grady1_mat_data6_read : STD_LOGIC;
    signal xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_magnitude_mat_data8_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_magnitude_mat_data8_write : STD_LOGIC;
    signal xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_ap_start : STD_LOGIC;
    signal xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_ap_done : STD_LOGIC;
    signal xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_ap_continue : STD_LOGIC;
    signal xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_ap_idle : STD_LOGIC;
    signal xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_ap_ready : STD_LOGIC;
    signal xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_gradx2_mat_data4_read : STD_LOGIC;
    signal xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_grady2_mat_data7_read : STD_LOGIC;
    signal xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_phase_mat_data9_din : STD_LOGIC_VECTOR (7 downto 0);
    signal xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_phase_mat_data9_write : STD_LOGIC;
    signal xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_imgheight_read : STD_LOGIC;
    signal xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_imgwidth_read : STD_LOGIC;
    signal xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_img_height_c19_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_img_height_c19_write : STD_LOGIC;
    signal xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_img_width_c23_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_img_width_c23_write : STD_LOGIC;
    signal xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_ap_start : STD_LOGIC;
    signal xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_ap_done : STD_LOGIC;
    signal xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_ap_continue : STD_LOGIC;
    signal xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_ap_idle : STD_LOGIC;
    signal xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_ap_ready : STD_LOGIC;
    signal xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_start_out : STD_LOGIC;
    signal xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_start_write : STD_LOGIC;
    signal xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_magnitude_mat_data8_read : STD_LOGIC;
    signal xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_phase_mat_data9_read : STD_LOGIC;
    signal xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_nms_mat_data10_din : STD_LOGIC_VECTOR (1 downto 0);
    signal xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_nms_mat_data10_write : STD_LOGIC;
    signal xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_low_threshold_read : STD_LOGIC;
    signal xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_high_threshold_read : STD_LOGIC;
    signal xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_imgheight_read : STD_LOGIC;
    signal xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_imgwidth_read : STD_LOGIC;
    signal xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_img_height_c_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_img_height_c_write : STD_LOGIC;
    signal xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_img_width_c_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_img_width_c_write : STD_LOGIC;
    signal xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_ap_start : STD_LOGIC;
    signal xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_ap_done : STD_LOGIC;
    signal xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_ap_continue : STD_LOGIC;
    signal xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_ap_idle : STD_LOGIC;
    signal xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_ap_ready : STD_LOGIC;
    signal xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_nms_mat_data10_read : STD_LOGIC;
    signal xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_dst_mat_data2_din : STD_LOGIC_VECTOR (63 downto 0);
    signal xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_dst_mat_data2_write : STD_LOGIC;
    signal xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_imgheight_read : STD_LOGIC;
    signal xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_imgwidth_read : STD_LOGIC;
    signal p_lowthreshold_c_full_n : STD_LOGIC;
    signal p_lowthreshold_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal p_lowthreshold_c_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal p_lowthreshold_c_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal p_lowthreshold_c_empty_n : STD_LOGIC;
    signal p_highthreshold_c_full_n : STD_LOGIC;
    signal p_highthreshold_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal p_highthreshold_c_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal p_highthreshold_c_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal p_highthreshold_c_empty_n : STD_LOGIC;
    signal gaussian_mat_data_full_n : STD_LOGIC;
    signal gaussian_mat_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal gaussian_mat_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal gaussian_mat_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal gaussian_mat_data_empty_n : STD_LOGIC;
    signal img_height_c22_full_n : STD_LOGIC;
    signal img_height_c22_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal img_height_c22_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_height_c22_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_height_c22_empty_n : STD_LOGIC;
    signal img_width_c26_full_n : STD_LOGIC;
    signal img_width_c26_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal img_width_c26_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_width_c26_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_width_c26_empty_n : STD_LOGIC;
    signal gradx_mat_data_full_n : STD_LOGIC;
    signal gradx_mat_data_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal gradx_mat_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal gradx_mat_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal gradx_mat_data_empty_n : STD_LOGIC;
    signal grady_mat_data_full_n : STD_LOGIC;
    signal grady_mat_data_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal grady_mat_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal grady_mat_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal grady_mat_data_empty_n : STD_LOGIC;
    signal img_height_c21_full_n : STD_LOGIC;
    signal img_height_c21_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal img_height_c21_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_height_c21_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_height_c21_empty_n : STD_LOGIC;
    signal img_width_c25_full_n : STD_LOGIC;
    signal img_width_c25_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal img_width_c25_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_width_c25_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_width_c25_empty_n : STD_LOGIC;
    signal gradx1_mat_data_full_n : STD_LOGIC;
    signal gradx1_mat_data_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal gradx1_mat_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal gradx1_mat_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal gradx1_mat_data_empty_n : STD_LOGIC;
    signal gradx2_mat_data_full_n : STD_LOGIC;
    signal gradx2_mat_data_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal gradx2_mat_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal gradx2_mat_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal gradx2_mat_data_empty_n : STD_LOGIC;
    signal grady1_mat_data_full_n : STD_LOGIC;
    signal grady1_mat_data_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal grady1_mat_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal grady1_mat_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal grady1_mat_data_empty_n : STD_LOGIC;
    signal grady2_mat_data_full_n : STD_LOGIC;
    signal grady2_mat_data_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal grady2_mat_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal grady2_mat_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal grady2_mat_data_empty_n : STD_LOGIC;
    signal img_height_c20_full_n : STD_LOGIC;
    signal img_height_c20_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal img_height_c20_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_height_c20_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_height_c20_empty_n : STD_LOGIC;
    signal img_width_c24_full_n : STD_LOGIC;
    signal img_width_c24_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal img_width_c24_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_width_c24_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_width_c24_empty_n : STD_LOGIC;
    signal imgwidth_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal imgwidth_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal imgwidth_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal imgwidth_empty_n : STD_LOGIC;
    signal height_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal height_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal height_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal height_empty_n : STD_LOGIC;
    signal magnitude_mat_data_full_n : STD_LOGIC;
    signal magnitude_mat_data_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal magnitude_mat_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal magnitude_mat_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal magnitude_mat_data_empty_n : STD_LOGIC;
    signal phase_mat_data_full_n : STD_LOGIC;
    signal phase_mat_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal phase_mat_data_num_data_valid : STD_LOGIC_VECTOR (13 downto 0);
    signal phase_mat_data_fifo_cap : STD_LOGIC_VECTOR (13 downto 0);
    signal phase_mat_data_empty_n : STD_LOGIC;
    signal img_height_c19_full_n : STD_LOGIC;
    signal img_height_c19_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal img_height_c19_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_height_c19_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_height_c19_empty_n : STD_LOGIC;
    signal img_width_c23_full_n : STD_LOGIC;
    signal img_width_c23_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal img_width_c23_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_width_c23_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_width_c23_empty_n : STD_LOGIC;
    signal nms_mat_data_full_n : STD_LOGIC;
    signal nms_mat_data_dout : STD_LOGIC_VECTOR (1 downto 0);
    signal nms_mat_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal nms_mat_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal nms_mat_data_empty_n : STD_LOGIC;
    signal img_height_c_full_n : STD_LOGIC;
    signal img_height_c_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal img_height_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_height_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_height_c_empty_n : STD_LOGIC;
    signal img_width_c_full_n : STD_LOGIC;
    signal img_width_c_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal img_width_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_width_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_width_c_empty_n : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_entry_proc16_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_entry_proc16_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_xFCannyKernel_Block_entry15_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_xFCannyKernel_Block_entry15_proc_U0_ap_ready : STD_LOGIC;
    signal start_for_xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_full_n : STD_LOGIC;
    signal start_for_xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_empty_n : STD_LOGIC;
    signal start_for_xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_full_n : STD_LOGIC;
    signal start_for_xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_empty_n : STD_LOGIC;
    signal start_for_xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_full_n : STD_LOGIC;
    signal start_for_xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_empty_n : STD_LOGIC;
    signal start_for_xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_full_n : STD_LOGIC;
    signal start_for_xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_empty_n : STD_LOGIC;
    signal start_for_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_full_n : STD_LOGIC;
    signal start_for_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_empty_n : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component canny_accel_entry_proc16 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_lowthreshold : IN STD_LOGIC_VECTOR (7 downto 0);
        p_lowthreshold_c_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_lowthreshold_c_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        p_lowthreshold_c_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        p_lowthreshold_c_full_n : IN STD_LOGIC;
        p_lowthreshold_c_write : OUT STD_LOGIC;
        p_highthreshold : IN STD_LOGIC_VECTOR (7 downto 0);
        p_highthreshold_c_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_highthreshold_c_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        p_highthreshold_c_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        p_highthreshold_c_full_n : IN STD_LOGIC;
        p_highthreshold_c_write : OUT STD_LOGIC );
    end component;


    component canny_accel_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_mat_data1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_mat_data1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        in_mat_data1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        in_mat_data1_empty_n : IN STD_LOGIC;
        in_mat_data1_read : OUT STD_LOGIC;
        gaussian_mat_data1_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        gaussian_mat_data1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        gaussian_mat_data1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        gaussian_mat_data1_full_n : IN STD_LOGIC;
        gaussian_mat_data1_write : OUT STD_LOGIC;
        img_height : IN STD_LOGIC_VECTOR (15 downto 0);
        img_width : IN STD_LOGIC_VECTOR (15 downto 0);
        img_height_c22_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_height_c22_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_height_c22_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_height_c22_full_n : IN STD_LOGIC;
        img_height_c22_write : OUT STD_LOGIC;
        img_width_c26_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_width_c26_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_width_c26_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_width_c26_full_n : IN STD_LOGIC;
        img_width_c26_write : OUT STD_LOGIC );
    end component;


    component canny_accel_xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        gaussian_mat_data1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        gaussian_mat_data1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        gaussian_mat_data1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        gaussian_mat_data1_empty_n : IN STD_LOGIC;
        gaussian_mat_data1_read : OUT STD_LOGIC;
        gradx_mat_data2_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        gradx_mat_data2_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        gradx_mat_data2_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        gradx_mat_data2_full_n : IN STD_LOGIC;
        gradx_mat_data2_write : OUT STD_LOGIC;
        grady_mat_data5_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        grady_mat_data5_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        grady_mat_data5_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        grady_mat_data5_full_n : IN STD_LOGIC;
        grady_mat_data5_write : OUT STD_LOGIC;
        imgheight_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        imgheight_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        imgheight_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        imgheight_empty_n : IN STD_LOGIC;
        imgheight_read : OUT STD_LOGIC;
        imgwidth_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        imgwidth_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        imgwidth_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        imgwidth_empty_n : IN STD_LOGIC;
        imgwidth_read : OUT STD_LOGIC;
        img_height_c21_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_height_c21_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_height_c21_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_height_c21_full_n : IN STD_LOGIC;
        img_height_c21_write : OUT STD_LOGIC;
        img_width_c25_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_width_c25_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_width_c25_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_width_c25_full_n : IN STD_LOGIC;
        img_width_c25_write : OUT STD_LOGIC );
    end component;


    component canny_accel_xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        gradx_mat_data2_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        gradx_mat_data2_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        gradx_mat_data2_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        gradx_mat_data2_empty_n : IN STD_LOGIC;
        gradx_mat_data2_read : OUT STD_LOGIC;
        grady_mat_data5_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        grady_mat_data5_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        grady_mat_data5_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        grady_mat_data5_empty_n : IN STD_LOGIC;
        grady_mat_data5_read : OUT STD_LOGIC;
        gradx1_mat_data3_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        gradx1_mat_data3_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        gradx1_mat_data3_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        gradx1_mat_data3_full_n : IN STD_LOGIC;
        gradx1_mat_data3_write : OUT STD_LOGIC;
        gradx2_mat_data4_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        gradx2_mat_data4_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        gradx2_mat_data4_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        gradx2_mat_data4_full_n : IN STD_LOGIC;
        gradx2_mat_data4_write : OUT STD_LOGIC;
        grady1_mat_data6_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        grady1_mat_data6_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        grady1_mat_data6_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        grady1_mat_data6_full_n : IN STD_LOGIC;
        grady1_mat_data6_write : OUT STD_LOGIC;
        grady2_mat_data7_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        grady2_mat_data7_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        grady2_mat_data7_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        grady2_mat_data7_full_n : IN STD_LOGIC;
        grady2_mat_data7_write : OUT STD_LOGIC;
        img_height_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        img_height_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_height_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_height_empty_n : IN STD_LOGIC;
        img_height_read : OUT STD_LOGIC;
        img_width_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        img_width_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_width_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_width_empty_n : IN STD_LOGIC;
        img_width_read : OUT STD_LOGIC;
        img_height_c20_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_height_c20_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_height_c20_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_height_c20_full_n : IN STD_LOGIC;
        img_height_c20_write : OUT STD_LOGIC;
        img_width_c24_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_width_c24_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_width_c24_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_width_c24_full_n : IN STD_LOGIC;
        img_width_c24_write : OUT STD_LOGIC );
    end component;


    component canny_accel_xFCannyKernel_Block_entry15_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_width : IN STD_LOGIC_VECTOR (15 downto 0);
        img_height : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component canny_accel_xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        gradx1_mat_data3_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        gradx1_mat_data3_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        gradx1_mat_data3_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        gradx1_mat_data3_empty_n : IN STD_LOGIC;
        gradx1_mat_data3_read : OUT STD_LOGIC;
        grady1_mat_data6_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        grady1_mat_data6_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        grady1_mat_data6_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        grady1_mat_data6_empty_n : IN STD_LOGIC;
        grady1_mat_data6_read : OUT STD_LOGIC;
        magnitude_mat_data8_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        magnitude_mat_data8_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        magnitude_mat_data8_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        magnitude_mat_data8_full_n : IN STD_LOGIC;
        magnitude_mat_data8_write : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component canny_accel_xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        gradx2_mat_data4_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        gradx2_mat_data4_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        gradx2_mat_data4_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        gradx2_mat_data4_empty_n : IN STD_LOGIC;
        gradx2_mat_data4_read : OUT STD_LOGIC;
        grady2_mat_data7_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        grady2_mat_data7_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        grady2_mat_data7_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        grady2_mat_data7_empty_n : IN STD_LOGIC;
        grady2_mat_data7_read : OUT STD_LOGIC;
        phase_mat_data9_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        phase_mat_data9_num_data_valid : IN STD_LOGIC_VECTOR (13 downto 0);
        phase_mat_data9_fifo_cap : IN STD_LOGIC_VECTOR (13 downto 0);
        phase_mat_data9_full_n : IN STD_LOGIC;
        phase_mat_data9_write : OUT STD_LOGIC;
        imgheight_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        imgheight_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        imgheight_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        imgheight_empty_n : IN STD_LOGIC;
        imgheight_read : OUT STD_LOGIC;
        imgwidth_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        imgwidth_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        imgwidth_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        imgwidth_empty_n : IN STD_LOGIC;
        imgwidth_read : OUT STD_LOGIC;
        img_height_c19_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_height_c19_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_height_c19_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_height_c19_full_n : IN STD_LOGIC;
        img_height_c19_write : OUT STD_LOGIC;
        img_width_c23_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_width_c23_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_width_c23_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_width_c23_full_n : IN STD_LOGIC;
        img_width_c23_write : OUT STD_LOGIC );
    end component;


    component canny_accel_xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        magnitude_mat_data8_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        magnitude_mat_data8_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        magnitude_mat_data8_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        magnitude_mat_data8_empty_n : IN STD_LOGIC;
        magnitude_mat_data8_read : OUT STD_LOGIC;
        phase_mat_data9_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        phase_mat_data9_num_data_valid : IN STD_LOGIC_VECTOR (13 downto 0);
        phase_mat_data9_fifo_cap : IN STD_LOGIC_VECTOR (13 downto 0);
        phase_mat_data9_empty_n : IN STD_LOGIC;
        phase_mat_data9_read : OUT STD_LOGIC;
        nms_mat_data10_din : OUT STD_LOGIC_VECTOR (1 downto 0);
        nms_mat_data10_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        nms_mat_data10_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        nms_mat_data10_full_n : IN STD_LOGIC;
        nms_mat_data10_write : OUT STD_LOGIC;
        low_threshold_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        low_threshold_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        low_threshold_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        low_threshold_empty_n : IN STD_LOGIC;
        low_threshold_read : OUT STD_LOGIC;
        high_threshold_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        high_threshold_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        high_threshold_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        high_threshold_empty_n : IN STD_LOGIC;
        high_threshold_read : OUT STD_LOGIC;
        imgheight_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        imgheight_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        imgheight_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        imgheight_empty_n : IN STD_LOGIC;
        imgheight_read : OUT STD_LOGIC;
        imgwidth_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        imgwidth_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        imgwidth_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        imgwidth_empty_n : IN STD_LOGIC;
        imgwidth_read : OUT STD_LOGIC;
        img_height_c_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_height_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_height_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_height_c_full_n : IN STD_LOGIC;
        img_height_c_write : OUT STD_LOGIC;
        img_width_c_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_width_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_width_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_width_c_full_n : IN STD_LOGIC;
        img_width_c_write : OUT STD_LOGIC );
    end component;


    component canny_accel_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        nms_mat_data10_dout : IN STD_LOGIC_VECTOR (1 downto 0);
        nms_mat_data10_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        nms_mat_data10_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        nms_mat_data10_empty_n : IN STD_LOGIC;
        nms_mat_data10_read : OUT STD_LOGIC;
        dst_mat_data2_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        dst_mat_data2_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        dst_mat_data2_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        dst_mat_data2_full_n : IN STD_LOGIC;
        dst_mat_data2_write : OUT STD_LOGIC;
        imgheight_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        imgheight_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        imgheight_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        imgheight_empty_n : IN STD_LOGIC;
        imgheight_read : OUT STD_LOGIC;
        imgwidth_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        imgwidth_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        imgwidth_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        imgwidth_empty_n : IN STD_LOGIC;
        imgwidth_read : OUT STD_LOGIC );
    end component;


    component canny_accel_fifo_w8_d6_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_fifo_w8_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_fifo_w16_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_fifo_w16_d4_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_fifo_w8_d5760_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (13 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (13 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_fifo_w2_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_start_for_xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_start_for_xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_start_for_xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_start_for_xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_start_for_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    entry_proc16_U0 : component canny_accel_entry_proc16
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => entry_proc16_U0_ap_start,
        start_full_n => start_for_xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_full_n,
        ap_done => entry_proc16_U0_ap_done,
        ap_continue => entry_proc16_U0_ap_continue,
        ap_idle => entry_proc16_U0_ap_idle,
        ap_ready => entry_proc16_U0_ap_ready,
        start_out => entry_proc16_U0_start_out,
        start_write => entry_proc16_U0_start_write,
        p_lowthreshold => p_lowthreshold,
        p_lowthreshold_c_din => entry_proc16_U0_p_lowthreshold_c_din,
        p_lowthreshold_c_num_data_valid => p_lowthreshold_c_num_data_valid,
        p_lowthreshold_c_fifo_cap => p_lowthreshold_c_fifo_cap,
        p_lowthreshold_c_full_n => p_lowthreshold_c_full_n,
        p_lowthreshold_c_write => entry_proc16_U0_p_lowthreshold_c_write,
        p_highthreshold => p_highthreshold,
        p_highthreshold_c_din => entry_proc16_U0_p_highthreshold_c_din,
        p_highthreshold_c_num_data_valid => p_highthreshold_c_num_data_valid,
        p_highthreshold_c_fifo_cap => p_highthreshold_c_fifo_cap,
        p_highthreshold_c_full_n => p_highthreshold_c_full_n,
        p_highthreshold_c_write => entry_proc16_U0_p_highthreshold_c_write);

    xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0 : component canny_accel_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_start,
        start_full_n => start_for_xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_full_n,
        ap_done => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_done,
        ap_continue => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_continue,
        ap_idle => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_idle,
        ap_ready => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_ready,
        start_out => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_start_out,
        start_write => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_start_write,
        in_mat_data1_dout => in_mat_data1_dout,
        in_mat_data1_num_data_valid => ap_const_lv2_0,
        in_mat_data1_fifo_cap => ap_const_lv2_0,
        in_mat_data1_empty_n => in_mat_data1_empty_n,
        in_mat_data1_read => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_in_mat_data1_read,
        gaussian_mat_data1_din => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_gaussian_mat_data1_din,
        gaussian_mat_data1_num_data_valid => gaussian_mat_data_num_data_valid,
        gaussian_mat_data1_fifo_cap => gaussian_mat_data_fifo_cap,
        gaussian_mat_data1_full_n => gaussian_mat_data_full_n,
        gaussian_mat_data1_write => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_gaussian_mat_data1_write,
        img_height => img_height,
        img_width => img_width,
        img_height_c22_din => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_img_height_c22_din,
        img_height_c22_num_data_valid => img_height_c22_num_data_valid,
        img_height_c22_fifo_cap => img_height_c22_fifo_cap,
        img_height_c22_full_n => img_height_c22_full_n,
        img_height_c22_write => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_img_height_c22_write,
        img_width_c26_din => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_img_width_c26_din,
        img_width_c26_num_data_valid => img_width_c26_num_data_valid,
        img_width_c26_fifo_cap => img_width_c26_fifo_cap,
        img_width_c26_full_n => img_width_c26_full_n,
        img_width_c26_write => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_img_width_c26_write);

    xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0 : component canny_accel_xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_ap_start,
        start_full_n => start_for_xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_full_n,
        ap_done => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_ap_done,
        ap_continue => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_ap_continue,
        ap_idle => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_ap_idle,
        ap_ready => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_ap_ready,
        start_out => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_start_out,
        start_write => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_start_write,
        gaussian_mat_data1_dout => gaussian_mat_data_dout,
        gaussian_mat_data1_num_data_valid => gaussian_mat_data_num_data_valid,
        gaussian_mat_data1_fifo_cap => gaussian_mat_data_fifo_cap,
        gaussian_mat_data1_empty_n => gaussian_mat_data_empty_n,
        gaussian_mat_data1_read => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_gaussian_mat_data1_read,
        gradx_mat_data2_din => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_gradx_mat_data2_din,
        gradx_mat_data2_num_data_valid => gradx_mat_data_num_data_valid,
        gradx_mat_data2_fifo_cap => gradx_mat_data_fifo_cap,
        gradx_mat_data2_full_n => gradx_mat_data_full_n,
        gradx_mat_data2_write => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_gradx_mat_data2_write,
        grady_mat_data5_din => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_grady_mat_data5_din,
        grady_mat_data5_num_data_valid => grady_mat_data_num_data_valid,
        grady_mat_data5_fifo_cap => grady_mat_data_fifo_cap,
        grady_mat_data5_full_n => grady_mat_data_full_n,
        grady_mat_data5_write => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_grady_mat_data5_write,
        imgheight_dout => img_height_c22_dout,
        imgheight_num_data_valid => img_height_c22_num_data_valid,
        imgheight_fifo_cap => img_height_c22_fifo_cap,
        imgheight_empty_n => img_height_c22_empty_n,
        imgheight_read => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_imgheight_read,
        imgwidth_dout => img_width_c26_dout,
        imgwidth_num_data_valid => img_width_c26_num_data_valid,
        imgwidth_fifo_cap => img_width_c26_fifo_cap,
        imgwidth_empty_n => img_width_c26_empty_n,
        imgwidth_read => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_imgwidth_read,
        img_height_c21_din => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_img_height_c21_din,
        img_height_c21_num_data_valid => img_height_c21_num_data_valid,
        img_height_c21_fifo_cap => img_height_c21_fifo_cap,
        img_height_c21_full_n => img_height_c21_full_n,
        img_height_c21_write => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_img_height_c21_write,
        img_width_c25_din => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_img_width_c25_din,
        img_width_c25_num_data_valid => img_width_c25_num_data_valid,
        img_width_c25_fifo_cap => img_width_c25_fifo_cap,
        img_width_c25_full_n => img_width_c25_full_n,
        img_width_c25_write => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_img_width_c25_write);

    xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0 : component canny_accel_xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_ap_start,
        start_full_n => start_for_xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_full_n,
        ap_done => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_ap_done,
        ap_continue => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_ap_continue,
        ap_idle => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_ap_idle,
        ap_ready => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_ap_ready,
        start_out => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_start_out,
        start_write => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_start_write,
        gradx_mat_data2_dout => gradx_mat_data_dout,
        gradx_mat_data2_num_data_valid => gradx_mat_data_num_data_valid,
        gradx_mat_data2_fifo_cap => gradx_mat_data_fifo_cap,
        gradx_mat_data2_empty_n => gradx_mat_data_empty_n,
        gradx_mat_data2_read => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_gradx_mat_data2_read,
        grady_mat_data5_dout => grady_mat_data_dout,
        grady_mat_data5_num_data_valid => grady_mat_data_num_data_valid,
        grady_mat_data5_fifo_cap => grady_mat_data_fifo_cap,
        grady_mat_data5_empty_n => grady_mat_data_empty_n,
        grady_mat_data5_read => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_grady_mat_data5_read,
        gradx1_mat_data3_din => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_gradx1_mat_data3_din,
        gradx1_mat_data3_num_data_valid => gradx1_mat_data_num_data_valid,
        gradx1_mat_data3_fifo_cap => gradx1_mat_data_fifo_cap,
        gradx1_mat_data3_full_n => gradx1_mat_data_full_n,
        gradx1_mat_data3_write => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_gradx1_mat_data3_write,
        gradx2_mat_data4_din => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_gradx2_mat_data4_din,
        gradx2_mat_data4_num_data_valid => gradx2_mat_data_num_data_valid,
        gradx2_mat_data4_fifo_cap => gradx2_mat_data_fifo_cap,
        gradx2_mat_data4_full_n => gradx2_mat_data_full_n,
        gradx2_mat_data4_write => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_gradx2_mat_data4_write,
        grady1_mat_data6_din => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_grady1_mat_data6_din,
        grady1_mat_data6_num_data_valid => grady1_mat_data_num_data_valid,
        grady1_mat_data6_fifo_cap => grady1_mat_data_fifo_cap,
        grady1_mat_data6_full_n => grady1_mat_data_full_n,
        grady1_mat_data6_write => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_grady1_mat_data6_write,
        grady2_mat_data7_din => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_grady2_mat_data7_din,
        grady2_mat_data7_num_data_valid => grady2_mat_data_num_data_valid,
        grady2_mat_data7_fifo_cap => grady2_mat_data_fifo_cap,
        grady2_mat_data7_full_n => grady2_mat_data_full_n,
        grady2_mat_data7_write => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_grady2_mat_data7_write,
        img_height_dout => img_height_c21_dout,
        img_height_num_data_valid => img_height_c21_num_data_valid,
        img_height_fifo_cap => img_height_c21_fifo_cap,
        img_height_empty_n => img_height_c21_empty_n,
        img_height_read => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_img_height_read,
        img_width_dout => img_width_c25_dout,
        img_width_num_data_valid => img_width_c25_num_data_valid,
        img_width_fifo_cap => img_width_c25_fifo_cap,
        img_width_empty_n => img_width_c25_empty_n,
        img_width_read => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_img_width_read,
        img_height_c20_din => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_img_height_c20_din,
        img_height_c20_num_data_valid => img_height_c20_num_data_valid,
        img_height_c20_fifo_cap => img_height_c20_fifo_cap,
        img_height_c20_full_n => img_height_c20_full_n,
        img_height_c20_write => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_img_height_c20_write,
        img_width_c24_din => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_img_width_c24_din,
        img_width_c24_num_data_valid => img_width_c24_num_data_valid,
        img_width_c24_fifo_cap => img_width_c24_fifo_cap,
        img_width_c24_full_n => img_width_c24_full_n,
        img_width_c24_write => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_img_width_c24_write);

    xFCannyKernel_Block_entry15_proc_U0 : component canny_accel_xFCannyKernel_Block_entry15_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFCannyKernel_Block_entry15_proc_U0_ap_start,
        ap_done => xFCannyKernel_Block_entry15_proc_U0_ap_done,
        ap_continue => xFCannyKernel_Block_entry15_proc_U0_ap_continue,
        ap_idle => xFCannyKernel_Block_entry15_proc_U0_ap_idle,
        ap_ready => xFCannyKernel_Block_entry15_proc_U0_ap_ready,
        img_width => img_width,
        img_height => img_height,
        ap_return_0 => xFCannyKernel_Block_entry15_proc_U0_ap_return_0,
        ap_return_1 => xFCannyKernel_Block_entry15_proc_U0_ap_return_1);

    xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0 : component canny_accel_xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_ap_start,
        ap_done => xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_ap_done,
        ap_continue => xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_ap_continue,
        ap_idle => xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_ap_idle,
        ap_ready => xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_ap_ready,
        gradx1_mat_data3_dout => gradx1_mat_data_dout,
        gradx1_mat_data3_num_data_valid => gradx1_mat_data_num_data_valid,
        gradx1_mat_data3_fifo_cap => gradx1_mat_data_fifo_cap,
        gradx1_mat_data3_empty_n => gradx1_mat_data_empty_n,
        gradx1_mat_data3_read => xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_gradx1_mat_data3_read,
        grady1_mat_data6_dout => grady1_mat_data_dout,
        grady1_mat_data6_num_data_valid => grady1_mat_data_num_data_valid,
        grady1_mat_data6_fifo_cap => grady1_mat_data_fifo_cap,
        grady1_mat_data6_empty_n => grady1_mat_data_empty_n,
        grady1_mat_data6_read => xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_grady1_mat_data6_read,
        magnitude_mat_data8_din => xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_magnitude_mat_data8_din,
        magnitude_mat_data8_num_data_valid => magnitude_mat_data_num_data_valid,
        magnitude_mat_data8_fifo_cap => magnitude_mat_data_fifo_cap,
        magnitude_mat_data8_full_n => magnitude_mat_data_full_n,
        magnitude_mat_data8_write => xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_magnitude_mat_data8_write,
        p_read => height_dout,
        p_read1 => imgwidth_dout);

    xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0 : component canny_accel_xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_ap_start,
        ap_done => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_ap_done,
        ap_continue => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_ap_continue,
        ap_idle => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_ap_idle,
        ap_ready => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_ap_ready,
        gradx2_mat_data4_dout => gradx2_mat_data_dout,
        gradx2_mat_data4_num_data_valid => gradx2_mat_data_num_data_valid,
        gradx2_mat_data4_fifo_cap => gradx2_mat_data_fifo_cap,
        gradx2_mat_data4_empty_n => gradx2_mat_data_empty_n,
        gradx2_mat_data4_read => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_gradx2_mat_data4_read,
        grady2_mat_data7_dout => grady2_mat_data_dout,
        grady2_mat_data7_num_data_valid => grady2_mat_data_num_data_valid,
        grady2_mat_data7_fifo_cap => grady2_mat_data_fifo_cap,
        grady2_mat_data7_empty_n => grady2_mat_data_empty_n,
        grady2_mat_data7_read => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_grady2_mat_data7_read,
        phase_mat_data9_din => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_phase_mat_data9_din,
        phase_mat_data9_num_data_valid => phase_mat_data_num_data_valid,
        phase_mat_data9_fifo_cap => phase_mat_data_fifo_cap,
        phase_mat_data9_full_n => phase_mat_data_full_n,
        phase_mat_data9_write => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_phase_mat_data9_write,
        imgheight_dout => img_height_c20_dout,
        imgheight_num_data_valid => img_height_c20_num_data_valid,
        imgheight_fifo_cap => img_height_c20_fifo_cap,
        imgheight_empty_n => img_height_c20_empty_n,
        imgheight_read => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_imgheight_read,
        imgwidth_dout => img_width_c24_dout,
        imgwidth_num_data_valid => img_width_c24_num_data_valid,
        imgwidth_fifo_cap => img_width_c24_fifo_cap,
        imgwidth_empty_n => img_width_c24_empty_n,
        imgwidth_read => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_imgwidth_read,
        img_height_c19_din => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_img_height_c19_din,
        img_height_c19_num_data_valid => img_height_c19_num_data_valid,
        img_height_c19_fifo_cap => img_height_c19_fifo_cap,
        img_height_c19_full_n => img_height_c19_full_n,
        img_height_c19_write => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_img_height_c19_write,
        img_width_c23_din => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_img_width_c23_din,
        img_width_c23_num_data_valid => img_width_c23_num_data_valid,
        img_width_c23_fifo_cap => img_width_c23_fifo_cap,
        img_width_c23_full_n => img_width_c23_full_n,
        img_width_c23_write => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_img_width_c23_write);

    xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0 : component canny_accel_xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_ap_start,
        start_full_n => start_for_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_full_n,
        ap_done => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_ap_done,
        ap_continue => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_ap_continue,
        ap_idle => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_ap_idle,
        ap_ready => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_ap_ready,
        start_out => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_start_out,
        start_write => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_start_write,
        magnitude_mat_data8_dout => magnitude_mat_data_dout,
        magnitude_mat_data8_num_data_valid => magnitude_mat_data_num_data_valid,
        magnitude_mat_data8_fifo_cap => magnitude_mat_data_fifo_cap,
        magnitude_mat_data8_empty_n => magnitude_mat_data_empty_n,
        magnitude_mat_data8_read => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_magnitude_mat_data8_read,
        phase_mat_data9_dout => phase_mat_data_dout,
        phase_mat_data9_num_data_valid => phase_mat_data_num_data_valid,
        phase_mat_data9_fifo_cap => phase_mat_data_fifo_cap,
        phase_mat_data9_empty_n => phase_mat_data_empty_n,
        phase_mat_data9_read => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_phase_mat_data9_read,
        nms_mat_data10_din => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_nms_mat_data10_din,
        nms_mat_data10_num_data_valid => nms_mat_data_num_data_valid,
        nms_mat_data10_fifo_cap => nms_mat_data_fifo_cap,
        nms_mat_data10_full_n => nms_mat_data_full_n,
        nms_mat_data10_write => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_nms_mat_data10_write,
        low_threshold_dout => p_lowthreshold_c_dout,
        low_threshold_num_data_valid => p_lowthreshold_c_num_data_valid,
        low_threshold_fifo_cap => p_lowthreshold_c_fifo_cap,
        low_threshold_empty_n => p_lowthreshold_c_empty_n,
        low_threshold_read => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_low_threshold_read,
        high_threshold_dout => p_highthreshold_c_dout,
        high_threshold_num_data_valid => p_highthreshold_c_num_data_valid,
        high_threshold_fifo_cap => p_highthreshold_c_fifo_cap,
        high_threshold_empty_n => p_highthreshold_c_empty_n,
        high_threshold_read => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_high_threshold_read,
        imgheight_dout => img_height_c19_dout,
        imgheight_num_data_valid => img_height_c19_num_data_valid,
        imgheight_fifo_cap => img_height_c19_fifo_cap,
        imgheight_empty_n => img_height_c19_empty_n,
        imgheight_read => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_imgheight_read,
        imgwidth_dout => img_width_c23_dout,
        imgwidth_num_data_valid => img_width_c23_num_data_valid,
        imgwidth_fifo_cap => img_width_c23_fifo_cap,
        imgwidth_empty_n => img_width_c23_empty_n,
        imgwidth_read => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_imgwidth_read,
        img_height_c_din => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_img_height_c_din,
        img_height_c_num_data_valid => img_height_c_num_data_valid,
        img_height_c_fifo_cap => img_height_c_fifo_cap,
        img_height_c_full_n => img_height_c_full_n,
        img_height_c_write => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_img_height_c_write,
        img_width_c_din => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_img_width_c_din,
        img_width_c_num_data_valid => img_width_c_num_data_valid,
        img_width_c_fifo_cap => img_width_c_fifo_cap,
        img_width_c_full_n => img_width_c_full_n,
        img_width_c_write => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_img_width_c_write);

    xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0 : component canny_accel_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_ap_start,
        ap_done => xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_ap_done,
        ap_continue => xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_ap_continue,
        ap_idle => xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_ap_idle,
        ap_ready => xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_ap_ready,
        nms_mat_data10_dout => nms_mat_data_dout,
        nms_mat_data10_num_data_valid => nms_mat_data_num_data_valid,
        nms_mat_data10_fifo_cap => nms_mat_data_fifo_cap,
        nms_mat_data10_empty_n => nms_mat_data_empty_n,
        nms_mat_data10_read => xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_nms_mat_data10_read,
        dst_mat_data2_din => xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_dst_mat_data2_din,
        dst_mat_data2_num_data_valid => ap_const_lv2_0,
        dst_mat_data2_fifo_cap => ap_const_lv2_0,
        dst_mat_data2_full_n => dst_mat_data2_full_n,
        dst_mat_data2_write => xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_dst_mat_data2_write,
        imgheight_dout => img_height_c_dout,
        imgheight_num_data_valid => img_height_c_num_data_valid,
        imgheight_fifo_cap => img_height_c_fifo_cap,
        imgheight_empty_n => img_height_c_empty_n,
        imgheight_read => xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_imgheight_read,
        imgwidth_dout => img_width_c_dout,
        imgwidth_num_data_valid => img_width_c_num_data_valid,
        imgwidth_fifo_cap => img_width_c_fifo_cap,
        imgwidth_empty_n => img_width_c_empty_n,
        imgwidth_read => xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_imgwidth_read);

    p_lowthreshold_c_U : component canny_accel_fifo_w8_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc16_U0_p_lowthreshold_c_din,
        if_full_n => p_lowthreshold_c_full_n,
        if_write => entry_proc16_U0_p_lowthreshold_c_write,
        if_dout => p_lowthreshold_c_dout,
        if_num_data_valid => p_lowthreshold_c_num_data_valid,
        if_fifo_cap => p_lowthreshold_c_fifo_cap,
        if_empty_n => p_lowthreshold_c_empty_n,
        if_read => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_low_threshold_read);

    p_highthreshold_c_U : component canny_accel_fifo_w8_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc16_U0_p_highthreshold_c_din,
        if_full_n => p_highthreshold_c_full_n,
        if_write => entry_proc16_U0_p_highthreshold_c_write,
        if_dout => p_highthreshold_c_dout,
        if_num_data_valid => p_highthreshold_c_num_data_valid,
        if_fifo_cap => p_highthreshold_c_fifo_cap,
        if_empty_n => p_highthreshold_c_empty_n,
        if_read => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_high_threshold_read);

    gaussian_mat_data_U : component canny_accel_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_gaussian_mat_data1_din,
        if_full_n => gaussian_mat_data_full_n,
        if_write => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_gaussian_mat_data1_write,
        if_dout => gaussian_mat_data_dout,
        if_num_data_valid => gaussian_mat_data_num_data_valid,
        if_fifo_cap => gaussian_mat_data_fifo_cap,
        if_empty_n => gaussian_mat_data_empty_n,
        if_read => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_gaussian_mat_data1_read);

    img_height_c22_U : component canny_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_img_height_c22_din,
        if_full_n => img_height_c22_full_n,
        if_write => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_img_height_c22_write,
        if_dout => img_height_c22_dout,
        if_num_data_valid => img_height_c22_num_data_valid,
        if_fifo_cap => img_height_c22_fifo_cap,
        if_empty_n => img_height_c22_empty_n,
        if_read => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_imgheight_read);

    img_width_c26_U : component canny_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_img_width_c26_din,
        if_full_n => img_width_c26_full_n,
        if_write => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_img_width_c26_write,
        if_dout => img_width_c26_dout,
        if_num_data_valid => img_width_c26_num_data_valid,
        if_fifo_cap => img_width_c26_fifo_cap,
        if_empty_n => img_width_c26_empty_n,
        if_read => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_imgwidth_read);

    gradx_mat_data_U : component canny_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_gradx_mat_data2_din,
        if_full_n => gradx_mat_data_full_n,
        if_write => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_gradx_mat_data2_write,
        if_dout => gradx_mat_data_dout,
        if_num_data_valid => gradx_mat_data_num_data_valid,
        if_fifo_cap => gradx_mat_data_fifo_cap,
        if_empty_n => gradx_mat_data_empty_n,
        if_read => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_gradx_mat_data2_read);

    grady_mat_data_U : component canny_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_grady_mat_data5_din,
        if_full_n => grady_mat_data_full_n,
        if_write => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_grady_mat_data5_write,
        if_dout => grady_mat_data_dout,
        if_num_data_valid => grady_mat_data_num_data_valid,
        if_fifo_cap => grady_mat_data_fifo_cap,
        if_empty_n => grady_mat_data_empty_n,
        if_read => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_grady_mat_data5_read);

    img_height_c21_U : component canny_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_img_height_c21_din,
        if_full_n => img_height_c21_full_n,
        if_write => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_img_height_c21_write,
        if_dout => img_height_c21_dout,
        if_num_data_valid => img_height_c21_num_data_valid,
        if_fifo_cap => img_height_c21_fifo_cap,
        if_empty_n => img_height_c21_empty_n,
        if_read => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_img_height_read);

    img_width_c25_U : component canny_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_img_width_c25_din,
        if_full_n => img_width_c25_full_n,
        if_write => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_img_width_c25_write,
        if_dout => img_width_c25_dout,
        if_num_data_valid => img_width_c25_num_data_valid,
        if_fifo_cap => img_width_c25_fifo_cap,
        if_empty_n => img_width_c25_empty_n,
        if_read => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_img_width_read);

    gradx1_mat_data_U : component canny_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_gradx1_mat_data3_din,
        if_full_n => gradx1_mat_data_full_n,
        if_write => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_gradx1_mat_data3_write,
        if_dout => gradx1_mat_data_dout,
        if_num_data_valid => gradx1_mat_data_num_data_valid,
        if_fifo_cap => gradx1_mat_data_fifo_cap,
        if_empty_n => gradx1_mat_data_empty_n,
        if_read => xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_gradx1_mat_data3_read);

    gradx2_mat_data_U : component canny_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_gradx2_mat_data4_din,
        if_full_n => gradx2_mat_data_full_n,
        if_write => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_gradx2_mat_data4_write,
        if_dout => gradx2_mat_data_dout,
        if_num_data_valid => gradx2_mat_data_num_data_valid,
        if_fifo_cap => gradx2_mat_data_fifo_cap,
        if_empty_n => gradx2_mat_data_empty_n,
        if_read => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_gradx2_mat_data4_read);

    grady1_mat_data_U : component canny_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_grady1_mat_data6_din,
        if_full_n => grady1_mat_data_full_n,
        if_write => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_grady1_mat_data6_write,
        if_dout => grady1_mat_data_dout,
        if_num_data_valid => grady1_mat_data_num_data_valid,
        if_fifo_cap => grady1_mat_data_fifo_cap,
        if_empty_n => grady1_mat_data_empty_n,
        if_read => xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_grady1_mat_data6_read);

    grady2_mat_data_U : component canny_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_grady2_mat_data7_din,
        if_full_n => grady2_mat_data_full_n,
        if_write => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_grady2_mat_data7_write,
        if_dout => grady2_mat_data_dout,
        if_num_data_valid => grady2_mat_data_num_data_valid,
        if_fifo_cap => grady2_mat_data_fifo_cap,
        if_empty_n => grady2_mat_data_empty_n,
        if_read => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_grady2_mat_data7_read);

    img_height_c20_U : component canny_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_img_height_c20_din,
        if_full_n => img_height_c20_full_n,
        if_write => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_img_height_c20_write,
        if_dout => img_height_c20_dout,
        if_num_data_valid => img_height_c20_num_data_valid,
        if_fifo_cap => img_height_c20_fifo_cap,
        if_empty_n => img_height_c20_empty_n,
        if_read => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_imgheight_read);

    img_width_c24_U : component canny_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_img_width_c24_din,
        if_full_n => img_width_c24_full_n,
        if_write => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_img_width_c24_write,
        if_dout => img_width_c24_dout,
        if_num_data_valid => img_width_c24_num_data_valid,
        if_fifo_cap => img_width_c24_fifo_cap,
        if_empty_n => img_width_c24_empty_n,
        if_read => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_imgwidth_read);

    imgwidth_U : component canny_accel_fifo_w16_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFCannyKernel_Block_entry15_proc_U0_ap_return_0,
        if_full_n => imgwidth_full_n,
        if_write => ap_channel_done_imgwidth,
        if_dout => imgwidth_dout,
        if_num_data_valid => imgwidth_num_data_valid,
        if_fifo_cap => imgwidth_fifo_cap,
        if_empty_n => imgwidth_empty_n,
        if_read => xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_ap_ready);

    height_U : component canny_accel_fifo_w16_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFCannyKernel_Block_entry15_proc_U0_ap_return_1,
        if_full_n => height_full_n,
        if_write => ap_channel_done_height,
        if_dout => height_dout,
        if_num_data_valid => height_num_data_valid,
        if_fifo_cap => height_fifo_cap,
        if_empty_n => height_empty_n,
        if_read => xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_ap_ready);

    magnitude_mat_data_U : component canny_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_magnitude_mat_data8_din,
        if_full_n => magnitude_mat_data_full_n,
        if_write => xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_magnitude_mat_data8_write,
        if_dout => magnitude_mat_data_dout,
        if_num_data_valid => magnitude_mat_data_num_data_valid,
        if_fifo_cap => magnitude_mat_data_fifo_cap,
        if_empty_n => magnitude_mat_data_empty_n,
        if_read => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_magnitude_mat_data8_read);

    phase_mat_data_U : component canny_accel_fifo_w8_d5760_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_phase_mat_data9_din,
        if_full_n => phase_mat_data_full_n,
        if_write => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_phase_mat_data9_write,
        if_dout => phase_mat_data_dout,
        if_num_data_valid => phase_mat_data_num_data_valid,
        if_fifo_cap => phase_mat_data_fifo_cap,
        if_empty_n => phase_mat_data_empty_n,
        if_read => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_phase_mat_data9_read);

    img_height_c19_U : component canny_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_img_height_c19_din,
        if_full_n => img_height_c19_full_n,
        if_write => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_img_height_c19_write,
        if_dout => img_height_c19_dout,
        if_num_data_valid => img_height_c19_num_data_valid,
        if_fifo_cap => img_height_c19_fifo_cap,
        if_empty_n => img_height_c19_empty_n,
        if_read => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_imgheight_read);

    img_width_c23_U : component canny_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_img_width_c23_din,
        if_full_n => img_width_c23_full_n,
        if_write => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_img_width_c23_write,
        if_dout => img_width_c23_dout,
        if_num_data_valid => img_width_c23_num_data_valid,
        if_fifo_cap => img_width_c23_fifo_cap,
        if_empty_n => img_width_c23_empty_n,
        if_read => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_imgwidth_read);

    nms_mat_data_U : component canny_accel_fifo_w2_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_nms_mat_data10_din,
        if_full_n => nms_mat_data_full_n,
        if_write => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_nms_mat_data10_write,
        if_dout => nms_mat_data_dout,
        if_num_data_valid => nms_mat_data_num_data_valid,
        if_fifo_cap => nms_mat_data_fifo_cap,
        if_empty_n => nms_mat_data_empty_n,
        if_read => xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_nms_mat_data10_read);

    img_height_c_U : component canny_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_img_height_c_din,
        if_full_n => img_height_c_full_n,
        if_write => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_img_height_c_write,
        if_dout => img_height_c_dout,
        if_num_data_valid => img_height_c_num_data_valid,
        if_fifo_cap => img_height_c_fifo_cap,
        if_empty_n => img_height_c_empty_n,
        if_read => xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_imgheight_read);

    img_width_c_U : component canny_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_img_width_c_din,
        if_full_n => img_width_c_full_n,
        if_write => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_img_width_c_write,
        if_dout => img_width_c_dout,
        if_num_data_valid => img_width_c_num_data_valid,
        if_fifo_cap => img_width_c_fifo_cap,
        if_empty_n => img_width_c_empty_n,
        if_read => xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_imgwidth_read);

    start_for_xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_U : component canny_accel_start_for_xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_din,
        if_full_n => start_for_xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_full_n,
        if_write => entry_proc16_U0_start_write,
        if_dout => start_for_xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_dout,
        if_empty_n => start_for_xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_empty_n,
        if_read => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_ap_ready);

    start_for_xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_U : component canny_accel_start_for_xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_din,
        if_full_n => start_for_xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_full_n,
        if_write => xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_start_write,
        if_dout => start_for_xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_dout,
        if_empty_n => start_for_xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_empty_n,
        if_read => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_ap_ready);

    start_for_xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_U : component canny_accel_start_for_xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_din,
        if_full_n => start_for_xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_full_n,
        if_write => xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_start_write,
        if_dout => start_for_xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_dout,
        if_empty_n => start_for_xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_empty_n,
        if_read => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_ap_ready);

    start_for_xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_U : component canny_accel_start_for_xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_din,
        if_full_n => start_for_xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_full_n,
        if_write => xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_start_write,
        if_dout => start_for_xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_dout,
        if_empty_n => start_for_xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_empty_n,
        if_read => xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_ap_ready);

    start_for_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_U : component canny_accel_start_for_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_din,
        if_full_n => start_for_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_full_n,
        if_write => xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_start_write,
        if_dout => start_for_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_dout,
        if_empty_n => start_for_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_empty_n,
        if_read => xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_ap_ready);





    ap_sync_reg_channel_write_height_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_height <= ap_const_logic_0;
            else
                if (((xFCannyKernel_Block_entry15_proc_U0_ap_done and xFCannyKernel_Block_entry15_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_height <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_height <= ap_sync_channel_write_height;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_imgwidth_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_imgwidth <= ap_const_logic_0;
            else
                if (((xFCannyKernel_Block_entry15_proc_U0_ap_done and xFCannyKernel_Block_entry15_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_imgwidth <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_imgwidth <= ap_sync_channel_write_imgwidth;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_entry_proc16_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_entry_proc16_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_entry_proc16_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_entry_proc16_U0_ap_ready <= ap_sync_entry_proc16_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_ready <= ap_sync_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_xFCannyKernel_Block_entry15_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_xFCannyKernel_Block_entry15_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_xFCannyKernel_Block_entry15_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_xFCannyKernel_Block_entry15_proc_U0_ap_ready <= ap_sync_xFCannyKernel_Block_entry15_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    ap_channel_done_height <= (xFCannyKernel_Block_entry15_proc_U0_ap_done and (ap_sync_reg_channel_write_height xor ap_const_logic_1));
    ap_channel_done_imgwidth <= (xFCannyKernel_Block_entry15_proc_U0_ap_done and (ap_sync_reg_channel_write_imgwidth xor ap_const_logic_1));
    ap_done <= xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_ap_done;
    ap_idle <= (xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_ap_idle and xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_ap_idle and xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_ap_idle and xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_ap_idle and xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_ap_idle and xFCannyKernel_Block_entry15_proc_U0_ap_idle and xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_idle and xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_ap_idle and (height_empty_n xor ap_const_logic_1) and (imgwidth_empty_n xor ap_const_logic_1) and entry_proc16_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_channel_write_height <= ((height_full_n and ap_channel_done_height) or ap_sync_reg_channel_write_height);
    ap_sync_channel_write_imgwidth <= ((imgwidth_full_n and ap_channel_done_imgwidth) or ap_sync_reg_channel_write_imgwidth);
    ap_sync_entry_proc16_U0_ap_ready <= (entry_proc16_U0_ap_ready or ap_sync_reg_entry_proc16_U0_ap_ready);
    ap_sync_ready <= (ap_sync_xFCannyKernel_Block_entry15_proc_U0_ap_ready and ap_sync_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_ready and ap_sync_entry_proc16_U0_ap_ready);
    ap_sync_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_ready <= (xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_ready or ap_sync_reg_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_ready);
    ap_sync_xFCannyKernel_Block_entry15_proc_U0_ap_ready <= (xFCannyKernel_Block_entry15_proc_U0_ap_ready or ap_sync_reg_xFCannyKernel_Block_entry15_proc_U0_ap_ready);
    dst_mat_data2_din <= xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_dst_mat_data2_din;
    dst_mat_data2_write <= xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_dst_mat_data2_write;
    entry_proc16_U0_ap_continue <= ap_const_logic_1;
    entry_proc16_U0_ap_start <= ((ap_sync_reg_entry_proc16_U0_ap_ready xor ap_const_logic_1) and ap_start);
    in_mat_data1_read <= xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_in_mat_data1_read;
    start_for_xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_ap_continue <= ap_const_logic_1;
    xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_ap_start <= start_for_xFAngleKernel_2_0_1080_1920_3_0_1_2_2_5_1_1920_5760_U0_empty_n;
    xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_continue <= ap_const_logic_1;
    xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_start <= ((ap_sync_reg_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_2_2_1_1920_U0_ap_ready xor ap_const_logic_1) and ap_start);
    xFCannyKernel_Block_entry15_proc_U0_ap_continue <= (ap_sync_channel_write_imgwidth and ap_sync_channel_write_height);
    xFCannyKernel_Block_entry15_proc_U0_ap_start <= ((ap_sync_reg_xFCannyKernel_Block_entry15_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_ap_continue <= ap_const_logic_1;
    xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_ap_start <= start_for_xFDuplicate_rows_2_1080_1920_3_1_2_2_2_2_2_2_5_1920_U0_empty_n;
    xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_ap_continue <= ap_const_logic_1;
    xFMagnitudeKernel_2_2_1080_1920_3_3_1_2_2_2_5_5_1920_U0_ap_start <= (imgwidth_empty_n and height_empty_n);
    xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_ap_continue <= ap_continue;
    xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_ap_start <= start_for_xFPackNMS_8_8_1080_1920_12_12_1_32_2_2_0_20_U0_empty_n;
    xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_ap_continue <= ap_const_logic_1;
    xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_ap_start <= start_for_xFSobel_0_2_1080_1920_0_3_1_2_2_2_1_5_3_false_U0_empty_n;
    xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_ap_continue <= ap_const_logic_1;
    xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_ap_start <= start_for_xFSuppression3x3_2_0_8_1080_1920_3_0_12_1_2_5_1_0_1920_5760_2_U0_empty_n;
end behav;
