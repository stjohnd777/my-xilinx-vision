// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module canny_accel_xFSobel3x3_Pipeline_Col_Loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        gaussian_mat_data1_dout,
        gaussian_mat_data1_num_data_valid,
        gaussian_mat_data1_fifo_cap,
        gaussian_mat_data1_empty_n,
        gaussian_mat_data1_read,
        gradx_mat_data2_din,
        gradx_mat_data2_num_data_valid,
        gradx_mat_data2_fifo_cap,
        gradx_mat_data2_full_n,
        gradx_mat_data2_write,
        grady_mat_data5_din,
        grady_mat_data5_num_data_valid,
        grady_mat_data5_fifo_cap,
        grady_mat_data5_full_n,
        grady_mat_data5_write,
        img_width,
        buf_V_4_address0,
        buf_V_4_ce0,
        buf_V_4_q0,
        buf_V_4_address1,
        buf_V_4_ce1,
        buf_V_4_we1,
        buf_V_4_d1,
        buf_V_address0,
        buf_V_ce0,
        buf_V_q0,
        buf_V_address1,
        buf_V_ce1,
        buf_V_we1,
        buf_V_d1,
        buf_V_3_address0,
        buf_V_3_ce0,
        buf_V_3_q0,
        buf_V_3_address1,
        buf_V_3_ce1,
        buf_V_3_we1,
        buf_V_3_d1,
        row_ind_V_9,
        row_ind_V_10,
        row_ind_V_11,
        sub_i460_i_cast,
        row_ind_V_9_cast,
        spec_select57,
        row_ind_V_10_cast,
        spec_select61,
        row_ind_V_11_cast,
        spec_select65,
        cmp_i_i554_i
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] gaussian_mat_data1_dout;
input  [1:0] gaussian_mat_data1_num_data_valid;
input  [1:0] gaussian_mat_data1_fifo_cap;
input   gaussian_mat_data1_empty_n;
output   gaussian_mat_data1_read;
output  [15:0] gradx_mat_data2_din;
input  [1:0] gradx_mat_data2_num_data_valid;
input  [1:0] gradx_mat_data2_fifo_cap;
input   gradx_mat_data2_full_n;
output   gradx_mat_data2_write;
output  [15:0] grady_mat_data5_din;
input  [1:0] grady_mat_data5_num_data_valid;
input  [1:0] grady_mat_data5_fifo_cap;
input   grady_mat_data5_full_n;
output   grady_mat_data5_write;
input  [15:0] img_width;
output  [10:0] buf_V_4_address0;
output   buf_V_4_ce0;
input  [7:0] buf_V_4_q0;
output  [10:0] buf_V_4_address1;
output   buf_V_4_ce1;
output   buf_V_4_we1;
output  [7:0] buf_V_4_d1;
output  [10:0] buf_V_address0;
output   buf_V_ce0;
input  [7:0] buf_V_q0;
output  [10:0] buf_V_address1;
output   buf_V_ce1;
output   buf_V_we1;
output  [7:0] buf_V_d1;
output  [10:0] buf_V_3_address0;
output   buf_V_3_ce0;
input  [7:0] buf_V_3_q0;
output  [10:0] buf_V_3_address1;
output   buf_V_3_ce1;
output   buf_V_3_we1;
output  [7:0] buf_V_3_d1;
input  [12:0] row_ind_V_9;
input  [12:0] row_ind_V_10;
input  [12:0] row_ind_V_11;
input  [1:0] sub_i460_i_cast;
input  [1:0] row_ind_V_9_cast;
input  [0:0] spec_select57;
input  [1:0] row_ind_V_10_cast;
input  [0:0] spec_select61;
input  [1:0] row_ind_V_11_cast;
input  [0:0] spec_select65;
input  [0:0] cmp_i_i554_i;

reg ap_idle;
reg gaussian_mat_data1_read;
reg gradx_mat_data2_write;
reg grady_mat_data5_write;
reg buf_V_4_ce0;
reg buf_V_4_ce1;
reg buf_V_4_we1;
reg buf_V_ce0;
reg buf_V_ce1;
reg buf_V_we1;
reg buf_V_3_ce0;
reg buf_V_3_ce1;
reg buf_V_3_we1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln1027_reg_817;
reg   [0:0] and_ln207_reg_828;
reg    ap_predicate_op54_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg   [0:0] icmp_ln1027_reg_817_pp0_iter3_reg;
reg   [0:0] icmp_ln1031_reg_847;
reg   [0:0] icmp_ln1031_reg_847_pp0_iter3_reg;
reg    ap_predicate_op130_write_state5;
reg    ap_predicate_op131_write_state5;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1027_fu_365_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gaussian_mat_data1_blk_n;
wire    ap_block_pp0_stage0;
reg    gradx_mat_data2_blk_n;
reg    grady_mat_data5_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [1:0] row_ind_V_11_cast_read_reg_765;
reg   [12:0] col_V_reg_810;
reg   [12:0] col_V_reg_810_pp0_iter1_reg;
reg   [0:0] icmp_ln1027_reg_817_pp0_iter1_reg;
reg   [0:0] icmp_ln1027_reg_817_pp0_iter2_reg;
wire   [0:0] icmp_ln1027_1_fu_377_p2;
reg   [0:0] icmp_ln1027_1_reg_821;
reg   [0:0] icmp_ln1027_1_reg_821_pp0_iter1_reg;
reg   [0:0] icmp_ln1027_1_reg_821_pp0_iter2_reg;
wire   [0:0] and_ln207_fu_383_p2;
wire   [0:0] icmp_ln1031_fu_406_p2;
reg   [7:0] src_buf_V_17_reg_851;
reg   [7:0] src_buf_V_15_reg_862;
wire   [7:0] src_buf_V_18_fu_498_p3;
reg   [7:0] src_buf_V_18_reg_868;
wire   [7:0] src_buf_V_19_fu_505_p3;
reg   [7:0] src_buf_V_19_reg_874;
wire   [7:0] src_buf_V_20_fu_512_p3;
reg   [7:0] src_buf_V_20_reg_880;
reg    ap_condition_exit_pp0_iter3_stage0;
wire   [7:0] ap_phi_reg_pp0_iter0_src_buf_V_14_reg_296;
reg   [7:0] ap_phi_reg_pp0_iter1_src_buf_V_14_reg_296;
reg   [7:0] ap_phi_reg_pp0_iter2_src_buf_V_14_reg_296;
reg   [7:0] ap_phi_reg_pp0_iter3_src_buf_V_14_reg_296;
reg   [7:0] ap_phi_reg_pp0_iter4_src_buf_V_14_reg_296;
wire   [7:0] ap_phi_reg_pp0_iter0_src_buf_V_13_reg_305;
reg   [7:0] ap_phi_reg_pp0_iter1_src_buf_V_13_reg_305;
reg   [7:0] ap_phi_reg_pp0_iter2_src_buf_V_13_reg_305;
reg   [7:0] ap_phi_reg_pp0_iter3_src_buf_V_13_reg_305;
reg   [7:0] ap_phi_reg_pp0_iter4_src_buf_V_13_reg_305;
wire   [7:0] ap_phi_reg_pp0_iter0_src_buf_V_12_reg_314;
reg   [7:0] ap_phi_reg_pp0_iter1_src_buf_V_12_reg_314;
reg   [7:0] ap_phi_reg_pp0_iter2_src_buf_V_12_reg_314;
reg   [7:0] ap_phi_reg_pp0_iter3_src_buf_V_12_reg_314;
reg   [7:0] ap_phi_reg_pp0_iter4_src_buf_V_12_reg_314;
wire   [63:0] zext_ln541_fu_394_p1;
wire   [63:0] conv_i377_i_fu_400_p1;
reg   [12:0] col_V_7_fu_98;
wire   [12:0] col_V_8_fu_371_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_col_V;
reg   [7:0] src_buf_V_fu_102;
reg   [7:0] src_buf_V_3_fu_106;
reg   [7:0] src_buf_V_5_fu_110;
reg   [7:0] src_buf_V_1_fu_114;
reg   [7:0] src_buf_V_4_fu_118;
reg   [7:0] src_buf_V_2_fu_122;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] zext_ln1027_fu_361_p1;
wire   [12:0] tmp_5_fu_420_p5;
wire   [1:0] tmp_6_fu_432_p4;
wire   [7:0] tmp_6_fu_432_p5;
wire   [7:0] tmp_7_fu_444_p5;
wire   [7:0] tmp_s_fu_462_p5;
wire   [7:0] tmp_4_fu_480_p5;
wire   [7:0] src_buf_V_8_fu_491_p3;
wire   [7:0] src_buf_V_7_fu_473_p3;
wire   [7:0] src_buf_V_6_fu_455_p3;
wire   [8:0] r_V_fu_543_p3;
wire   [8:0] r_V_1_fu_555_p3;
wire   [8:0] zext_ln1495_fu_566_p1;
wire   [8:0] zext_ln1495_1_fu_569_p1;
wire   [8:0] zext_ln1495_2_fu_578_p1;
wire   [8:0] zext_ln1495_3_fu_582_p1;
wire   [8:0] ret_V_fu_572_p2;
wire   [8:0] ret_V_1_fu_586_p2;
wire   [9:0] zext_ln1669_1_fu_562_p1;
wire   [9:0] zext_ln1669_fu_551_p1;
wire   [9:0] g_x_V_3_fu_600_p2;
wire  signed [10:0] sext_ln106_fu_606_p1;
wire   [10:0] zext_ln100_fu_592_p1;
wire   [10:0] g_x_V_4_fu_610_p2;
wire   [10:0] zext_ln105_fu_596_p1;
wire   [10:0] g_x_V_fu_616_p2;
wire   [8:0] r_V_2_fu_627_p3;
wire   [8:0] r_V_3_fu_638_p3;
wire   [8:0] ret_V_2_fu_649_p2;
wire   [8:0] ret_V_3_fu_655_p2;
wire   [9:0] zext_ln121_fu_661_p1;
wire   [9:0] zext_ln1669_3_fu_645_p1;
wire   [9:0] g_y_V_3_fu_669_p2;
wire   [10:0] zext_ln129_fu_675_p1;
wire   [10:0] zext_ln1669_2_fu_634_p1;
wire   [10:0] g_y_V_4_fu_679_p2;
wire   [10:0] zext_ln128_fu_665_p1;
wire   [10:0] g_y_V_fu_685_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
end

canny_accel_mux_32_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 13 ))
mux_32_13_1_1_U117(
    .din0(row_ind_V_9),
    .din1(row_ind_V_10),
    .din2(row_ind_V_11),
    .din3(sub_i460_i_cast),
    .dout(tmp_5_fu_420_p5)
);

canny_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U118(
    .din0(buf_V_q0),
    .din1(buf_V_3_q0),
    .din2(buf_V_4_q0),
    .din3(tmp_6_fu_432_p4),
    .dout(tmp_6_fu_432_p5)
);

canny_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U119(
    .din0(buf_V_q0),
    .din1(buf_V_3_q0),
    .din2(buf_V_4_q0),
    .din3(row_ind_V_9_cast),
    .dout(tmp_7_fu_444_p5)
);

canny_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U120(
    .din0(buf_V_q0),
    .din1(buf_V_3_q0),
    .din2(buf_V_4_q0),
    .din3(row_ind_V_10_cast),
    .dout(tmp_s_fu_462_p5)
);

canny_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U121(
    .din0(buf_V_q0),
    .din1(buf_V_3_q0),
    .din2(buf_V_4_q0),
    .din3(row_ind_V_11_cast),
    .dout(tmp_4_fu_480_p5)
);

canny_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter3_stage0)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((icmp_ln1031_reg_847 == 1'd1) & (icmp_ln1027_reg_817_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_src_buf_V_12_reg_314 <= src_buf_V_20_fu_512_p3;
        end else if (((icmp_ln1031_reg_847 == 1'd0) & (icmp_ln1027_reg_817_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_src_buf_V_12_reg_314 <= src_buf_V_1_fu_114;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_src_buf_V_12_reg_314 <= ap_phi_reg_pp0_iter3_src_buf_V_12_reg_314;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((icmp_ln1031_reg_847 == 1'd1) & (icmp_ln1027_reg_817_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_src_buf_V_13_reg_305 <= src_buf_V_19_fu_505_p3;
        end else if (((icmp_ln1031_reg_847 == 1'd0) & (icmp_ln1027_reg_817_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_src_buf_V_13_reg_305 <= src_buf_V_4_fu_118;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_src_buf_V_13_reg_305 <= ap_phi_reg_pp0_iter3_src_buf_V_13_reg_305;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((icmp_ln1031_reg_847 == 1'd1) & (icmp_ln1027_reg_817_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_src_buf_V_14_reg_296 <= src_buf_V_18_fu_498_p3;
        end else if (((icmp_ln1031_reg_847 == 1'd0) & (icmp_ln1027_reg_817_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_src_buf_V_14_reg_296 <= src_buf_V_2_fu_122;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_src_buf_V_14_reg_296 <= ap_phi_reg_pp0_iter3_src_buf_V_14_reg_296;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1027_fu_365_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            col_V_7_fu_98 <= col_V_8_fu_371_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            col_V_7_fu_98 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_V_1_fu_114 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_817_pp0_iter2_reg == 1'd0))) begin
            src_buf_V_1_fu_114 <= src_buf_V_20_fu_512_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_V_2_fu_122 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_817_pp0_iter2_reg == 1'd0))) begin
            src_buf_V_2_fu_122 <= src_buf_V_18_fu_498_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_V_3_fu_106 <= 8'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            src_buf_V_3_fu_106 <= ap_phi_reg_pp0_iter4_src_buf_V_13_reg_305;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_V_4_fu_118 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_817_pp0_iter2_reg == 1'd0))) begin
            src_buf_V_4_fu_118 <= src_buf_V_19_fu_505_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_V_5_fu_110 <= 8'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            src_buf_V_5_fu_110 <= ap_phi_reg_pp0_iter4_src_buf_V_14_reg_296;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_V_fu_102 <= 8'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            src_buf_V_fu_102 <= ap_phi_reg_pp0_iter4_src_buf_V_12_reg_314;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_fu_365_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln207_reg_828 <= and_ln207_fu_383_p2;
        icmp_ln1027_1_reg_821 <= icmp_ln1027_1_fu_377_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        col_V_reg_810 <= ap_sig_allocacmp_col_V;
        col_V_reg_810_pp0_iter1_reg <= col_V_reg_810;
        icmp_ln1027_1_reg_821_pp0_iter1_reg <= icmp_ln1027_1_reg_821;
        icmp_ln1027_reg_817 <= icmp_ln1027_fu_365_p2;
        icmp_ln1027_reg_817_pp0_iter1_reg <= icmp_ln1027_reg_817;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln1027_1_reg_821_pp0_iter2_reg <= icmp_ln1027_1_reg_821_pp0_iter1_reg;
        icmp_ln1027_reg_817_pp0_iter2_reg <= icmp_ln1027_reg_817_pp0_iter1_reg;
        icmp_ln1027_reg_817_pp0_iter3_reg <= icmp_ln1027_reg_817_pp0_iter2_reg;
        icmp_ln1031_reg_847_pp0_iter3_reg <= icmp_ln1031_reg_847;
        src_buf_V_15_reg_862 <= src_buf_V_2_fu_122;
        src_buf_V_17_reg_851 <= src_buf_V_1_fu_114;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_src_buf_V_12_reg_314 <= ap_phi_reg_pp0_iter0_src_buf_V_12_reg_314;
        ap_phi_reg_pp0_iter1_src_buf_V_13_reg_305 <= ap_phi_reg_pp0_iter0_src_buf_V_13_reg_305;
        ap_phi_reg_pp0_iter1_src_buf_V_14_reg_296 <= ap_phi_reg_pp0_iter0_src_buf_V_14_reg_296;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_src_buf_V_12_reg_314 <= ap_phi_reg_pp0_iter1_src_buf_V_12_reg_314;
        ap_phi_reg_pp0_iter2_src_buf_V_13_reg_305 <= ap_phi_reg_pp0_iter1_src_buf_V_13_reg_305;
        ap_phi_reg_pp0_iter2_src_buf_V_14_reg_296 <= ap_phi_reg_pp0_iter1_src_buf_V_14_reg_296;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_src_buf_V_12_reg_314 <= ap_phi_reg_pp0_iter2_src_buf_V_12_reg_314;
        ap_phi_reg_pp0_iter3_src_buf_V_13_reg_305 <= ap_phi_reg_pp0_iter2_src_buf_V_13_reg_305;
        ap_phi_reg_pp0_iter3_src_buf_V_14_reg_296 <= ap_phi_reg_pp0_iter2_src_buf_V_14_reg_296;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_817_pp0_iter1_reg == 1'd0))) begin
        icmp_ln1031_reg_847 <= icmp_ln1031_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_817_pp0_iter2_reg == 1'd0))) begin
        src_buf_V_18_reg_868 <= src_buf_V_18_fu_498_p3;
        src_buf_V_19_reg_874 <= src_buf_V_19_fu_505_p3;
        src_buf_V_20_reg_880 <= src_buf_V_20_fu_512_p3;
    end
end

always @ (*) begin
    if (((icmp_ln1027_fu_365_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_817_pp0_iter2_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_col_V = 13'd0;
    end else begin
        ap_sig_allocacmp_col_V = col_V_7_fu_98;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_V_3_ce0 = 1'b1;
    end else begin
        buf_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_V_3_ce1 = 1'b1;
    end else begin
        buf_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln207_reg_828) & (icmp_ln1027_reg_817 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (row_ind_V_11_cast_read_reg_765 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_V_3_we1 = 1'b1;
    end else begin
        buf_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_V_4_ce0 = 1'b1;
    end else begin
        buf_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_V_4_ce1 = 1'b1;
    end else begin
        buf_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(row_ind_V_11_cast_read_reg_765 == 2'd0) & ~(row_ind_V_11_cast_read_reg_765 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln207_reg_828) & (icmp_ln1027_reg_817 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_V_4_we1 = 1'b1;
    end else begin
        buf_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_V_ce0 = 1'b1;
    end else begin
        buf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_V_ce1 = 1'b1;
    end else begin
        buf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln207_reg_828) & (icmp_ln1027_reg_817 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (row_ind_V_11_cast_read_reg_765 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_V_we1 = 1'b1;
    end else begin
        buf_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op54_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gaussian_mat_data1_blk_n = gaussian_mat_data1_empty_n;
    end else begin
        gaussian_mat_data1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op54_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gaussian_mat_data1_read = 1'b1;
    end else begin
        gaussian_mat_data1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op130_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        gradx_mat_data2_blk_n = gradx_mat_data2_full_n;
    end else begin
        gradx_mat_data2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op130_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        gradx_mat_data2_write = 1'b1;
    end else begin
        gradx_mat_data2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op131_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grady_mat_data5_blk_n = grady_mat_data5_full_n;
    end else begin
        grady_mat_data5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op131_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grady_mat_data5_write = 1'b1;
    end else begin
        grady_mat_data5_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln207_fu_383_p2 = (icmp_ln1027_1_fu_377_p2 & cmp_i_i554_i);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (((ap_predicate_op131_write_state5 == 1'b1) & (grady_mat_data5_full_n == 1'b0)) | ((ap_predicate_op130_write_state5 == 1'b1) & (gradx_mat_data2_full_n == 1'b0)))) | ((ap_predicate_op54_read_state2 == 1'b1) & (gaussian_mat_data1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (((ap_predicate_op131_write_state5 == 1'b1) & (grady_mat_data5_full_n == 1'b0)) | ((ap_predicate_op130_write_state5 == 1'b1) & (gradx_mat_data2_full_n == 1'b0)))) | ((ap_predicate_op54_read_state2 == 1'b1) & (gaussian_mat_data1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (((ap_predicate_op131_write_state5 == 1'b1) & (grady_mat_data5_full_n == 1'b0)) | ((ap_predicate_op130_write_state5 == 1'b1) & (gradx_mat_data2_full_n == 1'b0)))) | ((ap_predicate_op54_read_state2 == 1'b1) & (gaussian_mat_data1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op54_read_state2 == 1'b1) & (gaussian_mat_data1_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = (((ap_predicate_op131_write_state5 == 1'b1) & (grady_mat_data5_full_n == 1'b0)) | ((ap_predicate_op130_write_state5 == 1'b1) & (gradx_mat_data2_full_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_src_buf_V_12_reg_314 = 'bx;

assign ap_phi_reg_pp0_iter0_src_buf_V_13_reg_305 = 'bx;

assign ap_phi_reg_pp0_iter0_src_buf_V_14_reg_296 = 'bx;

always @ (*) begin
    ap_predicate_op130_write_state5 = ((icmp_ln1031_reg_847_pp0_iter3_reg == 1'd0) & (icmp_ln1027_reg_817_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op131_write_state5 = ((icmp_ln1031_reg_847_pp0_iter3_reg == 1'd0) & (icmp_ln1027_reg_817_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op54_read_state2 = ((1'd1 == and_ln207_reg_828) & (icmp_ln1027_reg_817 == 1'd0));
end

assign buf_V_3_address0 = conv_i377_i_fu_400_p1;

assign buf_V_3_address1 = zext_ln541_fu_394_p1;

assign buf_V_3_d1 = gaussian_mat_data1_dout;

assign buf_V_4_address0 = conv_i377_i_fu_400_p1;

assign buf_V_4_address1 = zext_ln541_fu_394_p1;

assign buf_V_4_d1 = gaussian_mat_data1_dout;

assign buf_V_address0 = conv_i377_i_fu_400_p1;

assign buf_V_address1 = zext_ln541_fu_394_p1;

assign buf_V_d1 = gaussian_mat_data1_dout;

assign col_V_8_fu_371_p2 = (ap_sig_allocacmp_col_V + 13'd1);

assign conv_i377_i_fu_400_p1 = col_V_reg_810_pp0_iter1_reg;

assign g_x_V_3_fu_600_p2 = (zext_ln1669_1_fu_562_p1 - zext_ln1669_fu_551_p1);

assign g_x_V_4_fu_610_p2 = ($signed(sext_ln106_fu_606_p1) + $signed(zext_ln100_fu_592_p1));

assign g_x_V_fu_616_p2 = (g_x_V_4_fu_610_p2 - zext_ln105_fu_596_p1);

assign g_y_V_3_fu_669_p2 = (zext_ln121_fu_661_p1 + zext_ln1669_3_fu_645_p1);

assign g_y_V_4_fu_679_p2 = (zext_ln129_fu_675_p1 - zext_ln1669_2_fu_634_p1);

assign g_y_V_fu_685_p2 = (g_y_V_4_fu_679_p2 - zext_ln128_fu_665_p1);

assign gradx_mat_data2_din = $signed(g_x_V_fu_616_p2);

assign grady_mat_data5_din = $signed(g_y_V_fu_685_p2);

assign icmp_ln1027_1_fu_377_p2 = ((zext_ln1027_fu_361_p1 < img_width) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_365_p2 = ((zext_ln1027_fu_361_p1 > img_width) ? 1'b1 : 1'b0);

assign icmp_ln1031_fu_406_p2 = ((col_V_reg_810_pp0_iter1_reg == 13'd0) ? 1'b1 : 1'b0);

assign r_V_1_fu_555_p3 = {{src_buf_V_19_reg_874}, {1'd0}};

assign r_V_2_fu_627_p3 = {{src_buf_V_17_reg_851}, {1'd0}};

assign r_V_3_fu_638_p3 = {{src_buf_V_15_reg_862}, {1'd0}};

assign r_V_fu_543_p3 = {{src_buf_V_3_fu_106}, {1'd0}};

assign ret_V_1_fu_586_p2 = (zext_ln1495_2_fu_578_p1 + zext_ln1495_3_fu_582_p1);

assign ret_V_2_fu_649_p2 = (zext_ln1495_3_fu_582_p1 + zext_ln1495_1_fu_569_p1);

assign ret_V_3_fu_655_p2 = (zext_ln1495_2_fu_578_p1 + zext_ln1495_fu_566_p1);

assign ret_V_fu_572_p2 = (zext_ln1495_fu_566_p1 + zext_ln1495_1_fu_569_p1);

assign row_ind_V_11_cast_read_reg_765 = row_ind_V_11_cast;

assign sext_ln106_fu_606_p1 = $signed(g_x_V_3_fu_600_p2);

assign src_buf_V_18_fu_498_p3 = ((icmp_ln1027_1_reg_821_pp0_iter2_reg[0:0] == 1'b1) ? src_buf_V_8_fu_491_p3 : src_buf_V_2_fu_122);

assign src_buf_V_19_fu_505_p3 = ((icmp_ln1027_1_reg_821_pp0_iter2_reg[0:0] == 1'b1) ? src_buf_V_7_fu_473_p3 : src_buf_V_4_fu_118);

assign src_buf_V_20_fu_512_p3 = ((icmp_ln1027_1_reg_821_pp0_iter2_reg[0:0] == 1'b1) ? src_buf_V_6_fu_455_p3 : src_buf_V_1_fu_114);

assign src_buf_V_6_fu_455_p3 = ((spec_select57[0:0] == 1'b1) ? tmp_6_fu_432_p5 : tmp_7_fu_444_p5);

assign src_buf_V_7_fu_473_p3 = ((spec_select61[0:0] == 1'b1) ? tmp_6_fu_432_p5 : tmp_s_fu_462_p5);

assign src_buf_V_8_fu_491_p3 = ((spec_select65[0:0] == 1'b1) ? tmp_6_fu_432_p5 : tmp_4_fu_480_p5);

assign tmp_6_fu_432_p4 = tmp_5_fu_420_p5[1:0];

assign zext_ln100_fu_592_p1 = ret_V_fu_572_p2;

assign zext_ln1027_fu_361_p1 = ap_sig_allocacmp_col_V;

assign zext_ln105_fu_596_p1 = ret_V_1_fu_586_p2;

assign zext_ln121_fu_661_p1 = ret_V_2_fu_649_p2;

assign zext_ln128_fu_665_p1 = ret_V_3_fu_655_p2;

assign zext_ln129_fu_675_p1 = g_y_V_3_fu_669_p2;

assign zext_ln1495_1_fu_569_p1 = src_buf_V_18_reg_868;

assign zext_ln1495_2_fu_578_p1 = src_buf_V_fu_102;

assign zext_ln1495_3_fu_582_p1 = src_buf_V_5_fu_110;

assign zext_ln1495_fu_566_p1 = src_buf_V_20_reg_880;

assign zext_ln1669_1_fu_562_p1 = r_V_1_fu_555_p3;

assign zext_ln1669_2_fu_634_p1 = r_V_2_fu_627_p3;

assign zext_ln1669_3_fu_645_p1 = r_V_3_fu_638_p3;

assign zext_ln1669_fu_551_p1 = r_V_fu_543_p3;

assign zext_ln541_fu_394_p1 = col_V_reg_810;

endmodule //canny_accel_xFSobel3x3_Pipeline_Col_Loop
