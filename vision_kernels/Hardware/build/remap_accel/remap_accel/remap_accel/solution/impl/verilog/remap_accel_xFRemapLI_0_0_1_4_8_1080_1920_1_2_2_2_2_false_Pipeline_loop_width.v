// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module remap_accel_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        imgInput_data1_dout,
        imgInput_data1_num_data_valid,
        imgInput_data1_fifo_cap,
        imgInput_data1_empty_n,
        imgInput_data1_read,
        mapX_data2_dout,
        mapX_data2_num_data_valid,
        mapX_data2_fifo_cap,
        mapX_data2_empty_n,
        mapX_data2_read,
        mapY_data3_dout,
        mapY_data3_num_data_valid,
        mapY_data3_fifo_cap,
        mapY_data3_empty_n,
        mapY_data3_read,
        imgOutput_data4_din,
        imgOutput_data4_num_data_valid,
        imgOutput_data4_fifo_cap,
        imgOutput_data4_full_n,
        imgOutput_data4_write,
        r2_address0,
        r2_ce0,
        r2_we0,
        r2_d0,
        r2_address1,
        r2_ce1,
        r2_q1,
        idxprom2582_i,
        r1_address0,
        r1_ce0,
        r1_we0,
        r1_d0,
        r1_address1,
        r1_ce1,
        r1_q1,
        add106_i,
        i,
        cmp263_i,
        mul_ln315,
        i_cast9_i,
        cols_cast_i,
        cmp111_i,
        bitcast_ln348,
        icmp_ln348_6,
        conv1_i,
        bitcast_ln349,
        icmp_ln349_4,
        conv2_i
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] imgInput_data1_dout;
input  [1:0] imgInput_data1_num_data_valid;
input  [1:0] imgInput_data1_fifo_cap;
input   imgInput_data1_empty_n;
output   imgInput_data1_read;
input  [31:0] mapX_data2_dout;
input  [1:0] mapX_data2_num_data_valid;
input  [1:0] mapX_data2_fifo_cap;
input   mapX_data2_empty_n;
output   mapX_data2_read;
input  [31:0] mapY_data3_dout;
input  [1:0] mapY_data3_num_data_valid;
input  [1:0] mapY_data3_fifo_cap;
input   mapY_data3_empty_n;
output   mapY_data3_read;
output  [7:0] imgOutput_data4_din;
input  [1:0] imgOutput_data4_num_data_valid;
input  [1:0] imgOutput_data4_fifo_cap;
input   imgOutput_data4_full_n;
output   imgOutput_data4_write;
output  [2:0] r2_address0;
output   r2_ce0;
output   r2_we0;
output  [16:0] r2_d0;
output  [2:0] r2_address1;
output   r2_ce1;
input  [16:0] r2_q1;
input  [2:0] idxprom2582_i;
output  [2:0] r1_address0;
output   r1_ce0;
output   r1_we0;
output  [16:0] r1_d0;
output  [2:0] r1_address1;
output   r1_ce1;
input  [16:0] r1_q1;
input  [16:0] add106_i;
input  [16:0] i;
input  [0:0] cmp263_i;
input  [11:0] mul_ln315;
input  [0:0] i_cast9_i;
input  [15:0] cols_cast_i;
input  [0:0] cmp111_i;
input  [30:0] bitcast_ln348;
input  [0:0] icmp_ln348_6;
input  [31:0] conv1_i;
input  [30:0] bitcast_ln349;
input  [0:0] icmp_ln349_4;
input  [31:0] conv2_i;

reg ap_idle;
reg imgInput_data1_read;
reg mapX_data2_read;
reg mapY_data3_read;
reg imgOutput_data4_write;
reg r2_ce0;
reg r2_we0;
reg r2_ce1;
reg r1_ce0;
reg r1_we0;
reg r1_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln258_reg_1728;
reg   [0:0] and_ln269_reg_1732;
reg    ap_predicate_op75_read_state2;
reg   [0:0] and_ln324_reg_1745;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
reg   [0:0] and_ln324_reg_1745_pp0_iter12_reg;
reg    ap_block_state14_pp0_stage0_iter13;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln258_fu_531_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    imgInput_data1_blk_n;
wire    ap_block_pp0_stage0;
reg    mapX_data2_blk_n;
reg    mapY_data3_blk_n;
reg    imgOutput_data4_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] and_ln269_fu_549_p2;
wire   [12:0] add_ln315_fu_565_p2;
reg   [12:0] add_ln315_reg_1736;
wire   [0:0] trunc_ln315_fu_571_p1;
reg   [0:0] trunc_ln315_reg_1741;
wire   [0:0] and_ln324_fu_575_p2;
reg   [0:0] and_ln324_reg_1745_pp0_iter1_reg;
reg   [0:0] and_ln324_reg_1745_pp0_iter2_reg;
reg   [0:0] and_ln324_reg_1745_pp0_iter3_reg;
reg   [0:0] and_ln324_reg_1745_pp0_iter4_reg;
reg   [0:0] and_ln324_reg_1745_pp0_iter5_reg;
reg   [0:0] and_ln324_reg_1745_pp0_iter6_reg;
reg   [0:0] and_ln324_reg_1745_pp0_iter7_reg;
reg   [0:0] and_ln324_reg_1745_pp0_iter8_reg;
reg   [0:0] and_ln324_reg_1745_pp0_iter9_reg;
reg   [0:0] and_ln324_reg_1745_pp0_iter10_reg;
reg   [0:0] and_ln324_reg_1745_pp0_iter11_reg;
wire   [0:0] icmp_ln348_4_fu_591_p2;
reg   [0:0] icmp_ln348_4_reg_1749;
reg   [0:0] icmp_ln348_4_reg_1749_pp0_iter1_reg;
reg   [0:0] icmp_ln348_4_reg_1749_pp0_iter2_reg;
reg   [0:0] icmp_ln348_4_reg_1749_pp0_iter3_reg;
reg   [0:0] icmp_ln348_4_reg_1749_pp0_iter4_reg;
reg   [0:0] icmp_ln348_4_reg_1749_pp0_iter5_reg;
reg   [0:0] icmp_ln348_4_reg_1749_pp0_iter6_reg;
reg   [0:0] icmp_ln348_4_reg_1749_pp0_iter7_reg;
reg   [0:0] icmp_ln348_4_reg_1749_pp0_iter8_reg;
reg   [0:0] icmp_ln348_4_reg_1749_pp0_iter9_reg;
reg   [0:0] icmp_ln348_4_reg_1749_pp0_iter10_reg;
reg   [0:0] icmp_ln348_4_reg_1749_pp0_iter11_reg;
reg   [0:0] icmp_ln348_4_reg_1749_pp0_iter12_reg;
wire   [0:0] icmp_ln349_2_fu_607_p2;
reg   [0:0] icmp_ln349_2_reg_1754;
reg   [0:0] icmp_ln349_2_reg_1754_pp0_iter1_reg;
wire   [31:0] x_fl_fu_625_p1;
reg   [31:0] x_fl_reg_1759;
wire   [31:0] y_fl_fu_630_p1;
reg   [31:0] y_fl_reg_1765;
wire   [0:0] icmp_ln348_fu_649_p2;
reg   [0:0] icmp_ln348_reg_1771;
reg   [0:0] icmp_ln348_reg_1771_pp0_iter2_reg;
reg   [0:0] icmp_ln348_reg_1771_pp0_iter3_reg;
reg   [0:0] icmp_ln348_reg_1771_pp0_iter4_reg;
reg   [0:0] icmp_ln348_reg_1771_pp0_iter5_reg;
reg   [0:0] icmp_ln348_reg_1771_pp0_iter6_reg;
reg   [0:0] icmp_ln348_reg_1771_pp0_iter7_reg;
reg   [0:0] icmp_ln348_reg_1771_pp0_iter8_reg;
reg   [0:0] icmp_ln348_reg_1771_pp0_iter9_reg;
reg   [0:0] icmp_ln348_reg_1771_pp0_iter10_reg;
reg   [0:0] icmp_ln348_reg_1771_pp0_iter11_reg;
reg   [0:0] icmp_ln348_reg_1771_pp0_iter12_reg;
wire   [0:0] icmp_ln348_3_fu_655_p2;
reg   [0:0] icmp_ln348_3_reg_1776;
reg   [0:0] icmp_ln348_3_reg_1776_pp0_iter2_reg;
reg   [0:0] icmp_ln348_3_reg_1776_pp0_iter3_reg;
reg   [0:0] icmp_ln348_3_reg_1776_pp0_iter4_reg;
reg   [0:0] icmp_ln348_3_reg_1776_pp0_iter5_reg;
reg   [0:0] icmp_ln348_3_reg_1776_pp0_iter6_reg;
reg   [0:0] icmp_ln348_3_reg_1776_pp0_iter7_reg;
reg   [0:0] icmp_ln348_3_reg_1776_pp0_iter8_reg;
reg   [0:0] icmp_ln348_3_reg_1776_pp0_iter9_reg;
reg   [0:0] icmp_ln348_3_reg_1776_pp0_iter10_reg;
reg   [0:0] icmp_ln348_3_reg_1776_pp0_iter11_reg;
reg   [0:0] icmp_ln348_3_reg_1776_pp0_iter12_reg;
wire   [0:0] icmp_ln349_fu_675_p2;
reg   [0:0] icmp_ln349_reg_1781;
wire   [0:0] icmp_ln349_1_fu_681_p2;
reg   [0:0] icmp_ln349_1_reg_1786;
wire   [0:0] grp_fu_501_p2;
reg   [0:0] tmp_5_reg_1791;
reg   [0:0] tmp_5_reg_1791_pp0_iter3_reg;
reg   [0:0] tmp_5_reg_1791_pp0_iter4_reg;
reg   [0:0] tmp_5_reg_1791_pp0_iter5_reg;
reg   [0:0] tmp_5_reg_1791_pp0_iter6_reg;
reg   [0:0] tmp_5_reg_1791_pp0_iter7_reg;
reg   [0:0] tmp_5_reg_1791_pp0_iter8_reg;
reg   [0:0] tmp_5_reg_1791_pp0_iter9_reg;
reg   [0:0] tmp_5_reg_1791_pp0_iter10_reg;
reg   [0:0] tmp_5_reg_1791_pp0_iter11_reg;
reg   [0:0] tmp_5_reg_1791_pp0_iter12_reg;
wire   [0:0] and_ln349_1_fu_701_p2;
reg   [0:0] and_ln349_1_reg_1796;
reg   [0:0] and_ln349_1_reg_1796_pp0_iter3_reg;
reg   [0:0] and_ln349_1_reg_1796_pp0_iter4_reg;
reg   [0:0] and_ln349_1_reg_1796_pp0_iter5_reg;
reg   [0:0] and_ln349_1_reg_1796_pp0_iter6_reg;
reg   [0:0] and_ln349_1_reg_1796_pp0_iter7_reg;
reg   [0:0] and_ln349_1_reg_1796_pp0_iter8_reg;
reg   [0:0] and_ln349_1_reg_1796_pp0_iter9_reg;
reg   [0:0] and_ln349_1_reg_1796_pp0_iter10_reg;
reg   [0:0] and_ln349_1_reg_1796_pp0_iter11_reg;
reg   [0:0] and_ln349_1_reg_1796_pp0_iter12_reg;
wire   [31:0] grp_fu_491_p2;
reg   [31:0] dc_reg_1801;
wire   [31:0] grp_fu_496_p2;
reg   [31:0] dc_1_reg_1806;
reg   [0:0] p_Result_s_reg_1811;
wire   [31:0] val_4_fu_824_p3;
reg   [31:0] val_4_reg_1816;
wire   [31:0] result_V_fu_963_p3;
reg   [31:0] result_V_reg_1822;
reg   [31:0] result_V_reg_1822_pp0_iter7_reg;
reg   [31:0] result_V_reg_1822_pp0_iter8_reg;
reg   [31:0] result_V_reg_1822_pp0_iter9_reg;
reg   [31:0] result_V_reg_1822_pp0_iter10_reg;
reg   [31:0] result_V_reg_1822_pp0_iter11_reg;
reg   [31:0] result_V_reg_1822_pp0_iter12_reg;
reg  signed [26:0] y_reg_1827;
reg  signed [26:0] y_reg_1827_pp0_iter7_reg;
reg  signed [26:0] y_reg_1827_pp0_iter8_reg;
reg  signed [26:0] y_reg_1827_pp0_iter9_reg;
reg  signed [26:0] y_reg_1827_pp0_iter10_reg;
reg  signed [26:0] y_reg_1827_pp0_iter11_reg;
reg  signed [26:0] y_reg_1827_pp0_iter12_reg;
reg   [0:0] tmp_18_reg_1833;
reg   [2:0] trunc_ln336_1_reg_1838;
reg   [2:0] trunc_ln336_1_reg_1838_pp0_iter7_reg;
reg   [2:0] trunc_ln336_1_reg_1838_pp0_iter8_reg;
reg   [2:0] trunc_ln336_1_reg_1838_pp0_iter9_reg;
reg   [2:0] trunc_ln336_1_reg_1838_pp0_iter10_reg;
reg   [2:0] trunc_ln336_1_reg_1838_pp0_iter11_reg;
wire   [4:0] loc_1_fu_999_p1;
reg   [4:0] loc_1_reg_1844;
reg   [4:0] loc_1_reg_1844_pp0_iter7_reg;
reg   [4:0] loc_1_reg_1844_pp0_iter8_reg;
reg   [4:0] loc_1_reg_1844_pp0_iter9_reg;
reg   [0:0] tmp_22_reg_1851;
reg   [25:0] trunc_ln371_1_reg_1857;
wire   [31:0] result_V_5_fu_1026_p3;
reg   [31:0] result_V_5_reg_1862;
reg   [31:0] result_V_5_reg_1862_pp0_iter8_reg;
reg   [31:0] result_V_5_reg_1862_pp0_iter9_reg;
reg   [31:0] result_V_5_reg_1862_pp0_iter10_reg;
reg   [31:0] result_V_5_reg_1862_pp0_iter11_reg;
reg   [31:0] result_V_5_reg_1862_pp0_iter12_reg;
reg   [0:0] tmp_17_reg_1867;
wire  signed [27:0] sext_ln336_fu_1040_p1;
reg  signed [27:0] sext_ln336_reg_1872;
reg  signed [27:0] sext_ln336_reg_1872_pp0_iter8_reg;
reg  signed [27:0] sext_ln336_reg_1872_pp0_iter9_reg;
reg  signed [27:0] sext_ln336_reg_1872_pp0_iter10_reg;
reg  signed [27:0] sext_ln336_reg_1872_pp0_iter11_reg;
reg  signed [27:0] sext_ln336_reg_1872_pp0_iter12_reg;
wire   [4:0] loc_fu_1043_p1;
reg   [4:0] loc_reg_1877;
reg   [4:0] loc_reg_1877_pp0_iter8_reg;
reg   [4:0] loc_reg_1877_pp0_iter9_reg;
wire   [0:0] tmp_21_fu_1057_p3;
reg   [0:0] tmp_21_reg_1884;
wire   [12:0] xa1_fu_1097_p3;
reg   [12:0] xa1_reg_1889;
wire   [3:0] ya0_fu_1239_p3;
reg  signed [3:0] ya0_reg_1896;
wire   [3:0] ya1_fu_1291_p3;
reg  signed [3:0] ya1_reg_1901;
wire   [0:0] tobool437_i_fu_1299_p2;
reg   [0:0] tobool437_i_reg_1906;
reg   [0:0] tobool437_i_reg_1906_pp0_iter8_reg;
wire   [0:0] tobool428_i_fu_1394_p2;
reg   [0:0] tobool428_i_reg_1933;
wire   [5:0] sub_i_i682_i_fu_1406_p2;
reg   [5:0] sub_i_i682_i_reg_1940;
wire   [10:0] k01_V_fu_1422_p2;
reg   [10:0] k01_V_reg_1945;
wire   [7:0] buf_V_3_q1;
reg   [7:0] p_Val2_8_reg_1960;
wire   [7:0] d00_V_4_fu_1473_p3;
reg   [7:0] d00_V_4_reg_1965;
wire   [17:0] grp_fu_1666_p2;
wire   [17:0] grp_fu_1672_p2;
wire   [12:0] buf_V_address0;
reg    buf_V_ce0;
reg    buf_V_we0;
wire   [12:0] buf_V_address1;
reg    buf_V_ce1;
wire   [7:0] buf_V_q1;
wire   [12:0] buf_V_1_address0;
reg    buf_V_1_ce0;
reg    buf_V_1_we0;
wire   [12:0] buf_V_1_address1;
reg    buf_V_1_ce1;
wire   [7:0] buf_V_1_q1;
wire   [12:0] buf_V_2_address0;
reg    buf_V_2_ce0;
reg    buf_V_2_we0;
wire   [12:0] buf_V_2_address1;
reg    buf_V_2_ce1;
wire   [7:0] buf_V_2_q1;
wire   [12:0] buf_V_3_address0;
reg    buf_V_3_ce0;
reg    buf_V_3_we0;
wire   [12:0] buf_V_3_address1;
reg    buf_V_3_ce1;
reg   [7:0] ap_phi_mux_s_1_phi_fu_479_p4;
reg   [7:0] ap_phi_reg_pp0_iter1_s_1_reg_475;
wire   [7:0] ap_phi_reg_pp0_iter0_s_1_reg_475;
wire   [63:0] idxprom2582_i_cast_fu_513_p1;
wire   [63:0] zext_ln315_fu_618_p1;
wire   [63:0] p_cast5_fu_1349_p1;
wire   [63:0] p_cast6_fu_1359_p1;
wire   [63:0] p_cast7_fu_1379_p1;
wire   [63:0] p_cast8_fu_1389_p1;
wire   [63:0] zext_ln348_fu_1536_p1;
wire   [63:0] zext_ln348_1_fu_1540_p1;
reg   [16:0] j_fu_202;
wire   [16:0] j_2_fu_537_p2;
wire    ap_loop_init;
reg   [16:0] ap_sig_allocacmp_j_1;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_501_p0;
wire   [31:0] grp_fu_505_p0;
wire   [16:0] cols_cast_i_cast_fu_509_p1;
wire   [0:0] icmp_ln269_fu_543_p2;
wire   [12:0] mul_ln315_cast_fu_519_p1;
wire   [12:0] div235_udiv_i_fu_555_p4;
wire   [7:0] tmp_4_fu_581_p4;
wire   [7:0] tmp_7_fu_597_p4;
wire   [7:0] tmp_3_fu_635_p4;
wire   [22:0] trunc_ln348_fu_645_p1;
wire   [7:0] tmp_6_fu_661_p4;
wire   [22:0] trunc_ln349_fu_671_p1;
wire   [0:0] or_ln349_fu_687_p2;
wire   [0:0] or_ln349_1_fu_691_p2;
wire   [0:0] and_ln349_fu_695_p2;
wire   [0:0] grp_fu_505_p2;
wire   [31:0] data_V_fu_707_p1;
wire   [22:0] p_Result_1_fu_728_p1;
wire   [24:0] mantissa_fu_732_p4;
wire   [7:0] xs_exp_V_fu_718_p4;
wire   [8:0] zext_ln346_fu_746_p1;
wire   [8:0] add_ln346_fu_750_p2;
wire   [7:0] sub_ln1512_fu_764_p2;
wire   [0:0] isNeg_fu_756_p3;
wire  signed [8:0] sext_ln1512_fu_770_p1;
wire   [8:0] ush_fu_774_p3;
wire  signed [31:0] sext_ln1488_fu_782_p1;
wire   [78:0] zext_ln15_fu_742_p1;
wire   [78:0] zext_ln1488_fu_786_p1;
wire   [78:0] r_V_fu_790_p2;
wire   [0:0] tmp_11_fu_802_p3;
wire   [78:0] r_V_1_fu_796_p2;
wire   [31:0] zext_ln818_fu_810_p1;
wire   [31:0] tmp_9_fu_814_p4;
wire   [31:0] data_V_1_fu_832_p1;
wire   [22:0] p_Result_3_fu_853_p1;
wire   [24:0] mantissa_1_fu_857_p4;
wire   [7:0] xs_exp_V_1_fu_843_p4;
wire   [8:0] zext_ln346_1_fu_871_p1;
wire   [8:0] add_ln346_1_fu_875_p2;
wire   [7:0] sub_ln1512_1_fu_889_p2;
wire   [0:0] isNeg_1_fu_881_p3;
wire  signed [8:0] sext_ln1512_1_fu_895_p1;
wire   [8:0] ush_1_fu_899_p3;
wire  signed [31:0] sext_ln1488_1_fu_907_p1;
wire   [78:0] zext_ln15_1_fu_867_p1;
wire   [78:0] zext_ln1488_1_fu_911_p1;
wire   [78:0] r_V_2_fu_915_p2;
wire   [0:0] tmp_16_fu_927_p3;
wire   [78:0] r_V_3_fu_921_p2;
wire   [31:0] zext_ln818_1_fu_935_p1;
wire   [31:0] tmp_s_fu_939_p4;
wire   [31:0] val_5_fu_949_p3;
wire   [0:0] p_Result_2_fu_835_p3;
wire   [31:0] result_V_3_fu_957_p2;
wire   [31:0] result_V_2_fu_1021_p2;
wire   [13:0] trunc_ln4_fu_1047_p4;
wire   [13:0] sub_ln369_fu_1065_p2;
wire   [12:0] trunc_ln369_2_fu_1071_p4;
wire   [12:0] sub_ln369_1_fu_1081_p2;
wire   [12:0] trunc_ln369_3_fu_1087_p4;
wire   [27:0] sub_ln371_fu_1105_p2;
wire   [26:0] lshr_ln371_1_fu_1111_p4;
wire   [27:0] zext_ln371_fu_1121_p1;
wire  signed [26:0] sext_ln371_fu_1131_p1;
wire   [27:0] sub_ln371_1_fu_1125_p2;
wire   [27:0] zext_ln371_1_fu_1134_p1;
wire  signed [27:0] select_ln371_fu_1138_p3;
wire   [1:0] p_and_f9_fu_1153_p3;
wire   [2:0] zext_ln371_2_fu_1160_p1;
wire   [2:0] sub_ln371_2_fu_1164_p2;
wire  signed [2:0] select_ln371_1_fu_1170_p3;
wire  signed [28:0] sext_ln371_1_fu_1149_p1;
wire  signed [28:0] sext_ln371_2_fu_1181_p1;
wire   [28:0] add_ln371_fu_1185_p2;
wire   [1:0] trunc_ln371_3_fu_1191_p1;
wire   [2:0] p_and_f3_fu_1203_p3;
wire   [1:0] sub_ln371_3_fu_1215_p2;
wire   [2:0] p_and_t5_fu_1221_p3;
wire   [3:0] zext_ln371_4_fu_1229_p1;
wire   [0:0] tmp_23_fu_1195_p3;
wire   [3:0] sub_ln371_4_fu_1233_p2;
wire   [3:0] zext_ln371_3_fu_1211_p1;
wire   [1:0] trunc_ln371_fu_1145_p1;
wire   [2:0] p_and_f_fu_1255_p3;
wire   [1:0] sub_ln372_fu_1267_p2;
wire   [2:0] p_and_t_fu_1273_p3;
wire   [3:0] zext_ln372_1_fu_1281_p1;
wire   [0:0] tmp_24_fu_1247_p3;
wire   [3:0] sub_ln372_1_fu_1285_p2;
wire   [3:0] zext_ln372_fu_1263_p1;
wire   [1:0] trunc_ln371_2_fu_1177_p1;
wire   [1:0] p_and_t1_fu_1305_p3;
wire   [1:0] sub_ln369_2_fu_1312_p2;
wire   [1:0] select_ln369_1_fu_1318_p3;
wire  signed [12:0] sext_ln369_fu_1325_p1;
wire   [10:0] empty_fu_1337_p1;
wire   [12:0] empty_fu_1337_p2;
wire   [12:0] xa0_fu_1329_p2;
wire   [12:0] empty_54_fu_1343_p2;
wire   [12:0] empty_55_fu_1354_p2;
wire   [10:0] empty_56_fu_1367_p1;
wire   [12:0] empty_56_fu_1367_p2;
wire   [12:0] empty_57_fu_1373_p2;
wire   [12:0] empty_58_fu_1384_p2;
wire   [5:0] loc_1_cast_i_fu_1403_p1;
wire   [5:0] k01_V_fu_1422_p0;
wire   [4:0] k01_V_fu_1422_p1;
wire   [5:0] loc_cast_i_fu_1419_p1;
wire   [5:0] sub_i_i569_i_fu_1428_p2;
wire   [5:0] k10_V_fu_1438_p0;
wire   [4:0] k10_V_fu_1438_p1;
wire   [10:0] k10_V_fu_1438_p2;
wire   [7:0] d10_V_4_fu_1466_p3;
wire   [7:0] d00_V_fu_1452_p3;
wire   [7:0] d01_V_3_fu_1459_p3;
wire   [7:0] d01_V_fu_1480_p3;
wire   [7:0] d10_V_fu_1487_p3;
wire   [4:0] mul_i_i_fu_1508_p0;
wire   [4:0] mul_i_i_fu_1508_p1;
wire   [9:0] mul_i_i_fu_1508_p2;
wire   [2:0] add_ln339_1_fu_1531_p2;
wire   [0:0] tmp_19_fu_1550_p3;
wire   [0:0] or_ln348_fu_1563_p2;
wire   [0:0] or_ln348_1_fu_1567_p2;
wire   [0:0] and_ln348_fu_1571_p2;
wire   [26:0] r1_load_cast_i_fu_1582_p1;
wire   [27:0] r2_load_cast_i_fu_1591_p1;
wire   [27:0] ynext_fu_1545_p2;
wire   [0:0] tmp_20_fu_1601_p3;
wire   [0:0] and_ln348_1_fu_1577_p2;
wire   [0:0] icmp_ln348_1_fu_1586_p2;
wire   [0:0] and_ln348_2_fu_1614_p2;
wire   [0:0] xor_ln348_fu_1557_p2;
wire   [0:0] icmp_ln348_2_fu_1595_p2;
wire   [0:0] xor_ln349_fu_1608_p2;
wire   [0:0] and_ln348_4_fu_1626_p2;
wire   [0:0] and_ln348_5_fu_1632_p2;
wire   [0:0] and_ln348_3_fu_1620_p2;
wire   [17:0] grp_fu_1688_p3;
wire   [17:0] grp_fu_1678_p4;
(* use_dsp48 = "no" *) wire   [17:0] ret_V_fu_1643_p2;
wire   [0:0] in_range_fu_1637_p2;
wire   [7:0] tmp_fu_1647_p4;
wire   [10:0] grp_fu_1666_p0;
wire   [7:0] grp_fu_1666_p1;
wire   [10:0] grp_fu_1672_p0;
wire   [7:0] grp_fu_1672_p1;
wire   [10:0] grp_fu_1678_p0;
wire   [7:0] grp_fu_1678_p2;
wire   [9:0] grp_fu_1688_p0;
wire   [7:0] grp_fu_1688_p1;
reg    grp_fu_491_ce;
reg    grp_fu_496_ce;
reg    grp_fu_501_ce;
reg    ap_block_pp0_stage0_00001;
reg    grp_fu_505_ce;
reg    grp_fu_1666_ce;
reg    grp_fu_1672_ce;
reg    grp_fu_1678_ce;
reg    grp_fu_1688_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_65;
reg    ap_enable_state1_pp0_iter0_stage0;
reg    ap_enable_operation_285;
reg    ap_enable_state13_pp0_iter12_stage0;
reg    ap_enable_operation_302;
reg    ap_enable_state14_pp0_iter13_stage0;
reg    ap_enable_operation_66;
reg    ap_enable_operation_288;
reg    ap_enable_operation_305;
reg    ap_predicate_op83_store_state2;
reg    ap_enable_operation_83;
reg    ap_enable_state2_pp0_iter1_stage0;
reg    ap_enable_operation_235;
reg    ap_enable_state9_pp0_iter8_stage0;
reg    ap_enable_operation_251;
reg    ap_enable_state10_pp0_iter9_stage0;
reg    ap_predicate_op85_store_state2;
reg    ap_enable_operation_85;
reg    ap_enable_operation_236;
reg    ap_enable_operation_252;
reg    ap_predicate_op87_store_state2;
reg    ap_enable_operation_87;
reg    ap_enable_operation_237;
reg    ap_enable_operation_253;
reg    ap_predicate_op89_store_state2;
reg    ap_enable_operation_89;
reg    ap_enable_operation_238;
reg    ap_enable_operation_254;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [17:0] grp_fu_1666_p00;
wire   [17:0] grp_fu_1666_p10;
wire   [17:0] grp_fu_1672_p00;
wire   [17:0] grp_fu_1672_p10;
wire   [17:0] grp_fu_1678_p20;
wire   [17:0] grp_fu_1688_p00;
wire   [17:0] grp_fu_1688_p10;
wire   [10:0] k01_V_fu_1422_p00;
wire   [10:0] k01_V_fu_1422_p10;
wire   [10:0] k10_V_fu_1438_p00;
wire   [10:0] k10_V_fu_1438_p10;
wire   [9:0] mul_i_i_fu_1508_p00;
wire   [9:0] mul_i_i_fu_1508_p10;
reg    ap_condition_561;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_done_reg = 1'b0;
end

remap_accel_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_buf_V_RAM_Abkb #(
    .DataWidth( 8 ),
    .AddressRange( 4805 ),
    .AddressWidth( 13 ))
buf_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_address0),
    .ce0(buf_V_ce0),
    .we0(buf_V_we0),
    .d0(ap_phi_mux_s_1_phi_fu_479_p4),
    .address1(buf_V_address1),
    .ce1(buf_V_ce1),
    .q1(buf_V_q1)
);

remap_accel_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_buf_V_RAM_Abkb #(
    .DataWidth( 8 ),
    .AddressRange( 4805 ),
    .AddressWidth( 13 ))
buf_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_1_address0),
    .ce0(buf_V_1_ce0),
    .we0(buf_V_1_we0),
    .d0(ap_phi_mux_s_1_phi_fu_479_p4),
    .address1(buf_V_1_address1),
    .ce1(buf_V_1_ce1),
    .q1(buf_V_1_q1)
);

remap_accel_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_buf_V_RAM_Abkb #(
    .DataWidth( 8 ),
    .AddressRange( 4805 ),
    .AddressWidth( 13 ))
buf_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_2_address0),
    .ce0(buf_V_2_ce0),
    .we0(buf_V_2_we0),
    .d0(ap_phi_mux_s_1_phi_fu_479_p4),
    .address1(buf_V_2_address1),
    .ce1(buf_V_2_ce1),
    .q1(buf_V_2_q1)
);

remap_accel_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width_buf_V_RAM_Abkb #(
    .DataWidth( 8 ),
    .AddressRange( 4805 ),
    .AddressWidth( 13 ))
buf_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_3_address0),
    .ce0(buf_V_3_ce0),
    .we0(buf_V_3_we0),
    .d0(ap_phi_mux_s_1_phi_fu_479_p4),
    .address1(buf_V_3_address1),
    .ce1(buf_V_3_ce1),
    .q1(buf_V_3_q1)
);

remap_accel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x_fl_reg_1759),
    .din1(32'd1107296256),
    .ce(grp_fu_491_ce),
    .dout(grp_fu_491_p2)
);

remap_accel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(y_fl_reg_1765),
    .din1(32'd1107296256),
    .ce(grp_fu_496_ce),
    .dout(grp_fu_496_p2)
);

remap_accel_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_501_p0),
    .din1(conv1_i),
    .ce(grp_fu_501_ce),
    .opcode(5'd5),
    .dout(grp_fu_501_p2)
);

remap_accel_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_505_p0),
    .din1(conv2_i),
    .ce(grp_fu_505_ce),
    .opcode(5'd5),
    .dout(grp_fu_505_p2)
);

remap_accel_mul_4s_11ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 13 ))
mul_4s_11ns_13_1_1_U89(
    .din0(ya0_reg_1896),
    .din1(empty_fu_1337_p1),
    .dout(empty_fu_1337_p2)
);

remap_accel_mul_4s_11ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 13 ))
mul_4s_11ns_13_1_1_U90(
    .din0(ya1_reg_1901),
    .din1(empty_56_fu_1367_p1),
    .dout(empty_56_fu_1367_p2)
);

remap_accel_mul_6ns_5ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 11 ))
mul_6ns_5ns_11_1_1_U91(
    .din0(k01_V_fu_1422_p0),
    .din1(k01_V_fu_1422_p1),
    .dout(k01_V_fu_1422_p2)
);

remap_accel_mul_6ns_5ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 11 ))
mul_6ns_5ns_11_1_1_U92(
    .din0(k10_V_fu_1438_p0),
    .din1(k10_V_fu_1438_p1),
    .dout(k10_V_fu_1438_p2)
);

remap_accel_mul_5ns_5ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
mul_5ns_5ns_10_1_1_U93(
    .din0(mul_i_i_fu_1508_p0),
    .din1(mul_i_i_fu_1508_p1),
    .dout(mul_i_i_fu_1508_p2)
);

remap_accel_mul_mul_11ns_8ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_mul_11ns_8ns_18_4_1_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1666_p0),
    .din1(grp_fu_1666_p1),
    .ce(grp_fu_1666_ce),
    .dout(grp_fu_1666_p2)
);

remap_accel_mul_mul_11ns_8ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_mul_11ns_8ns_18_4_1_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1672_p0),
    .din1(grp_fu_1672_p1),
    .ce(grp_fu_1672_ce),
    .dout(grp_fu_1672_p2)
);

remap_accel_ama_submuladd_11ns_11ns_8ns_18ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
ama_submuladd_11ns_11ns_8ns_18ns_18_4_1_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1678_p0),
    .din1(k01_V_reg_1945),
    .din2(grp_fu_1678_p2),
    .din3(grp_fu_1666_p2),
    .ce(grp_fu_1678_ce),
    .dout(grp_fu_1678_p4)
);

remap_accel_mac_muladd_10ns_8ns_18ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mac_muladd_10ns_8ns_18ns_18_4_1_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1688_p0),
    .din1(grp_fu_1688_p1),
    .din2(grp_fu_1672_p2),
    .ce(grp_fu_1688_ce),
    .dout(grp_fu_1688_p3)
);

remap_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter12_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_561)) begin
        if (((1'd0 == and_ln269_fu_549_p2) & (icmp_ln258_fu_531_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_s_1_reg_475 <= 8'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_s_1_reg_475 <= ap_phi_reg_pp0_iter0_s_1_reg_475;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_start_int == 1'b1) & (icmp_ln258_fu_531_p2 == 1'd0))) begin
            j_fu_202 <= j_2_fu_537_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_202 <= 17'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln258_fu_531_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln315_reg_1736 <= add_ln315_fu_565_p2;
        and_ln269_reg_1732 <= and_ln269_fu_549_p2;
        and_ln324_reg_1745 <= and_ln324_fu_575_p2;
        trunc_ln315_reg_1741 <= trunc_ln315_fu_571_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln324_reg_1745_pp0_iter10_reg <= and_ln324_reg_1745_pp0_iter9_reg;
        and_ln324_reg_1745_pp0_iter11_reg <= and_ln324_reg_1745_pp0_iter10_reg;
        and_ln324_reg_1745_pp0_iter12_reg <= and_ln324_reg_1745_pp0_iter11_reg;
        and_ln324_reg_1745_pp0_iter2_reg <= and_ln324_reg_1745_pp0_iter1_reg;
        and_ln324_reg_1745_pp0_iter3_reg <= and_ln324_reg_1745_pp0_iter2_reg;
        and_ln324_reg_1745_pp0_iter4_reg <= and_ln324_reg_1745_pp0_iter3_reg;
        and_ln324_reg_1745_pp0_iter5_reg <= and_ln324_reg_1745_pp0_iter4_reg;
        and_ln324_reg_1745_pp0_iter6_reg <= and_ln324_reg_1745_pp0_iter5_reg;
        and_ln324_reg_1745_pp0_iter7_reg <= and_ln324_reg_1745_pp0_iter6_reg;
        and_ln324_reg_1745_pp0_iter8_reg <= and_ln324_reg_1745_pp0_iter7_reg;
        and_ln324_reg_1745_pp0_iter9_reg <= and_ln324_reg_1745_pp0_iter8_reg;
        and_ln349_1_reg_1796_pp0_iter10_reg <= and_ln349_1_reg_1796_pp0_iter9_reg;
        and_ln349_1_reg_1796_pp0_iter11_reg <= and_ln349_1_reg_1796_pp0_iter10_reg;
        and_ln349_1_reg_1796_pp0_iter12_reg <= and_ln349_1_reg_1796_pp0_iter11_reg;
        and_ln349_1_reg_1796_pp0_iter3_reg <= and_ln349_1_reg_1796;
        and_ln349_1_reg_1796_pp0_iter4_reg <= and_ln349_1_reg_1796_pp0_iter3_reg;
        and_ln349_1_reg_1796_pp0_iter5_reg <= and_ln349_1_reg_1796_pp0_iter4_reg;
        and_ln349_1_reg_1796_pp0_iter6_reg <= and_ln349_1_reg_1796_pp0_iter5_reg;
        and_ln349_1_reg_1796_pp0_iter7_reg <= and_ln349_1_reg_1796_pp0_iter6_reg;
        and_ln349_1_reg_1796_pp0_iter8_reg <= and_ln349_1_reg_1796_pp0_iter7_reg;
        and_ln349_1_reg_1796_pp0_iter9_reg <= and_ln349_1_reg_1796_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln348_3_reg_1776_pp0_iter10_reg <= icmp_ln348_3_reg_1776_pp0_iter9_reg;
        icmp_ln348_3_reg_1776_pp0_iter11_reg <= icmp_ln348_3_reg_1776_pp0_iter10_reg;
        icmp_ln348_3_reg_1776_pp0_iter12_reg <= icmp_ln348_3_reg_1776_pp0_iter11_reg;
        icmp_ln348_3_reg_1776_pp0_iter2_reg <= icmp_ln348_3_reg_1776;
        icmp_ln348_3_reg_1776_pp0_iter3_reg <= icmp_ln348_3_reg_1776_pp0_iter2_reg;
        icmp_ln348_3_reg_1776_pp0_iter4_reg <= icmp_ln348_3_reg_1776_pp0_iter3_reg;
        icmp_ln348_3_reg_1776_pp0_iter5_reg <= icmp_ln348_3_reg_1776_pp0_iter4_reg;
        icmp_ln348_3_reg_1776_pp0_iter6_reg <= icmp_ln348_3_reg_1776_pp0_iter5_reg;
        icmp_ln348_3_reg_1776_pp0_iter7_reg <= icmp_ln348_3_reg_1776_pp0_iter6_reg;
        icmp_ln348_3_reg_1776_pp0_iter8_reg <= icmp_ln348_3_reg_1776_pp0_iter7_reg;
        icmp_ln348_3_reg_1776_pp0_iter9_reg <= icmp_ln348_3_reg_1776_pp0_iter8_reg;
        icmp_ln348_4_reg_1749_pp0_iter10_reg <= icmp_ln348_4_reg_1749_pp0_iter9_reg;
        icmp_ln348_4_reg_1749_pp0_iter11_reg <= icmp_ln348_4_reg_1749_pp0_iter10_reg;
        icmp_ln348_4_reg_1749_pp0_iter12_reg <= icmp_ln348_4_reg_1749_pp0_iter11_reg;
        icmp_ln348_4_reg_1749_pp0_iter2_reg <= icmp_ln348_4_reg_1749_pp0_iter1_reg;
        icmp_ln348_4_reg_1749_pp0_iter3_reg <= icmp_ln348_4_reg_1749_pp0_iter2_reg;
        icmp_ln348_4_reg_1749_pp0_iter4_reg <= icmp_ln348_4_reg_1749_pp0_iter3_reg;
        icmp_ln348_4_reg_1749_pp0_iter5_reg <= icmp_ln348_4_reg_1749_pp0_iter4_reg;
        icmp_ln348_4_reg_1749_pp0_iter6_reg <= icmp_ln348_4_reg_1749_pp0_iter5_reg;
        icmp_ln348_4_reg_1749_pp0_iter7_reg <= icmp_ln348_4_reg_1749_pp0_iter6_reg;
        icmp_ln348_4_reg_1749_pp0_iter8_reg <= icmp_ln348_4_reg_1749_pp0_iter7_reg;
        icmp_ln348_4_reg_1749_pp0_iter9_reg <= icmp_ln348_4_reg_1749_pp0_iter8_reg;
        icmp_ln348_reg_1771_pp0_iter10_reg <= icmp_ln348_reg_1771_pp0_iter9_reg;
        icmp_ln348_reg_1771_pp0_iter11_reg <= icmp_ln348_reg_1771_pp0_iter10_reg;
        icmp_ln348_reg_1771_pp0_iter12_reg <= icmp_ln348_reg_1771_pp0_iter11_reg;
        icmp_ln348_reg_1771_pp0_iter2_reg <= icmp_ln348_reg_1771;
        icmp_ln348_reg_1771_pp0_iter3_reg <= icmp_ln348_reg_1771_pp0_iter2_reg;
        icmp_ln348_reg_1771_pp0_iter4_reg <= icmp_ln348_reg_1771_pp0_iter3_reg;
        icmp_ln348_reg_1771_pp0_iter5_reg <= icmp_ln348_reg_1771_pp0_iter4_reg;
        icmp_ln348_reg_1771_pp0_iter6_reg <= icmp_ln348_reg_1771_pp0_iter5_reg;
        icmp_ln348_reg_1771_pp0_iter7_reg <= icmp_ln348_reg_1771_pp0_iter6_reg;
        icmp_ln348_reg_1771_pp0_iter8_reg <= icmp_ln348_reg_1771_pp0_iter7_reg;
        icmp_ln348_reg_1771_pp0_iter9_reg <= icmp_ln348_reg_1771_pp0_iter8_reg;
        loc_1_reg_1844_pp0_iter7_reg <= loc_1_reg_1844;
        loc_1_reg_1844_pp0_iter8_reg <= loc_1_reg_1844_pp0_iter7_reg;
        loc_1_reg_1844_pp0_iter9_reg <= loc_1_reg_1844_pp0_iter8_reg;
        loc_reg_1877_pp0_iter8_reg <= loc_reg_1877;
        loc_reg_1877_pp0_iter9_reg <= loc_reg_1877_pp0_iter8_reg;
        result_V_5_reg_1862_pp0_iter10_reg <= result_V_5_reg_1862_pp0_iter9_reg;
        result_V_5_reg_1862_pp0_iter11_reg <= result_V_5_reg_1862_pp0_iter10_reg;
        result_V_5_reg_1862_pp0_iter12_reg <= result_V_5_reg_1862_pp0_iter11_reg;
        result_V_5_reg_1862_pp0_iter8_reg <= result_V_5_reg_1862;
        result_V_5_reg_1862_pp0_iter9_reg <= result_V_5_reg_1862_pp0_iter8_reg;
        result_V_reg_1822_pp0_iter10_reg <= result_V_reg_1822_pp0_iter9_reg;
        result_V_reg_1822_pp0_iter11_reg <= result_V_reg_1822_pp0_iter10_reg;
        result_V_reg_1822_pp0_iter12_reg <= result_V_reg_1822_pp0_iter11_reg;
        result_V_reg_1822_pp0_iter7_reg <= result_V_reg_1822;
        result_V_reg_1822_pp0_iter8_reg <= result_V_reg_1822_pp0_iter7_reg;
        result_V_reg_1822_pp0_iter9_reg <= result_V_reg_1822_pp0_iter8_reg;
        sext_ln336_reg_1872_pp0_iter10_reg <= sext_ln336_reg_1872_pp0_iter9_reg;
        sext_ln336_reg_1872_pp0_iter11_reg <= sext_ln336_reg_1872_pp0_iter10_reg;
        sext_ln336_reg_1872_pp0_iter12_reg <= sext_ln336_reg_1872_pp0_iter11_reg;
        sext_ln336_reg_1872_pp0_iter8_reg <= sext_ln336_reg_1872;
        sext_ln336_reg_1872_pp0_iter9_reg <= sext_ln336_reg_1872_pp0_iter8_reg;
        tmp_5_reg_1791_pp0_iter10_reg <= tmp_5_reg_1791_pp0_iter9_reg;
        tmp_5_reg_1791_pp0_iter11_reg <= tmp_5_reg_1791_pp0_iter10_reg;
        tmp_5_reg_1791_pp0_iter12_reg <= tmp_5_reg_1791_pp0_iter11_reg;
        tmp_5_reg_1791_pp0_iter3_reg <= tmp_5_reg_1791;
        tmp_5_reg_1791_pp0_iter4_reg <= tmp_5_reg_1791_pp0_iter3_reg;
        tmp_5_reg_1791_pp0_iter5_reg <= tmp_5_reg_1791_pp0_iter4_reg;
        tmp_5_reg_1791_pp0_iter6_reg <= tmp_5_reg_1791_pp0_iter5_reg;
        tmp_5_reg_1791_pp0_iter7_reg <= tmp_5_reg_1791_pp0_iter6_reg;
        tmp_5_reg_1791_pp0_iter8_reg <= tmp_5_reg_1791_pp0_iter7_reg;
        tmp_5_reg_1791_pp0_iter9_reg <= tmp_5_reg_1791_pp0_iter8_reg;
        tobool437_i_reg_1906_pp0_iter8_reg <= tobool437_i_reg_1906;
        trunc_ln336_1_reg_1838_pp0_iter10_reg <= trunc_ln336_1_reg_1838_pp0_iter9_reg;
        trunc_ln336_1_reg_1838_pp0_iter11_reg <= trunc_ln336_1_reg_1838_pp0_iter10_reg;
        trunc_ln336_1_reg_1838_pp0_iter7_reg <= trunc_ln336_1_reg_1838;
        trunc_ln336_1_reg_1838_pp0_iter8_reg <= trunc_ln336_1_reg_1838_pp0_iter7_reg;
        trunc_ln336_1_reg_1838_pp0_iter9_reg <= trunc_ln336_1_reg_1838_pp0_iter8_reg;
        y_reg_1827_pp0_iter10_reg <= y_reg_1827_pp0_iter9_reg;
        y_reg_1827_pp0_iter11_reg <= y_reg_1827_pp0_iter10_reg;
        y_reg_1827_pp0_iter12_reg <= y_reg_1827_pp0_iter11_reg;
        y_reg_1827_pp0_iter7_reg <= y_reg_1827;
        y_reg_1827_pp0_iter8_reg <= y_reg_1827_pp0_iter7_reg;
        y_reg_1827_pp0_iter9_reg <= y_reg_1827_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln324_reg_1745_pp0_iter1_reg <= and_ln324_reg_1745;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln258_reg_1728 <= icmp_ln258_fu_531_p2;
        icmp_ln348_4_reg_1749_pp0_iter1_reg <= icmp_ln348_4_reg_1749;
        icmp_ln349_2_reg_1754_pp0_iter1_reg <= icmp_ln349_2_reg_1754;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln324_reg_1745_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln349_1_reg_1796 <= and_ln349_1_fu_701_p2;
        tmp_5_reg_1791 <= grp_fu_501_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln324_reg_1745_pp0_iter8_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d00_V_4_reg_1965 <= d00_V_4_fu_1473_p3;
        k01_V_reg_1945 <= k01_V_fu_1422_p2;
        sub_i_i682_i_reg_1940 <= sub_i_i682_i_fu_1406_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln324_reg_1745_pp0_iter4_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dc_1_reg_1806 <= grp_fu_496_p2;
        dc_reg_1801 <= grp_fu_491_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln324_reg_1745) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln348_3_reg_1776 <= icmp_ln348_3_fu_655_p2;
        icmp_ln348_reg_1771 <= icmp_ln348_fu_649_p2;
        icmp_ln349_1_reg_1786 <= icmp_ln349_1_fu_681_p2;
        icmp_ln349_reg_1781 <= icmp_ln349_fu_675_p2;
        x_fl_reg_1759 <= x_fl_fu_625_p1;
        y_fl_reg_1765 <= y_fl_fu_630_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln324_fu_575_p2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln258_fu_531_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln348_4_reg_1749 <= icmp_ln348_4_fu_591_p2;
        icmp_ln349_2_reg_1754 <= icmp_ln349_2_fu_607_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln324_reg_1745_pp0_iter5_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        loc_1_reg_1844 <= loc_1_fu_999_p1;
        p_Result_s_reg_1811 <= data_V_fu_707_p1[32'd31];
        result_V_reg_1822 <= result_V_fu_963_p3;
        tmp_18_reg_1833 <= result_V_fu_963_p3[32'd5];
        tmp_22_reg_1851 <= result_V_fu_963_p3[32'd31];
        trunc_ln336_1_reg_1838 <= {{result_V_fu_963_p3[7:5]}};
        trunc_ln371_1_reg_1857 <= {{result_V_fu_963_p3[31:6]}};
        val_4_reg_1816 <= val_4_fu_824_p3;
        y_reg_1827 <= {{result_V_fu_963_p3[31:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln324_reg_1745_pp0_iter6_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        loc_reg_1877 <= loc_fu_1043_p1;
        result_V_5_reg_1862 <= result_V_5_fu_1026_p3;
        sext_ln336_reg_1872 <= sext_ln336_fu_1040_p1;
        tmp_17_reg_1867 <= result_V_5_fu_1026_p3[32'd5];
        tmp_21_reg_1884 <= result_V_5_fu_1026_p3[32'd31];
        tobool437_i_reg_1906 <= tobool437_i_fu_1299_p2;
        xa1_reg_1889 <= xa1_fu_1097_p3;
        ya0_reg_1896 <= ya0_fu_1239_p3;
        ya1_reg_1901 <= ya1_fu_1291_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln324_reg_1745_pp0_iter8_reg) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_8_reg_1960 <= buf_V_3_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln324_reg_1745_pp0_iter7_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tobool428_i_reg_1933 <= tobool428_i_fu_1394_p2;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln258_fu_531_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter12_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln269_reg_1732) & (icmp_ln258_reg_1728 == 1'd0))) begin
        ap_phi_mux_s_1_phi_fu_479_p4 = imgInput_data1_dout;
    end else begin
        ap_phi_mux_s_1_phi_fu_479_p4 = ap_phi_reg_pp0_iter1_s_1_reg_475;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j_1 = 17'd0;
    end else begin
        ap_sig_allocacmp_j_1 = j_fu_202;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_1_ce0 = 1'b1;
    end else begin
        buf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_1_ce1 = 1'b1;
    end else begin
        buf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln315_reg_1741 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_cast9_i == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_1_we0 = 1'b1;
    end else begin
        buf_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_2_ce0 = 1'b1;
    end else begin
        buf_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_2_ce1 = 1'b1;
    end else begin
        buf_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln315_reg_1741 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_cast9_i == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_2_we0 = 1'b1;
    end else begin
        buf_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_3_ce0 = 1'b1;
    end else begin
        buf_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_3_ce1 = 1'b1;
    end else begin
        buf_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln315_reg_1741 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_cast9_i == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_3_we0 = 1'b1;
    end else begin
        buf_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_ce0 = 1'b1;
    end else begin
        buf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_ce1 = 1'b1;
    end else begin
        buf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln315_reg_1741 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_cast9_i == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_we0 = 1'b1;
    end else begin
        buf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1666_ce = 1'b1;
    end else begin
        grp_fu_1666_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1672_ce = 1'b1;
    end else begin
        grp_fu_1672_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1678_ce = 1'b1;
    end else begin
        grp_fu_1678_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1688_ce = 1'b1;
    end else begin
        grp_fu_1688_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_491_ce = 1'b1;
    end else begin
        grp_fu_491_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_496_ce = 1'b1;
    end else begin
        grp_fu_496_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_501_ce = 1'b1;
    end else begin
        grp_fu_501_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_505_ce = 1'b1;
    end else begin
        grp_fu_505_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op75_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        imgInput_data1_blk_n = imgInput_data1_empty_n;
    end else begin
        imgInput_data1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op75_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        imgInput_data1_read = 1'b1;
    end else begin
        imgInput_data1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln324_reg_1745_pp0_iter12_reg) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        imgOutput_data4_blk_n = imgOutput_data4_full_n;
    end else begin
        imgOutput_data4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln324_reg_1745_pp0_iter12_reg) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        imgOutput_data4_write = 1'b1;
    end else begin
        imgOutput_data4_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln324_reg_1745) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        mapX_data2_blk_n = mapX_data2_empty_n;
    end else begin
        mapX_data2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln324_reg_1745) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mapX_data2_read = 1'b1;
    end else begin
        mapX_data2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln324_reg_1745) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        mapY_data3_blk_n = mapY_data3_empty_n;
    end else begin
        mapY_data3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln324_reg_1745) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mapY_data3_read = 1'b1;
    end else begin
        mapY_data3_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r1_ce0 = 1'b1;
    end else begin
        r1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r1_ce1 = 1'b1;
    end else begin
        r1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln258_fu_531_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r1_we0 = 1'b1;
    end else begin
        r1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r2_ce0 = 1'b1;
    end else begin
        r2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r2_ce1 = 1'b1;
    end else begin
        r2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln258_fu_531_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r2_we0 = 1'b1;
    end else begin
        r2_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln315_fu_565_p2 = (mul_ln315_cast_fu_519_p1 + div235_udiv_i_fu_555_p4);

assign add_ln339_1_fu_1531_p2 = (trunc_ln336_1_reg_1838_pp0_iter11_reg + 3'd1);

assign add_ln346_1_fu_875_p2 = ($signed(zext_ln346_1_fu_871_p1) + $signed(9'd385));

assign add_ln346_fu_750_p2 = ($signed(zext_ln346_fu_746_p1) + $signed(9'd385));

assign add_ln371_fu_1185_p2 = ($signed(sext_ln371_1_fu_1149_p1) + $signed(sext_ln371_2_fu_1181_p1));

assign and_ln269_fu_549_p2 = (icmp_ln269_fu_543_p2 & cmp111_i);

assign and_ln324_fu_575_p2 = (icmp_ln269_fu_543_p2 & cmp263_i);

assign and_ln348_1_fu_1577_p2 = (tmp_5_reg_1791_pp0_iter12_reg & and_ln348_fu_1571_p2);

assign and_ln348_2_fu_1614_p2 = (icmp_ln348_1_fu_1586_p2 & and_ln348_1_fu_1577_p2);

assign and_ln348_3_fu_1620_p2 = (xor_ln348_fu_1557_p2 & and_ln348_2_fu_1614_p2);

assign and_ln348_4_fu_1626_p2 = (xor_ln349_fu_1608_p2 & icmp_ln348_2_fu_1595_p2);

assign and_ln348_5_fu_1632_p2 = (and_ln349_1_reg_1796_pp0_iter12_reg & and_ln348_4_fu_1626_p2);

assign and_ln348_fu_1571_p2 = (or_ln348_fu_1563_p2 & or_ln348_1_fu_1567_p2);

assign and_ln349_1_fu_701_p2 = (grp_fu_505_p2 & and_ln349_fu_695_p2);

assign and_ln349_fu_695_p2 = (or_ln349_fu_687_p2 & or_ln349_1_fu_691_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = (((1'd1 == and_ln324_reg_1745_pp0_iter12_reg) & (ap_enable_reg_pp0_iter13 == 1'b1) & (imgOutput_data4_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((mapX_data2_empty_n == 1'b0) & (1'd1 == and_ln324_reg_1745)) | ((ap_predicate_op75_read_state2 == 1'b1) & (imgInput_data1_empty_n == 1'b0)) | ((mapY_data3_empty_n == 1'b0) & (1'd1 == and_ln324_reg_1745)))));
end

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'd1 == and_ln324_reg_1745_pp0_iter12_reg) & (ap_enable_reg_pp0_iter13 == 1'b1) & (imgOutput_data4_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((mapX_data2_empty_n == 1'b0) & (1'd1 == and_ln324_reg_1745)) | ((ap_predicate_op75_read_state2 == 1'b1) & (imgInput_data1_empty_n == 1'b0)) | ((mapY_data3_empty_n == 1'b0) & (1'd1 == and_ln324_reg_1745)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'd1 == and_ln324_reg_1745_pp0_iter12_reg) & (ap_enable_reg_pp0_iter13 == 1'b1) & (imgOutput_data4_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((mapX_data2_empty_n == 1'b0) & (1'd1 == and_ln324_reg_1745)) | ((ap_predicate_op75_read_state2 == 1'b1) & (imgInput_data1_empty_n == 1'b0)) | ((mapY_data3_empty_n == 1'b0) & (1'd1 == and_ln324_reg_1745)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'd1 == and_ln324_reg_1745_pp0_iter12_reg) & (ap_enable_reg_pp0_iter13 == 1'b1) & (imgOutput_data4_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((mapX_data2_empty_n == 1'b0) & (1'd1 == and_ln324_reg_1745)) | ((ap_predicate_op75_read_state2 == 1'b1) & (imgInput_data1_empty_n == 1'b0)) | ((mapY_data3_empty_n == 1'b0) & (1'd1 == and_ln324_reg_1745)))));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage0_iter13 = ((1'd1 == and_ln324_reg_1745_pp0_iter12_reg) & (imgOutput_data4_full_n == 1'b0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((mapX_data2_empty_n == 1'b0) & (1'd1 == and_ln324_reg_1745)) | ((ap_predicate_op75_read_state2 == 1'b1) & (imgInput_data1_empty_n == 1'b0)) | ((mapY_data3_empty_n == 1'b0) & (1'd1 == and_ln324_reg_1745)));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_561 = ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_enable_operation_235 = (1'd1 == and_ln324_reg_1745_pp0_iter7_reg);
end

always @ (*) begin
    ap_enable_operation_236 = (1'd1 == and_ln324_reg_1745_pp0_iter7_reg);
end

always @ (*) begin
    ap_enable_operation_237 = (1'd1 == and_ln324_reg_1745_pp0_iter7_reg);
end

always @ (*) begin
    ap_enable_operation_238 = (1'd1 == and_ln324_reg_1745_pp0_iter7_reg);
end

always @ (*) begin
    ap_enable_operation_251 = (1'd1 == and_ln324_reg_1745_pp0_iter8_reg);
end

always @ (*) begin
    ap_enable_operation_252 = (1'd1 == and_ln324_reg_1745_pp0_iter8_reg);
end

always @ (*) begin
    ap_enable_operation_253 = (1'd1 == and_ln324_reg_1745_pp0_iter8_reg);
end

always @ (*) begin
    ap_enable_operation_254 = (1'd1 == and_ln324_reg_1745_pp0_iter8_reg);
end

always @ (*) begin
    ap_enable_operation_285 = (1'd1 == and_ln324_reg_1745_pp0_iter11_reg);
end

always @ (*) begin
    ap_enable_operation_288 = (1'd1 == and_ln324_reg_1745_pp0_iter11_reg);
end

always @ (*) begin
    ap_enable_operation_302 = (1'd1 == and_ln324_reg_1745_pp0_iter12_reg);
end

always @ (*) begin
    ap_enable_operation_305 = (1'd1 == and_ln324_reg_1745_pp0_iter12_reg);
end

always @ (*) begin
    ap_enable_operation_65 = (icmp_ln258_fu_531_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_66 = (icmp_ln258_fu_531_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_83 = (ap_predicate_op83_store_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_85 = (ap_predicate_op85_store_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_87 = (ap_predicate_op87_store_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_89 = (ap_predicate_op89_store_state2 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state10_pp0_iter9_stage0 = ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state13_pp0_iter12_stage0 = ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state14_pp0_iter13_stage0 = ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state1_pp0_iter0_stage0 = ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state2_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state9_pp0_iter8_stage0 = ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_s_1_reg_475 = 'bx;

always @ (*) begin
    ap_predicate_op75_read_state2 = ((1'd1 == and_ln269_reg_1732) & (icmp_ln258_reg_1728 == 1'd0));
end

always @ (*) begin
    ap_predicate_op83_store_state2 = ((trunc_ln315_reg_1741 == 1'd0) & (i_cast9_i == 1'd0));
end

always @ (*) begin
    ap_predicate_op85_store_state2 = ((trunc_ln315_reg_1741 == 1'd1) & (i_cast9_i == 1'd0));
end

always @ (*) begin
    ap_predicate_op87_store_state2 = ((trunc_ln315_reg_1741 == 1'd0) & (i_cast9_i == 1'd1));
end

always @ (*) begin
    ap_predicate_op89_store_state2 = ((trunc_ln315_reg_1741 == 1'd1) & (i_cast9_i == 1'd1));
end

assign buf_V_1_address0 = zext_ln315_fu_618_p1;

assign buf_V_1_address1 = p_cast6_fu_1359_p1;

assign buf_V_2_address0 = zext_ln315_fu_618_p1;

assign buf_V_2_address1 = p_cast7_fu_1379_p1;

assign buf_V_3_address0 = zext_ln315_fu_618_p1;

assign buf_V_3_address1 = p_cast8_fu_1389_p1;

assign buf_V_address0 = zext_ln315_fu_618_p1;

assign buf_V_address1 = p_cast5_fu_1349_p1;

assign cols_cast_i_cast_fu_509_p1 = cols_cast_i;

assign d00_V_4_fu_1473_p3 = ((tobool437_i_reg_1906_pp0_iter8_reg[0:0] == 1'b1) ? d10_V_4_fu_1466_p3 : d00_V_fu_1452_p3);

assign d00_V_fu_1452_p3 = ((tobool428_i_reg_1933[0:0] == 1'b1) ? buf_V_1_q1 : buf_V_q1);

assign d01_V_3_fu_1459_p3 = ((tobool428_i_reg_1933[0:0] == 1'b1) ? buf_V_q1 : buf_V_1_q1);

assign d01_V_fu_1480_p3 = ((tobool437_i_reg_1906_pp0_iter8_reg[0:0] == 1'b1) ? buf_V_3_q1 : d01_V_3_fu_1459_p3);

assign d10_V_4_fu_1466_p3 = ((tobool428_i_reg_1933[0:0] == 1'b1) ? buf_V_3_q1 : buf_V_2_q1);

assign d10_V_fu_1487_p3 = ((tobool437_i_reg_1906_pp0_iter8_reg[0:0] == 1'b1) ? d00_V_fu_1452_p3 : d10_V_4_fu_1466_p3);

assign data_V_1_fu_832_p1 = dc_1_reg_1806;

assign data_V_fu_707_p1 = dc_reg_1801;

assign div235_udiv_i_fu_555_p4 = {{ap_sig_allocacmp_j_1[13:1]}};

assign empty_54_fu_1343_p2 = (empty_fu_1337_p2 + xa0_fu_1329_p2);

assign empty_55_fu_1354_p2 = (empty_fu_1337_p2 + xa1_reg_1889);

assign empty_56_fu_1367_p1 = 13'd961;

assign empty_57_fu_1373_p2 = (empty_56_fu_1367_p2 + xa0_fu_1329_p2);

assign empty_58_fu_1384_p2 = (empty_56_fu_1367_p2 + xa1_reg_1889);

assign empty_fu_1337_p1 = 13'd961;

assign grp_fu_1666_p0 = grp_fu_1666_p00;

assign grp_fu_1666_p00 = k01_V_fu_1422_p2;

assign grp_fu_1666_p1 = grp_fu_1666_p10;

assign grp_fu_1666_p10 = d01_V_fu_1480_p3;

assign grp_fu_1672_p0 = grp_fu_1672_p00;

assign grp_fu_1672_p00 = k10_V_fu_1438_p2;

assign grp_fu_1672_p1 = grp_fu_1672_p10;

assign grp_fu_1672_p10 = d10_V_fu_1487_p3;

assign grp_fu_1678_p0 = {{sub_i_i682_i_reg_1940}, {5'd0}};

assign grp_fu_1678_p2 = grp_fu_1678_p20;

assign grp_fu_1678_p20 = d00_V_4_reg_1965;

assign grp_fu_1688_p0 = grp_fu_1688_p00;

assign grp_fu_1688_p00 = mul_i_i_fu_1508_p2;

assign grp_fu_1688_p1 = grp_fu_1688_p10;

assign grp_fu_1688_p10 = p_Val2_8_reg_1960;

assign grp_fu_501_p0 = mapY_data3_dout;

assign grp_fu_505_p0 = mapX_data2_dout;

assign icmp_ln258_fu_531_p2 = ((ap_sig_allocacmp_j_1 == add106_i) ? 1'b1 : 1'b0);

assign icmp_ln269_fu_543_p2 = ((ap_sig_allocacmp_j_1 < cols_cast_i_cast_fu_509_p1) ? 1'b1 : 1'b0);

assign icmp_ln348_1_fu_1586_p2 = ((y_reg_1827_pp0_iter12_reg == r1_load_cast_i_fu_1582_p1) ? 1'b1 : 1'b0);

assign icmp_ln348_2_fu_1595_p2 = ((r2_load_cast_i_fu_1591_p1 == ynext_fu_1545_p2) ? 1'b1 : 1'b0);

assign icmp_ln348_3_fu_655_p2 = ((trunc_ln348_fu_645_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln348_4_fu_591_p2 = ((tmp_4_fu_581_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln348_fu_649_p2 = ((tmp_3_fu_635_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln349_1_fu_681_p2 = ((trunc_ln349_fu_671_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln349_2_fu_607_p2 = ((tmp_7_fu_597_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln349_fu_675_p2 = ((tmp_6_fu_661_p4 != 8'd255) ? 1'b1 : 1'b0);

assign idxprom2582_i_cast_fu_513_p1 = idxprom2582_i;

assign imgOutput_data4_din = ((in_range_fu_1637_p2[0:0] == 1'b1) ? tmp_fu_1647_p4 : 8'd0);

assign in_range_fu_1637_p2 = (and_ln348_5_fu_1632_p2 & and_ln348_3_fu_1620_p2);

assign isNeg_1_fu_881_p3 = add_ln346_1_fu_875_p2[32'd8];

assign isNeg_fu_756_p3 = add_ln346_fu_750_p2[32'd8];

assign j_2_fu_537_p2 = (ap_sig_allocacmp_j_1 + 17'd1);

assign k01_V_fu_1422_p0 = k01_V_fu_1422_p00;

assign k01_V_fu_1422_p00 = sub_i_i682_i_fu_1406_p2;

assign k01_V_fu_1422_p1 = k01_V_fu_1422_p10;

assign k01_V_fu_1422_p10 = loc_reg_1877_pp0_iter8_reg;

assign k10_V_fu_1438_p0 = k10_V_fu_1438_p00;

assign k10_V_fu_1438_p00 = sub_i_i569_i_fu_1428_p2;

assign k10_V_fu_1438_p1 = k10_V_fu_1438_p10;

assign k10_V_fu_1438_p10 = loc_1_reg_1844_pp0_iter8_reg;

assign loc_1_cast_i_fu_1403_p1 = loc_1_reg_1844_pp0_iter8_reg;

assign loc_1_fu_999_p1 = result_V_fu_963_p3[4:0];

assign loc_cast_i_fu_1419_p1 = loc_reg_1877_pp0_iter8_reg;

assign loc_fu_1043_p1 = result_V_5_fu_1026_p3[4:0];

assign lshr_ln371_1_fu_1111_p4 = {{sub_ln371_fu_1105_p2[27:1]}};

assign mantissa_1_fu_857_p4 = {{{{1'd1}, {p_Result_3_fu_853_p1}}}, {1'd0}};

assign mantissa_fu_732_p4 = {{{{1'd1}, {p_Result_1_fu_728_p1}}}, {1'd0}};

assign mul_i_i_fu_1508_p0 = mul_i_i_fu_1508_p00;

assign mul_i_i_fu_1508_p00 = loc_1_reg_1844_pp0_iter9_reg;

assign mul_i_i_fu_1508_p1 = mul_i_i_fu_1508_p10;

assign mul_i_i_fu_1508_p10 = loc_reg_1877_pp0_iter9_reg;

assign mul_ln315_cast_fu_519_p1 = mul_ln315;

assign or_ln348_1_fu_1567_p2 = (icmp_ln348_6 | icmp_ln348_4_reg_1749_pp0_iter12_reg);

assign or_ln348_fu_1563_p2 = (icmp_ln348_reg_1771_pp0_iter12_reg | icmp_ln348_3_reg_1776_pp0_iter12_reg);

assign or_ln349_1_fu_691_p2 = (icmp_ln349_4 | icmp_ln349_2_reg_1754_pp0_iter1_reg);

assign or_ln349_fu_687_p2 = (icmp_ln349_reg_1781 | icmp_ln349_1_reg_1786);

assign p_Result_1_fu_728_p1 = data_V_fu_707_p1[22:0];

assign p_Result_2_fu_835_p3 = data_V_1_fu_832_p1[32'd31];

assign p_Result_3_fu_853_p1 = data_V_1_fu_832_p1[22:0];

assign p_and_f3_fu_1203_p3 = {{1'd0}, {trunc_ln371_3_fu_1191_p1}};

assign p_and_f9_fu_1153_p3 = {{1'd0}, {tmp_18_reg_1833}};

assign p_and_f_fu_1255_p3 = {{1'd0}, {trunc_ln371_fu_1145_p1}};

assign p_and_t1_fu_1305_p3 = {{1'd0}, {tmp_17_reg_1867}};

assign p_and_t5_fu_1221_p3 = {{1'd0}, {sub_ln371_3_fu_1215_p2}};

assign p_and_t_fu_1273_p3 = {{1'd0}, {sub_ln372_fu_1267_p2}};

assign p_cast5_fu_1349_p1 = empty_54_fu_1343_p2;

assign p_cast6_fu_1359_p1 = empty_55_fu_1354_p2;

assign p_cast7_fu_1379_p1 = empty_57_fu_1373_p2;

assign p_cast8_fu_1389_p1 = empty_58_fu_1384_p2;

assign r1_address0 = idxprom2582_i_cast_fu_513_p1;

assign r1_address1 = zext_ln348_fu_1536_p1;

assign r1_d0 = i;

assign r1_load_cast_i_fu_1582_p1 = r1_q1;

assign r2_address0 = idxprom2582_i_cast_fu_513_p1;

assign r2_address1 = zext_ln348_1_fu_1540_p1;

assign r2_d0 = i;

assign r2_load_cast_i_fu_1591_p1 = r2_q1;

assign r_V_1_fu_796_p2 = zext_ln15_fu_742_p1 << zext_ln1488_fu_786_p1;

assign r_V_2_fu_915_p2 = zext_ln15_1_fu_867_p1 >> zext_ln1488_1_fu_911_p1;

assign r_V_3_fu_921_p2 = zext_ln15_1_fu_867_p1 << zext_ln1488_1_fu_911_p1;

assign r_V_fu_790_p2 = zext_ln15_fu_742_p1 >> zext_ln1488_fu_786_p1;

assign result_V_2_fu_1021_p2 = (32'd0 - val_4_reg_1816);

assign result_V_3_fu_957_p2 = (32'd0 - val_5_fu_949_p3);

assign result_V_5_fu_1026_p3 = ((p_Result_s_reg_1811[0:0] == 1'b1) ? result_V_2_fu_1021_p2 : val_4_reg_1816);

assign result_V_fu_963_p3 = ((p_Result_2_fu_835_p3[0:0] == 1'b1) ? result_V_3_fu_957_p2 : val_5_fu_949_p3);

assign ret_V_fu_1643_p2 = (grp_fu_1688_p3 + grp_fu_1678_p4);

assign select_ln369_1_fu_1318_p3 = ((tmp_21_reg_1884[0:0] == 1'b1) ? sub_ln369_2_fu_1312_p2 : p_and_t1_fu_1305_p3);

assign select_ln371_1_fu_1170_p3 = ((tmp_22_reg_1851[0:0] == 1'b1) ? sub_ln371_2_fu_1164_p2 : zext_ln371_2_fu_1160_p1);

assign select_ln371_fu_1138_p3 = ((tmp_22_reg_1851[0:0] == 1'b1) ? sub_ln371_1_fu_1125_p2 : zext_ln371_1_fu_1134_p1);

assign sext_ln1488_1_fu_907_p1 = $signed(ush_1_fu_899_p3);

assign sext_ln1488_fu_782_p1 = $signed(ush_fu_774_p3);

assign sext_ln1512_1_fu_895_p1 = $signed(sub_ln1512_1_fu_889_p2);

assign sext_ln1512_fu_770_p1 = $signed(sub_ln1512_fu_764_p2);

assign sext_ln336_fu_1040_p1 = y_reg_1827;

assign sext_ln369_fu_1325_p1 = $signed(select_ln369_1_fu_1318_p3);

assign sext_ln371_1_fu_1149_p1 = select_ln371_fu_1138_p3;

assign sext_ln371_2_fu_1181_p1 = select_ln371_1_fu_1170_p3;

assign sext_ln371_fu_1131_p1 = $signed(trunc_ln371_1_reg_1857);

assign sub_i_i569_i_fu_1428_p2 = ($signed(6'd32) - $signed(loc_cast_i_fu_1419_p1));

assign sub_i_i682_i_fu_1406_p2 = ($signed(6'd32) - $signed(loc_1_cast_i_fu_1403_p1));

assign sub_ln1512_1_fu_889_p2 = (8'd127 - xs_exp_V_1_fu_843_p4);

assign sub_ln1512_fu_764_p2 = (8'd127 - xs_exp_V_fu_718_p4);

assign sub_ln369_1_fu_1081_p2 = (13'd0 - trunc_ln369_2_fu_1071_p4);

assign sub_ln369_2_fu_1312_p2 = (2'd0 - p_and_t1_fu_1305_p3);

assign sub_ln369_fu_1065_p2 = (14'd0 - trunc_ln4_fu_1047_p4);

assign sub_ln371_1_fu_1125_p2 = (28'd0 - zext_ln371_fu_1121_p1);

assign sub_ln371_2_fu_1164_p2 = (3'd0 - zext_ln371_2_fu_1160_p1);

assign sub_ln371_3_fu_1215_p2 = (2'd0 - trunc_ln371_3_fu_1191_p1);

assign sub_ln371_4_fu_1233_p2 = (4'd0 - zext_ln371_4_fu_1229_p1);

assign sub_ln371_fu_1105_p2 = ($signed(28'd0) - $signed(sext_ln336_fu_1040_p1));

assign sub_ln372_1_fu_1285_p2 = (4'd0 - zext_ln372_1_fu_1281_p1);

assign sub_ln372_fu_1267_p2 = (2'd0 - trunc_ln371_fu_1145_p1);

assign tmp_11_fu_802_p3 = r_V_fu_790_p2[32'd24];

assign tmp_16_fu_927_p3 = r_V_2_fu_915_p2[32'd24];

assign tmp_19_fu_1550_p3 = result_V_reg_1822_pp0_iter12_reg[32'd31];

assign tmp_20_fu_1601_p3 = result_V_5_reg_1862_pp0_iter12_reg[32'd31];

assign tmp_21_fu_1057_p3 = result_V_5_fu_1026_p3[32'd31];

assign tmp_23_fu_1195_p3 = add_ln371_fu_1185_p2[32'd28];

assign tmp_24_fu_1247_p3 = select_ln371_fu_1138_p3[32'd27];

assign tmp_3_fu_635_p4 = {{mapY_data3_dout[30:23]}};

assign tmp_4_fu_581_p4 = {{bitcast_ln348[30:23]}};

assign tmp_6_fu_661_p4 = {{mapX_data2_dout[30:23]}};

assign tmp_7_fu_597_p4 = {{bitcast_ln349[30:23]}};

assign tmp_9_fu_814_p4 = {{r_V_1_fu_796_p2[55:24]}};

assign tmp_fu_1647_p4 = {{ret_V_fu_1643_p2[17:10]}};

assign tmp_s_fu_939_p4 = {{r_V_3_fu_921_p2[55:24]}};

assign tobool428_i_fu_1394_p2 = ((p_and_t1_fu_1305_p3 != 2'd0) ? 1'b1 : 1'b0);

assign tobool437_i_fu_1299_p2 = ((trunc_ln371_2_fu_1177_p1 != 2'd0) ? 1'b1 : 1'b0);

assign trunc_ln315_fu_571_p1 = ap_sig_allocacmp_j_1[0:0];

assign trunc_ln348_fu_645_p1 = mapY_data3_dout[22:0];

assign trunc_ln349_fu_671_p1 = mapX_data2_dout[22:0];

assign trunc_ln369_2_fu_1071_p4 = {{sub_ln369_fu_1065_p2[13:1]}};

assign trunc_ln369_3_fu_1087_p4 = {{result_V_5_fu_1026_p3[18:6]}};

assign trunc_ln371_2_fu_1177_p1 = select_ln371_1_fu_1170_p3[1:0];

assign trunc_ln371_3_fu_1191_p1 = add_ln371_fu_1185_p2[1:0];

assign trunc_ln371_fu_1145_p1 = select_ln371_fu_1138_p3[1:0];

assign trunc_ln4_fu_1047_p4 = {{result_V_5_fu_1026_p3[18:5]}};

assign ush_1_fu_899_p3 = ((isNeg_1_fu_881_p3[0:0] == 1'b1) ? sext_ln1512_1_fu_895_p1 : add_ln346_1_fu_875_p2);

assign ush_fu_774_p3 = ((isNeg_fu_756_p3[0:0] == 1'b1) ? sext_ln1512_fu_770_p1 : add_ln346_fu_750_p2);

assign val_4_fu_824_p3 = ((isNeg_fu_756_p3[0:0] == 1'b1) ? zext_ln818_fu_810_p1 : tmp_9_fu_814_p4);

assign val_5_fu_949_p3 = ((isNeg_1_fu_881_p3[0:0] == 1'b1) ? zext_ln818_1_fu_935_p1 : tmp_s_fu_939_p4);

assign x_fl_fu_625_p1 = mapX_data2_dout;

assign xa0_fu_1329_p2 = ($signed(xa1_reg_1889) + $signed(sext_ln369_fu_1325_p1));

assign xa1_fu_1097_p3 = ((tmp_21_fu_1057_p3[0:0] == 1'b1) ? sub_ln369_1_fu_1081_p2 : trunc_ln369_3_fu_1087_p4);

assign xor_ln348_fu_1557_p2 = (tmp_19_fu_1550_p3 ^ 1'd1);

assign xor_ln349_fu_1608_p2 = (tmp_20_fu_1601_p3 ^ 1'd1);

assign xs_exp_V_1_fu_843_p4 = {{data_V_1_fu_832_p1[30:23]}};

assign xs_exp_V_fu_718_p4 = {{data_V_fu_707_p1[30:23]}};

assign y_fl_fu_630_p1 = mapY_data3_dout;

assign ya0_fu_1239_p3 = ((tmp_23_fu_1195_p3[0:0] == 1'b1) ? sub_ln371_4_fu_1233_p2 : zext_ln371_3_fu_1211_p1);

assign ya1_fu_1291_p3 = ((tmp_24_fu_1247_p3[0:0] == 1'b1) ? sub_ln372_1_fu_1285_p2 : zext_ln372_fu_1263_p1);

assign ynext_fu_1545_p2 = ($signed(sext_ln336_reg_1872_pp0_iter12_reg) + $signed(28'd1));

assign zext_ln1488_1_fu_911_p1 = $unsigned(sext_ln1488_1_fu_907_p1);

assign zext_ln1488_fu_786_p1 = $unsigned(sext_ln1488_fu_782_p1);

assign zext_ln15_1_fu_867_p1 = mantissa_1_fu_857_p4;

assign zext_ln15_fu_742_p1 = mantissa_fu_732_p4;

assign zext_ln315_fu_618_p1 = add_ln315_reg_1736;

assign zext_ln346_1_fu_871_p1 = xs_exp_V_1_fu_843_p4;

assign zext_ln346_fu_746_p1 = xs_exp_V_fu_718_p4;

assign zext_ln348_1_fu_1540_p1 = add_ln339_1_fu_1531_p2;

assign zext_ln348_fu_1536_p1 = trunc_ln336_1_reg_1838_pp0_iter11_reg;

assign zext_ln371_1_fu_1134_p1 = $unsigned(sext_ln371_fu_1131_p1);

assign zext_ln371_2_fu_1160_p1 = p_and_f9_fu_1153_p3;

assign zext_ln371_3_fu_1211_p1 = p_and_f3_fu_1203_p3;

assign zext_ln371_4_fu_1229_p1 = p_and_t5_fu_1221_p3;

assign zext_ln371_fu_1121_p1 = lshr_ln371_1_fu_1111_p4;

assign zext_ln372_1_fu_1281_p1 = p_and_t_fu_1273_p3;

assign zext_ln372_fu_1263_p1 = p_and_f_fu_1255_p3;

assign zext_ln818_1_fu_935_p1 = tmp_16_fu_927_p3;

assign zext_ln818_fu_810_p1 = tmp_11_fu_802_p3;

endmodule //remap_accel_xFRemapLI_0_0_1_4_8_1080_1920_1_2_2_2_2_false_Pipeline_loop_width
