// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gaussian_filter_accel_GaussianBlur_3_0_0_2160_3840_1_2_2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_src_rows_dout,
        p_src_rows_num_data_valid,
        p_src_rows_fifo_cap,
        p_src_rows_empty_n,
        p_src_rows_read,
        p_src_cols_dout,
        p_src_cols_num_data_valid,
        p_src_cols_fifo_cap,
        p_src_cols_empty_n,
        p_src_cols_read,
        in_mat_data1_dout,
        in_mat_data1_num_data_valid,
        in_mat_data1_fifo_cap,
        in_mat_data1_empty_n,
        in_mat_data1_read,
        out_mat_data2_din,
        out_mat_data2_num_data_valid,
        out_mat_data2_fifo_cap,
        out_mat_data2_full_n,
        out_mat_data2_write,
        sigma_dout,
        sigma_num_data_valid,
        sigma_fifo_cap,
        sigma_empty_n,
        sigma_read
);

parameter    ap_ST_fsm_state1 = 38'd1;
parameter    ap_ST_fsm_state2 = 38'd2;
parameter    ap_ST_fsm_state3 = 38'd4;
parameter    ap_ST_fsm_state4 = 38'd8;
parameter    ap_ST_fsm_state5 = 38'd16;
parameter    ap_ST_fsm_state6 = 38'd32;
parameter    ap_ST_fsm_state7 = 38'd64;
parameter    ap_ST_fsm_state8 = 38'd128;
parameter    ap_ST_fsm_state9 = 38'd256;
parameter    ap_ST_fsm_state10 = 38'd512;
parameter    ap_ST_fsm_state11 = 38'd1024;
parameter    ap_ST_fsm_state12 = 38'd2048;
parameter    ap_ST_fsm_state13 = 38'd4096;
parameter    ap_ST_fsm_state14 = 38'd8192;
parameter    ap_ST_fsm_state15 = 38'd16384;
parameter    ap_ST_fsm_state16 = 38'd32768;
parameter    ap_ST_fsm_state17 = 38'd65536;
parameter    ap_ST_fsm_state18 = 38'd131072;
parameter    ap_ST_fsm_state19 = 38'd262144;
parameter    ap_ST_fsm_state20 = 38'd524288;
parameter    ap_ST_fsm_state21 = 38'd1048576;
parameter    ap_ST_fsm_state22 = 38'd2097152;
parameter    ap_ST_fsm_state23 = 38'd4194304;
parameter    ap_ST_fsm_state24 = 38'd8388608;
parameter    ap_ST_fsm_state25 = 38'd16777216;
parameter    ap_ST_fsm_state26 = 38'd33554432;
parameter    ap_ST_fsm_state27 = 38'd67108864;
parameter    ap_ST_fsm_state28 = 38'd134217728;
parameter    ap_ST_fsm_state29 = 38'd268435456;
parameter    ap_ST_fsm_state30 = 38'd536870912;
parameter    ap_ST_fsm_state31 = 38'd1073741824;
parameter    ap_ST_fsm_state32 = 38'd2147483648;
parameter    ap_ST_fsm_state33 = 38'd4294967296;
parameter    ap_ST_fsm_state34 = 38'd8589934592;
parameter    ap_ST_fsm_state35 = 38'd17179869184;
parameter    ap_ST_fsm_state36 = 38'd34359738368;
parameter    ap_ST_fsm_state37 = 38'd68719476736;
parameter    ap_ST_fsm_state38 = 38'd137438953472;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] p_src_rows_dout;
input  [1:0] p_src_rows_num_data_valid;
input  [1:0] p_src_rows_fifo_cap;
input   p_src_rows_empty_n;
output   p_src_rows_read;
input  [31:0] p_src_cols_dout;
input  [1:0] p_src_cols_num_data_valid;
input  [1:0] p_src_cols_fifo_cap;
input   p_src_cols_empty_n;
output   p_src_cols_read;
input  [7:0] in_mat_data1_dout;
input  [1:0] in_mat_data1_num_data_valid;
input  [1:0] in_mat_data1_fifo_cap;
input   in_mat_data1_empty_n;
output   in_mat_data1_read;
output  [7:0] out_mat_data2_din;
input  [1:0] out_mat_data2_num_data_valid;
input  [1:0] out_mat_data2_fifo_cap;
input   out_mat_data2_full_n;
output   out_mat_data2_write;
input  [31:0] sigma_dout;
input  [2:0] sigma_num_data_valid;
input  [2:0] sigma_fifo_cap;
input   sigma_empty_n;
output   sigma_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_rows_read;
reg p_src_cols_read;
reg in_mat_data1_read;
reg out_mat_data2_write;
reg sigma_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [37:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_rows_blk_n;
reg    p_src_cols_blk_n;
reg    sigma_blk_n;
wire   [31:0] grp_fu_123_p2;
reg   [31:0] reg_140;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state10;
reg   [31:0] sigma_read_reg_247;
wire   [15:0] trunc_ln1312_fu_146_p1;
reg   [15:0] trunc_ln1312_reg_254;
wire   [15:0] trunc_ln1312_1_fu_150_p1;
reg   [15:0] trunc_ln1312_1_reg_259;
wire   [31:0] select_ln40_fu_195_p3;
reg   [31:0] select_ln40_reg_264;
wire    ap_CS_fsm_state2;
wire   [31:0] scale2X_fu_212_p1;
reg   [31:0] scale2X_reg_270;
wire    ap_CS_fsm_state22;
wire   [31:0] grp_fu_128_p2;
reg   [31:0] sum_reg_278;
wire    ap_CS_fsm_state35;
reg   [1:0] cf_address0;
reg    cf_ce0;
reg    cf_we0;
reg   [31:0] cf_d0;
wire   [31:0] cf_q0;
wire    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_ap_start;
wire    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_ap_done;
wire    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_ap_idle;
wire    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_ap_ready;
wire   [1:0] grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_cf_address0;
wire    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_cf_ce0;
wire    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_cf_we0;
wire   [31:0] grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_cf_d0;
wire   [31:0] grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_sum_1_out;
wire    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_sum_1_out_ap_vld;
wire   [31:0] grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_289_p_din0;
wire   [31:0] grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_289_p_din1;
wire   [0:0] grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_289_p_opcode;
wire    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_289_p_ce;
wire   [31:0] grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_123_p_din0;
wire   [31:0] grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_123_p_din1;
wire    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_123_p_ce;
wire    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_ap_start;
wire    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_ap_done;
wire    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_ap_idle;
wire    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_ap_ready;
wire   [1:0] grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_cf_address0;
wire    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_cf_ce0;
wire    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_cf_we0;
wire   [31:0] grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_cf_d0;
wire   [7:0] grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_weights_1_out;
wire    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_weights_1_out_ap_vld;
wire   [7:0] grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_weights_out;
wire    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_weights_out_ap_vld;
wire   [31:0] grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_289_p_din0;
wire   [31:0] grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_289_p_din1;
wire   [1:0] grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_289_p_opcode;
wire    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_289_p_ce;
wire   [31:0] grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_123_p_din0;
wire   [31:0] grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_123_p_din1;
wire    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_123_p_ce;
wire    grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_start;
wire    grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_done;
wire    grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_idle;
wire    grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_ready;
wire    grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_in_mat_data1_read;
wire   [7:0] grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_out_mat_data2_din;
wire    grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_out_mat_data2_write;
reg    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_ap_start_reg;
wire    ap_CS_fsm_state23;
reg    grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_ap_start_reg;
wire    ap_CS_fsm_state36;
reg    grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_start_reg;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state24;
reg    ap_block_state1;
reg   [31:0] grp_fu_123_p0;
reg   [31:0] grp_fu_123_p1;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state7;
reg   [31:0] grp_fu_128_p1;
wire    ap_CS_fsm_state11;
wire   [31:0] bitcast_ln40_fu_154_p1;
wire   [7:0] tmp_fu_157_p4;
wire   [22:0] trunc_ln40_fu_167_p1;
wire   [0:0] icmp_ln40_1_fu_177_p2;
wire   [0:0] icmp_ln40_fu_171_p2;
wire   [0:0] or_ln40_fu_183_p2;
wire   [0:0] grp_fu_134_p2;
wire   [0:0] and_ln40_fu_189_p2;
wire   [31:0] bitcast_ln46_fu_202_p1;
wire   [31:0] xor_ln46_fu_206_p2;
reg    grp_fu_123_ce;
reg    grp_fu_134_ce;
wire   [31:0] grp_fu_289_p2;
reg   [31:0] grp_fu_289_p0;
reg   [31:0] grp_fu_289_p1;
reg   [1:0] grp_fu_289_opcode;
reg    grp_fu_289_ce;
reg   [37:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
reg    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
reg    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
reg    ap_ST_fsm_state38_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 38'd1;
#0 grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_ap_start_reg = 1'b0;
#0 grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_ap_start_reg = 1'b0;
#0 grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_start_reg = 1'b0;
end

gaussian_filter_accel_GaussianBlur_3_0_0_2160_3840_1_2_2_s_cf_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
cf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cf_address0),
    .ce0(cf_ce0),
    .we0(cf_we0),
    .d0(cf_d0),
    .q0(cf_q0)
);

gaussian_filter_accel_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1 grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_ap_start),
    .ap_done(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_ap_done),
    .ap_idle(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_ap_idle),
    .ap_ready(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_ap_ready),
    .scale2X(scale2X_reg_270),
    .cf_address0(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_cf_address0),
    .cf_ce0(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_cf_ce0),
    .cf_we0(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_cf_we0),
    .cf_d0(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_cf_d0),
    .sum_1_out(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_sum_1_out),
    .sum_1_out_ap_vld(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_sum_1_out_ap_vld),
    .grp_fu_289_p_din0(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_289_p_din0),
    .grp_fu_289_p_din1(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_289_p_din1),
    .grp_fu_289_p_opcode(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_289_p_opcode),
    .grp_fu_289_p_dout0(grp_fu_289_p2),
    .grp_fu_289_p_ce(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_289_p_ce),
    .grp_fu_123_p_din0(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_123_p_din0),
    .grp_fu_123_p_din1(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_123_p_din1),
    .grp_fu_123_p_dout0(grp_fu_123_p2),
    .grp_fu_123_p_ce(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_123_p_ce)
);

gaussian_filter_accel_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2 grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_ap_start),
    .ap_done(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_ap_done),
    .ap_idle(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_ap_idle),
    .ap_ready(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_ap_ready),
    .cf_address0(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_cf_address0),
    .cf_ce0(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_cf_ce0),
    .cf_we0(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_cf_we0),
    .cf_d0(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_cf_d0),
    .cf_q0(cf_q0),
    .sum(sum_reg_278),
    .weights_1_out(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_weights_1_out),
    .weights_1_out_ap_vld(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_weights_1_out_ap_vld),
    .weights_out(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_weights_out),
    .weights_out_ap_vld(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_weights_out_ap_vld),
    .grp_fu_289_p_din0(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_289_p_din0),
    .grp_fu_289_p_din1(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_289_p_din1),
    .grp_fu_289_p_opcode(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_289_p_opcode),
    .grp_fu_289_p_dout0(grp_fu_289_p2),
    .grp_fu_289_p_ce(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_289_p_ce),
    .grp_fu_123_p_din0(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_123_p_din0),
    .grp_fu_123_p_din1(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_123_p_din1),
    .grp_fu_123_p_dout0(grp_fu_123_p2),
    .grp_fu_123_p_ce(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_123_p_ce)
);

gaussian_filter_accel_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_start),
    .ap_done(grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_done),
    .ap_idle(grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_idle),
    .ap_ready(grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_ready),
    .in_mat_data1_dout(in_mat_data1_dout),
    .in_mat_data1_num_data_valid(2'd0),
    .in_mat_data1_fifo_cap(2'd0),
    .in_mat_data1_empty_n(in_mat_data1_empty_n),
    .in_mat_data1_read(grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_in_mat_data1_read),
    .out_mat_data2_din(grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_out_mat_data2_din),
    .out_mat_data2_num_data_valid(2'd0),
    .out_mat_data2_fifo_cap(2'd0),
    .out_mat_data2_full_n(out_mat_data2_full_n),
    .out_mat_data2_write(grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_out_mat_data2_write),
    .img_height(trunc_ln1312_reg_254),
    .img_width(trunc_ln1312_1_reg_259),
    .p_read(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_weights_1_out),
    .p_read1(grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_weights_out)
);

gaussian_filter_accel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U140(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_123_p0),
    .din1(grp_fu_123_p1),
    .ce(grp_fu_123_ce),
    .dout(grp_fu_123_p2)
);

gaussian_filter_accel_fdiv_32ns_32ns_32_12_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_12_no_dsp_1_U141(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1065353216),
    .din1(grp_fu_128_p1),
    .ce(1'b1),
    .dout(grp_fu_128_p2)
);

gaussian_filter_accel_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U142(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sigma_dout),
    .din1(32'd0),
    .ce(grp_fu_134_ce),
    .opcode(5'd5),
    .dout(grp_fu_134_p2)
);

gaussian_filter_accel_faddfsub_32ns_32ns_32_6_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_6_full_dsp_1_U143(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_289_p0),
    .din1(grp_fu_289_p1),
    .opcode(grp_fu_289_opcode),
    .ce(grp_fu_289_ce),
    .dout(grp_fu_289_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state38) & (grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_done == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_ap_start_reg <= 1'b1;
        end else if ((grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_ap_ready == 1'b1)) begin
            grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state35)) begin
            grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_ap_start_reg <= 1'b1;
        end else if ((grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_ap_ready == 1'b1)) begin
            grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state37)) begin
            grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_start_reg <= 1'b1;
        end else if ((grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_ready == 1'b1)) begin
            grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_140 <= grp_fu_123_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        scale2X_reg_270 <= scale2X_fu_212_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        select_ln40_reg_264 <= select_ln40_fu_195_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        sigma_read_reg_247 <= sigma_dout;
        trunc_ln1312_1_reg_259 <= trunc_ln1312_1_fu_150_p1;
        trunc_ln1312_reg_254 <= trunc_ln1312_fu_146_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        sum_reg_278 <= grp_fu_128_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((sigma_empty_n == 1'b0) | (p_src_cols_empty_n == 1'b0) | (p_src_rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

always @ (*) begin
    if ((grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_ap_done == 1'b0)) begin
        ap_ST_fsm_state23_blk = 1'b1;
    end else begin
        ap_ST_fsm_state23_blk = 1'b0;
    end
end

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

always @ (*) begin
    if ((grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_ap_done == 1'b0)) begin
        ap_ST_fsm_state36_blk = 1'b1;
    end else begin
        ap_ST_fsm_state36_blk = 1'b0;
    end
end

assign ap_ST_fsm_state37_blk = 1'b0;

always @ (*) begin
    if ((grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_done == 1'b0)) begin
        ap_ST_fsm_state38_blk = 1'b1;
    end else begin
        ap_ST_fsm_state38_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) & (grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) & (grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        cf_address0 = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_cf_address0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        cf_address0 = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_cf_address0;
    end else begin
        cf_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        cf_ce0 = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_cf_ce0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        cf_ce0 = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_cf_ce0;
    end else begin
        cf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        cf_d0 = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_cf_d0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        cf_d0 = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_cf_d0;
    end else begin
        cf_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        cf_we0 = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_cf_we0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        cf_we0 = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_cf_we0;
    end else begin
        cf_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_123_ce = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_123_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_123_ce = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_123_p_ce;
    end else begin
        grp_fu_123_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_123_p0 = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_123_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_123_p0 = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_123_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_123_p0 = reg_140;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_123_p0 = select_ln40_reg_264;
    end else begin
        grp_fu_123_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_123_p1 = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_123_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_123_p1 = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_123_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_123_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_123_p1 = select_ln40_reg_264;
    end else begin
        grp_fu_123_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_128_p1 = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_sum_1_out;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_128_p1 = reg_140;
    end else begin
        grp_fu_128_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((sigma_empty_n == 1'b0) | (p_src_cols_empty_n == 1'b0) | (p_src_rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        grp_fu_134_ce = 1'b1;
    end else begin
        grp_fu_134_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_289_ce = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_289_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_289_ce = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_289_p_ce;
    end else begin
        grp_fu_289_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_289_opcode = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_289_p_opcode;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_289_opcode = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_289_p_opcode;
    end else begin
        grp_fu_289_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_289_p0 = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_289_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_289_p0 = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_289_p_din0;
    end else begin
        grp_fu_289_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_289_p1 = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_grp_fu_289_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_289_p1 = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_grp_fu_289_p_din1;
    end else begin
        grp_fu_289_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        in_mat_data1_read = grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_in_mat_data1_read;
    end else begin
        in_mat_data1_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        out_mat_data2_write = grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_out_mat_data2_write;
    end else begin
        out_mat_data2_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_cols_blk_n = p_src_cols_empty_n;
    end else begin
        p_src_cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((sigma_empty_n == 1'b0) | (p_src_cols_empty_n == 1'b0) | (p_src_rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_cols_read = 1'b1;
    end else begin
        p_src_cols_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_rows_blk_n = p_src_rows_empty_n;
    end else begin
        p_src_rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((sigma_empty_n == 1'b0) | (p_src_cols_empty_n == 1'b0) | (p_src_rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_rows_read = 1'b1;
    end else begin
        p_src_rows_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        sigma_blk_n = sigma_empty_n;
    end else begin
        sigma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((sigma_empty_n == 1'b0) | (p_src_cols_empty_n == 1'b0) | (p_src_rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        sigma_read = 1'b1;
    end else begin
        sigma_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((sigma_empty_n == 1'b0) | (p_src_cols_empty_n == 1'b0) | (p_src_rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((1'b1 == ap_CS_fsm_state36) & (grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & (grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln40_fu_189_p2 = (or_ln40_fu_183_p2 & grp_fu_134_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_state1 = ((sigma_empty_n == 1'b0) | (p_src_cols_empty_n == 1'b0) | (p_src_rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign bitcast_ln40_fu_154_p1 = sigma_read_reg_247;

assign bitcast_ln46_fu_202_p1 = grp_fu_128_p2;

assign grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_ap_start = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_48_1_fu_96_ap_start_reg;

assign grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_ap_start = grp_GaussianBlur_3_0_0_2160_3840_1_2_2_Pipeline_VITIS_LOOP_58_2_fu_103_ap_start_reg;

assign grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_start = grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_ap_start_reg;

assign icmp_ln40_1_fu_177_p2 = ((trunc_ln40_fu_167_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_171_p2 = ((tmp_fu_157_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln40_fu_183_p2 = (icmp_ln40_fu_171_p2 | icmp_ln40_1_fu_177_p2);

assign out_mat_data2_din = grp_xfGaussianFilter3x3_0_2160_3840_1_0_1_2_2_1_3840_s_fu_111_out_mat_data2_din;

assign scale2X_fu_212_p1 = xor_ln46_fu_206_p2;

assign select_ln40_fu_195_p3 = ((and_ln40_fu_189_p2[0:0] == 1'b1) ? 32'd1061997773 : sigma_read_reg_247);

assign tmp_fu_157_p4 = {{bitcast_ln40_fu_154_p1[30:23]}};

assign trunc_ln1312_1_fu_150_p1 = p_src_cols_dout[15:0];

assign trunc_ln1312_fu_146_p1 = p_src_rows_dout[15:0];

assign trunc_ln40_fu_167_p1 = bitcast_ln40_fu_154_p1[22:0];

assign xor_ln46_fu_206_p2 = (bitcast_ln46_fu_202_p1 ^ 32'd2147483648);

endmodule //gaussian_filter_accel_GaussianBlur_3_0_0_2160_3840_1_2_2_s
